{"version":3,"file":"component---src-pages-mdx-fields-slug-tsx-content-file-path-content-watsonx-watsonx-data-103-es-md-c2dc7b9878fd2ef7f2fc.js","mappings":"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","sources":["webpack://vad-var-site/./content/Watsonx/WatsonxData/103.es.md","webpack://vad-var-site/./src/pages/{mdx.fields__slug}.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    section: \"section\",\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    ol: \"ol\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\",\n    img: \"img\",\n    strong: \"strong\",\n    blockquote: \"blockquote\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components), {QuizAlert} = _components;\n  if (!QuizAlert) _missingMdxReference(\"QuizAlert\", true);\n  return React.createElement(React.Fragment, null, React.createElement(QuizAlert, {\n    text: \"¡Atención! ¡El material del cuestionario se marcará así!\"\n  }), \"\\n\", React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"1\",\n    \"aria-labelledby\": \"trabajando-con-presto\"\n  }, React.createElement(_components.h1, {\n    id: \"trabajando-con-presto\"\n  }, \"Trabajando con Presto\"), \"\\n\", React.createElement(_components.p, null, \"En \", React.createElement(_components.a, {\n    href: \"/watsonx/watsonxdata/102\"\n  }, \"Lab 02\"), \", ha visto cómo Presto se integra en watsonx.data y la interfaz de usuario de watsonx.data. Sin embargo, también puedes trabajar directamente con Presto.\"), \"\\n\", React.createElement(_components.p, null, \"Por ejemplo, Presto incluye una interfaz de línea de comandos interactiva (CLI) basada en terminal que le permite ejecutar declaraciones SQL. Presto también tiene una interfaz gráfica de usuario basada en web para obtener información sobre la actividad de consultas en el sistema.\"), \"\\n\", React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"interfaz-de-línea-de-comandos-cli-de-presto\"\n  }, React.createElement(_components.h2, {\n    id: \"interfaz-de-línea-de-comandos-cli-de-presto\"\n  }, React.createElement(_components.a, {\n    href: \"#interfaz-de-línea-de-comandos-cli-de-presto\"\n  }, \"Interfaz de línea de comandos (CLI) de Presto\")), \"\\n\", React.createElement(_components.p, null, \"Presto CLI es un shell interactivo basado en terminal que se puede utilizar para ejecutar consultas. Puede conectarse al servidor Presto a través de Presto CLI instalado como parte del paquete ibm-lh-client o mediante Presto CLI instalado por separado.\"), \"\\n\", React.createElement(_components.p, null, \"Presto CLI está preinstalado como parte de watsonx.data Developer Edition. Se inicia utilizando el comando presto-cli (ubicado en /root/ibm-lh-dev/bin).\"), \"\\n\", React.createElement(_components.p, null, \"Presto utiliza un nombre de tres partes para identificar las tablas: catalog.schema.table. Estos identificadores se pueden incluir entre comillas dobles según sea necesario (por ejemplo, \\\"mycatalog\\\".\\\"myschema\\\".\\\"mytable\\\"). Tenga en cuenta que se necesitan comillas dobles si utiliza caracteres especiales en un nombre, como un guión.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Abra una ventana de comando de terminal para el servidor watsonx.data como usuario raíz.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  sudo su - \\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Ejecute los dos comandos siguientes para abrir una terminal interactiva Presto CLI.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  \", React.createElement(_components.span, {\n    className: \"hljs-built_in\"\n  }, \"cd\"), \" /root/ibm-lh-dev/bin\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  ./presto-cli\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Ejecute el siguiente comando para enumerar los catálogos que se han registrado en Presto (Nota: Presto requiere que los comandos terminen con punto y coma).\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  show catalogs;\\n\")), \"\\n\", React.createElement(_components.p, null, \"El resultado debe ser similar al texto siguiente.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/103/show-catalog.png\",\n    alt: \"\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Ejecute la siguiente consulta. Debería devolver un recuento de 1500 filas.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  \", React.createElement(_components.span, {\n    className: \"hljs-keyword\"\n  }, \"select\"), \" count(*) from tpch.tiny.customer;\\n\")), \"\\n\", React.createElement(_components.p, null, \"También puede indicarle a Presto con qué esquema desea trabajar utilizando el comando USE.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Primero, ejecute el siguiente comando para ver los esquemas en el catálogo de tpch.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  show schemas \", React.createElement(_components.span, {\n    className: \"hljs-keyword\"\n  }, \"in\"), \" tpch;\\n\")), \"\\n\", React.createElement(_components.p, null, \"El resultado debe ser similar al texto siguiente.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/103/show-schema.png\",\n    alt: \"\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Ejecute el siguiente comando \", React.createElement(_components.strong, null, \"USE\"), \" para configurar el esquema para la sesión actual:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  use tpch.tiny;\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Ejecute la siguiente consulta. Tenga en cuenta que el catálogo y el esquema no son necesarios. Nuevamente, esto debería devolver un recuento de 1500 filas.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  \", React.createElement(_components.span, {\n    className: \"hljs-keyword\"\n  }, \"select\"), \" count(*) from customer;\\n\")), \"\\n\", React.createElement(_components.p, null, \"Alternativamente, puede proporcionar el catálogo de sesiones y el esquema (o solo el catálogo) cuando inicie Presto CLI. Tenga en cuenta que incluso si especifica el catálogo y el esquema al iniciar Presto CLI o ejecutando el comando USE, aún puede acceder a tablas en otros esquemas y catálogos. Solo tiene que especificar el nombre completo de 3 partes para ellos (o UTILIZAR el esquema en cuestión para cambiar el valor predeterminado de la sesión).\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Salga de Presto CLI ejecutando el siguiente comando.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  quit;\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Inicie Presto CLI nuevamente, pero esta vez especifique el catálogo de sesión y el esquema como opciones de línea de comando.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  ./presto-cli --catalog tpch --schema tiny\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Ejecute la siguiente consulta. Observe que esta vez no se requieren el catálogo ni el esquema. Nuevamente, esto debería devolver un recuento de 1500 filas.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  \", React.createElement(_components.span, {\n    className: \"hljs-keyword\"\n  }, \"select\"), \" count(*) from customer;\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Salga de Presto CLI ejecutando el siguiente comando.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  quit;\\n\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"A continuación, creará un nuevo esquema y tabla. Al utilizar Presto para crear un esquema en watsonx.data, debe especificar el depósito de almacenamiento de objetos asociado con el catálogo.\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"12\"\n  }, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Inicie Presto CLI y especifique que desea utilizar el catálogo iceberg_data.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  ./presto-cli --catalog iceberg_data\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Ejecute la siguiente instrucción SQL para crear un nuevo esquema en el catálogo.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  create schema \", React.createElement(_components.span, {\n    className: \"hljs-keyword\"\n  }, \"if\"), \" not exists newschema with (location=\", React.createElement(_components.span, {\n    className: \"hljs-string\"\n  }, \"'s3a://iceberg-bucket/newschema'\"), \");\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Ejecute el siguiente comando para ver una lista de los esquemas en el catálogo que se están utilizando.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  show schemas;\\n\")), \"\\n\", React.createElement(_components.p, null, \"El newesquema debe aparecer en la lista.\"), \"\\n\", React.createElement(QuizAlert, {\n    text: \"Material del cuestionario: presta atención al script\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Ejecute las siguientes instrucciones SQL para crear una nueva tabla en este esquema, complete la tabla con algunos datos y luego consulte la tabla.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"create table newschema.users (\", React.createElement(_components.span, {\n    className: \"hljs-built_in\"\n  }, \"id\"), \" int, name varchar, age int);\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  insert into newschema.users values (1, \", React.createElement(_components.span, {\n    className: \"hljs-string\"\n  }, \"'Robert'\"), \", 54);\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  insert into newschema.users values (2, \", React.createElement(_components.span, {\n    className: \"hljs-string\"\n  }, \"'Susan'\"), \", 37);\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  \", React.createElement(_components.span, {\n    className: \"hljs-keyword\"\n  }, \"select\"), \" * from newschema.users;\\n\")), \"\\n\", React.createElement(_components.p, null, \"El resultado de la declaración SELECT final debería ser similar a lo que se muestra a continuación.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/103/select-user.png\",\n    alt: \"\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Ejecute los dos comandos siguientes para mostrar la tabla en el nuevo esquema.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  use newschema;\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  show tables;\\n\")), \"\\n\", React.createElement(_components.p, null, \"El resultado de la declaración SHOW TABLES debería ser similar al que se muestra a continuación.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/103/show-table.png\",\n    alt: \"\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Salga de Presto CLI ejecutando el siguiente comando.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  quit;\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Abra la interfaz de usuario de watsonx.data en una ventana del navegador (si aún no tiene una abierta).\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Seleccione el ícono \", React.createElement(_components.strong, null, \"Administrador de datos\"), \" en el menú del lado izquierdo.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Expanda el catálogo \", React.createElement(_components.strong, null, \"iceberg_data\"), \" para ver el nuevo esquema que creó (newschema).\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/103/ui-newschema.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Nota:\"), \" Si no ve el esquema en la lista, coloque el puntero del mouse sobre el extremo derecho de la línea del catálogo iceberg_data hasta que vea aparecer el ícono Actualizar. Haga clic en el icono Actualizar. Ahora debería ver el esquema enumerado como en la imagen de arriba.\"), \"\\n\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"21\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Expanda el esquema \", React.createElement(_components.strong, null, \"newschema\"), \" para ver la nueva tabla que creó (usuarios).\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/103/ui-newschema-table.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"La tabla que creó a través de Presto CLI es visible a través de la interfaz de usuario watsonx.data. Este es uno de los beneficios de tener un metastore compartido. En el futuro, cualquier motor de consulta que se asocie con el catálogo iceberg_data también podrá trabajar con esta tabla.\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"interfaz-web-presto\"\n  }, React.createElement(_components.h2, {\n    id: \"interfaz-web-presto\"\n  }, React.createElement(_components.a, {\n    href: \"#interfaz-web-presto\"\n  }, \"Interfaz web presto\")), \"\\n\", React.createElement(_components.p, null, \"Presto incluye su propia interfaz web (consola) para monitorear y administrar consultas de Presto. Es un excelente lugar para obtener información sobre consultas en ejecución y consultas completadas. Esto incluye el texto de la consulta, el estado de la consulta, el nombre del usuario que ejecutó la consulta y el porcentaje completado si aún se está ejecutando.\"), \"\\n\", React.createElement(_components.p, null, \"A cada consulta se le asigna un ID de consulta único y al hacer clic en el ID aparece una página de Detalles de la consulta con información adicional sobre la consulta.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Desde su computadora, abra la consola Presto en su navegador. La URL se puede encontrar en los \", React.createElement(_components.strong, null, \"detalles de reserva de TechZone\"), \" (consulte la línea de la consola Presto en la sección Servicios publicados)\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/103/presto.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Inmediatamente comienza en la página \", React.createElement(_components.strong, null, \"Descripción general del clúster\"), \". La parte superior de la página incluye varias métricas relacionadas con el medio ambiente.\"), \"\\n\", React.createElement(_components.p, null, \"La sección Detalles de la consulta en la parte inferior de la página enumera las consultas que coinciden con el filtro de estado que se aplica. De forma predeterminada, solo se muestran las consultas que se ejecutan activamente, por lo que probablemente no vea ninguna consulta enumerada aquí.\"), \"\\n\", React.createElement(QuizAlert, {\n    text: \"Material del cuestionario: preste atención a todas las opciones en la página Detalles de la consulta\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Seleccione el botón \", React.createElement(_components.strong, null, \"Finalizado\"), \" para incluir las consultas que terminaron de ejecutarse.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/103/presto-finished.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Ahora debería ver las consultas en la lista. Es posible que reconozca algunas como consultas que ejecutó y otras pueden haber sido ejecutadas internamente por el sistema.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/103/presto-query-detail.png\",\n    alt: \"\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Haga clic en el enlace \", React.createElement(_components.strong, null, \"ID de consulta\"), \" para ver una consulta que le parezca interesante.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/103/presto-query-id.png\",\n    alt: \"\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Esto abre una nueva ventana del navegador con la página Detalles de la consulta para esa consulta específica. Hay varias pestañas y, de forma predeterminada, comienza en la pestaña \", React.createElement(_components.strong, null, \"Descripción general\"), \".\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/103/presto-query-id-detail.png\",\n    alt: \"\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Desplácese hacia abajo en la página para familiarizarse con la información disponible.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Seleccione la pestaña \", React.createElement(_components.strong, null, \"Plan en vivo\"), \" en la parte superior de la página.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/103/presto-query-id-live-plan.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Aquí puede ver el plan de ejecución de la consulta y los diversos pasos involucrados en la ejecución de la consulta (su plan de ejecución se verá diferente ya que depende de la consulta que elija). Este resultado es similar al que se ve en el resultado de explicación visual de watsonx.data.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Haga clic en el \", React.createElement(_components.strong, null, \"logotipo de Presto\"), \" en la parte superior izquierda para regresar a la página \", React.createElement(_components.strong, null, \"Descripción general del clúster\"), \".\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/103/presto-logo.png\",\n    alt: \"\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Cuando haya terminado de explorar la consola Presto, cierre la ventana del navegador (y cualquier otra ventana de la consola Presto que aún esté abierta).\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"3\",\n    \"aria-labelledby\": \"felicitaciones-has-llegado-al-final-del-laboratorio-103\"\n  }, React.createElement(_components.h3, {\n    id: \"felicitaciones-has-llegado-al-final-del-laboratorio-103\"\n  }, React.createElement(_components.a, {\n    href: \"#felicitaciones-has-llegado-al-final-del-laboratorio-103\"\n  }, \"Felicitaciones, has llegado al final del laboratorio 103.\")), \"\\n\", React.createElement(_components.p, null, \"Haga clic en \", React.createElement(_components.a, {\n    href: \"/watsonx/watsonxdata/104\"\n  }, \"lab 104\"), \" para comenzar la siguiente práctica de laboratorio.\")))));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/VAD-VAR-Workshop/VAD-VAR-Workshop/content/Watsonx/WatsonxData/103.es.md\";\nimport React, {useRef, useState} from 'react';\nimport cx from 'classnames';\nimport SEO from '@components/SEO';\nimport PageHeader from '@components/PageHeader';\nimport MDXWrapper from '@components/MDXWrapper';\nimport ContentWrapper from '@components/ContentWrapper';\nimport TableOfContents from '@components/TableOfContents';\nimport * as styles from '@styles/pages/{mdx.fields__slug}.module.scss';\nconst Content = props => {\n  const {data: {mdx: {tableOfContents: {items: tocItems}, frontmatter: {toc = true, title, timeToComplete, updated}}}, children} = props;\n  const articleRef = useRef(null);\n  const {0: currSection} = useState('');\n  const showToc = (toc === null ? true : toc) && tocItems;\n  return React.createElement(React.Fragment, null, React.createElement(PageHeader, {\n    timeToComplete,\n    updated\n  }, tocItems[0].title || title || ''), React.createElement(ContentWrapper, {\n    className: styles.wrapper\n  }, React.createElement(\"article\", {\n    className: cx(styles.article, !showToc && styles.noToc),\n    ref: articleRef\n  }, React.createElement(MDXWrapper, {\n    components: {\n      h1: () => null\n    }\n  }, children)), showToc && React.createElement(TableOfContents, {\n    itemsList: tocItems,\n    maxDepth: 2,\n    currSection: currSection\n  })));\n};\nconst pageQuery = \"3587680389\";\nexport const Head = props => {\n  const {location: {pathname}, data: {mdx: {frontmatter: {title}, tableOfContents: {items}}}} = props;\n  return React.createElement(SEO, {\n    pathname,\n    title: title || items[0].title || undefined\n  });\n};\nContent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Content, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","section","h1","p","a","h2","ol","li","pre","code","span","img","strong","blockquote","h3","_provideComponents","components","QuizAlert","id","component","Error","_missingMdxReference","React","text","className","href","src","alt","start","wrapper","MDXLayout","Content","data","mdx","tableOfContents","items","tocItems","frontmatter","toc","title","timeToComplete","updated","children","articleRef","useRef","currSection","useState","showToc","PageHeader","ContentWrapper","styles","cx","ref","MDXWrapper","TableOfContents","itemsList","maxDepth","Head","location","pathname","SEO","undefined","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}