{"version":3,"file":"component---src-pages-mdx-fields-slug-tsx-content-file-path-content-q-radar-siem-104-md-f0ebb57e16a4ae634211.js","mappings":"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","sources":["webpack://vad-var-site/./content/QRadar-SIEM/104.md","webpack://vad-var-site/./src/pages/{mdx.fields__slug}.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    section: \"section\",\n    h1: \"h1\",\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\",\n    h3: \"h3\",\n    blockquote: \"blockquote\",\n    strong: \"strong\",\n    ol: \"ol\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\",\n    img: \"img\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    ul: \"ul\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"1\",\n    \"aria-labelledby\": \"log-sources\"\n  }, React.createElement(_components.h1, {\n    id: \"log-sources\"\n  }, \"Log Sources\"), \"\\n\", React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"introduction\"\n  }, React.createElement(_components.h2, {\n    id: \"introduction\"\n  }, React.createElement(_components.a, {\n    href: \"#introduction\"\n  }, \"Introduction\")), \"\\n\", React.createElement(_components.p, null, \"The core functions of IBM QRadar SIEM are managing network security by monitoring flows and events.\"), \"\\n\", React.createElement(_components.p, null, \"A significant difference between event and flow data is that an event, which typically is a log of a specific action such as a user login, or a VPN connection, occurs at a specific time and the event is logged at that time. A flow is a record of network activity that can last for seconds, minutes, hours, or days, depending on the activity within the session. For example, a web request might download multiple files such as images, ads, video, and last for 5 to 10 seconds, or a user who watches a Netflix movie might be in a network session that lasts up to a few hours. The flow is a record of network activity between two hosts.\"), \"\\n\", React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"3\",\n    \"aria-labelledby\": \"events\"\n  }, React.createElement(_components.h3, {\n    id: \"events\"\n  }, React.createElement(_components.a, {\n    href: \"#events\"\n  }, \"Events\")), \"\\n\", React.createElement(_components.p, null, \"QRadar accepts event logs from log sources that are on your network. A log source is a data source such as a firewall or intrusion protection system (IPS) that creates an event log.\"), \"\\n\", React.createElement(_components.p, null, \"QRadar accepts events from log sources by using protocols such as syslog, syslog-tcp, and SNMP. QRadar can also set up outbound connections to retrieve events by using protocols such as SCP, SFTP, FTP, JDBC, Check Point OPSEC, and SMB/CIFS.\"), \"\\n\", React.createElement(_components.p, null, \"If QRadar has never received events from a log source, the new events are listed with a Low Level Category of \\\"Unknown\\\" in the Log Activity tab. QRadar can autodiscover many log sources, and after a certain amount of time (or processed log events), QRadar will properly assign the correct log source. Sometimes, however, QRadar cannot figure out the proper log source behind the collected data, and those events show a Low Level Category of \\\"Stored\\\".\"), \"\\n\", React.createElement(_components.p, null, \"In this lab, you configure QRadar to recognize an unknown event. You extract additional properties from the raw event payload. You use the Log Source Management (LSM) app to configure and manage single and bulk log sources. You also test a new log source.\"), \"\\n\")), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"analyzing-an-unknown-event\"\n  }, React.createElement(_components.h2, {\n    id: \"analyzing-an-unknown-event\"\n  }, React.createElement(_components.a, {\n    href: \"#analyzing-an-unknown-event\"\n  }, \"Analyzing an Unknown Event\")), \"\\n\", React.createElement(_components.p, null, \"In this exercise, you will analyze an event received from an unknown log source. When processed by the event pipeline, this type of event is labeled as KNOWN. When events are detected for the wrong log source type, they are assigned the STORED low level category. After they are analyzed, you might decide what new log sources you need to create.\"), \"\\n\", React.createElement(_components.p, null, \"To simulate sending the log sources to QRadar, you log in to the QRadar Console by using the SSH terminal and running a script.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"If you are using the WireGuard VPN configured in \", React.createElement(_components.strong, null, \"101: QRadar Demo Setup\"), \" to access the demo environment then you can perform the following activities from your workstation. If you have not configured VPN access you can perform the activities from the jump server.\"), \"\\n\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Open the browser and access the Console at the following URL:\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"https://172.16.60.10\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Log in by using the admin account and password \\\"Q1d3m0.Demo\\\".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"To load default search filters, double-click the \", React.createElement(_components.strong, null, \"Log Activity\"), \" tab.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"These exercises use the classic QRadar UI and not the New QRadar UI.\"), \"\\n\", React.createElement(_components.p, null, \"If you need to return to the classic UI, go to the URL: \", React.createElement(_components.a, {\n    href: \"https://172.16.60.10\"\n  }, \"https://172.16.60.10\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Do NOT close the browser. While your browser is waiting to display real-time events, open the SSH terminal and log in to QRadar as root by using the following command:\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"ssh root@172.16.60.10\\n\")), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"At the password prompt, type \\\"Q1d3m0\\\".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"To generate events, type the following commands:\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, React.createElement(_components.span, {\n    className: \"hljs-built_in\"\n  }, \"cd\"), \" /labfiles/extended/labfiles/logsources\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"/opt/qradar/bin/logrun.pl -f checkpoint1.syslog 1\\n\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"The /labfiles/extended/labfiles directory was uploaded to the QRadar server in the \", React.createElement(_components.strong, null, \"103: Advanced Lab Setup\"), \" exercises.\"), \"\\n\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Go back to the browser window.\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Note:\"), \" The Console detected three events with the STORED Low Level Category. Because we use the localhost context for these events (127.0.0.1), the Event Name can vary. In the screen captures below you see an Event Name of \\\"Search Results Message\\\", but it can also be \\\"Anomaly Detection Engine\\\" or others.\"), \"\\n\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"To open any of the events, click the \", React.createElement(_components.strong, null, \"pause\"), \" icon in the upper-right part of the Console. This action pauses the real-time event capturing.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"To review the event details, double-click any of the three events.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//QRadar-SIEM/images/104/image6.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"On the Event details page, scroll down to the Payload Information section and click \", React.createElement(_components.strong, null, \"Wrap Text\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//QRadar-SIEM/images/104/image7.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Analyze the raw payload and note that the source and destination IP addresses are not parsed correctly by comparing the addresses with the ones listed in the Source and Destination Information section.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"At this point, you conclude that QRadar did not correctly process this event. You can determine the source of the generated log and create a proper log source. Also, on many occasions, if QRadar receives enough log events to process, it can autodiscover the log source and decide on the log source that best matches the events.\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"viewing-autodiscovered-log-sources\"\n  }, React.createElement(_components.h2, {\n    id: \"viewing-autodiscovered-log-sources\"\n  }, React.createElement(_components.a, {\n    href: \"#viewing-autodiscovered-log-sources\"\n  }, \"Viewing Autodiscovered Log Sources\")), \"\\n\", React.createElement(_components.p, null, \"QRadar autodiscovers many log sources after it receives several logs of a specific type. You don't need to configure the log source for QRadar to recognize the events from that log source. In this exercise, you analyze an autodiscovered log source.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Start with the Console. To load default search filters, double-click the \", React.createElement(_components.strong, null, \"Log Activity\"), \" tab.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Then, in the QRadar SSH terminal, run the following script from the /labfiles/extended/labfiles/logsources directory:\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"/opt/qradar/bin/logrun.pl -f checkpoint.syslog 10\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"3\"\n  }, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Go back to the browser window and observe the events that are displayed in the Console.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"After about 30 seconds, you notice that the Event Name column starts to show Firewall Permit, the LogSource is named Check Point, and Low Level Category is updated to Firewall Permit.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//QRadar-SIEM/images/104/image8.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"5\"\n  }, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"To pause the real-time events, in the upper-right part of the Console, click the \", React.createElement(_components.strong, null, \"pause\"), \" icon.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Double-click any \", React.createElement(_components.strong, null, \"Firewall Permit\"), \" event, and note that the parsed Source IP and Destination IP match the IP addresses in the raw payload.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//QRadar-SIEM/images/104/image9.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"You learned that QRadar can autodiscover some logs after it receives some events. However, not all logs are autodiscovered, and for these, you must create log sources manually by using the Log Source Management app. If you do not want to lose some of the information in the early events while you wait for QRadar to parse them, you can also use this method for the autodiscovered log sources.\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"use-log-source-management-app-to-configure-a-log-source\"\n  }, React.createElement(_components.h2, {\n    id: \"use-log-source-management-app-to-configure-a-log-source\"\n  }, React.createElement(_components.a, {\n    href: \"#use-log-source-management-app-to-configure-a-log-source\"\n  }, \"Use Log Source Management App to Configure a Log Source\")), \"\\n\", React.createElement(_components.p, null, \"In this exercise, you configure a Symantec Endpoint Protection log source and analyze the events from this log source. To configure a log source, you must use the Log Source Management (LSM) app.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"From the browser, go to the Admin Console.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"In the Admin Console, scroll to the Apps section and click \", React.createElement(_components.strong, null, \"QRadar Log Source Management\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"In the LSM app, click \", React.createElement(_components.strong, null, \"Log Sources.\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"In the LSM app dashboard, in the upper-right part of the window, click \", React.createElement(_components.strong, null, \"New Log Source\"), \".\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//QRadar-SIEM/images/104/image12.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"5\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Click \", React.createElement(_components.strong, null, \"Single Log Source\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//QRadar-SIEM/images/104/image13.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Stop and browse through the long list of available log sources. This shows you all the log sources QRadar can integrate with out of the box.\"), \"\\n\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"6\"\n  }, \"\\n\", React.createElement(_components.li, null, \"In the Select a Log Source Type step, in the \", React.createElement(_components.strong, null, \"Look up Log Source Type\"), \" field, type \\\"Symantec\\\".\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//QRadar-SIEM/images/104/image14.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"7\"\n  }, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"From the list, select \", React.createElement(_components.strong, null, \"Symantec Endpoint Protection\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Click \", React.createElement(_components.strong, null, \"Step 2: Select Protocol Type\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"In the Select Protocol Type step, confirm that \", React.createElement(_components.strong, null, \"Syslog\"), \" is highlighted.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//QRadar-SIEM/images/104/image15.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"10\"\n  }, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Click \", React.createElement(_components.strong, null, \"Step 3: Configure Log Source Parameters\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"In the Configure Log Source Parameters step, complete the parameters by using the following table.\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, React.createElement(_components.strong, null, \"Parameter\")), React.createElement(_components.th, null, React.createElement(_components.strong, null, \"Value\")))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, \"Name\"), React.createElement(_components.td, null, \"Endpoint Protection\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"Description\"), React.createElement(_components.td, null, \"Symantec Endpoint Protection\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"Coalescing Events\"), React.createElement(_components.td, null, \"OFF (disabled)\")))), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Click \", React.createElement(_components.strong, null, \"Step 4: Configure Protocol Parameters\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"In the \", React.createElement(_components.strong, null, \"Log Source Identifier\"), \" field, type \", React.createElement(_components.code, null, \"172.16.60.10\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Click \", React.createElement(_components.strong, null, \"Finish\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Close the \", React.createElement(_components.strong, null, \"Log Source Management\"), \" app.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"In the Admin Console, you see the message that \\\"There are undeployed changes.\\\" Click \", React.createElement(_components.strong, null, \"Deploy Changes\"), \".\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Hint:\"), \" Deploying changes in the lab environment can take ~ 1-2 minutes.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"You manually created a new log source that uses the syslog protocol. After you create a new log source, you must deploy changes to the Console.\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"summary\"\n  }, React.createElement(_components.h2, {\n    id: \"summary\"\n  }, React.createElement(_components.a, {\n    href: \"#summary\"\n  }, \"Summary\")), \"\\n\", React.createElement(_components.p, null, \"This has been a very quick introduction to QRadar log sources. You have seen\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"How to view QRadar's raw log stream\"), \"\\n\", React.createElement(_components.li, null, \"How to analyze an event that comes from an unrecognized source\"), \"\\n\", React.createElement(_components.li, null, \"How to configure a log source\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"To view applications that provide log sources for QRadar visit the X-Force App Exchange at: \", React.createElement(_components.a, {\n    href: \"https://exchange.xforce.ibmcloud.com/hub?br=QRadar&con=CO31&ippc=64&ippr=64\"\n  }, \"https://exchange.xforce.ibmcloud.com/hub?br=QRadar&con=CO31&ippc=64&ippr=64\"), \".\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/VAD-VAR-Workshop/VAD-VAR-Workshop/content/QRadar-SIEM/104.md\";\nimport React, {useRef, useState} from 'react';\nimport cx from 'classnames';\nimport SEO from '@components/SEO';\nimport PageHeader from '@components/PageHeader';\nimport MDXWrapper from '@components/MDXWrapper';\nimport ContentWrapper from '@components/ContentWrapper';\nimport TableOfContents from '@components/TableOfContents';\nimport * as styles from '@styles/pages/{mdx.fields__slug}.module.scss';\nconst Content = props => {\n  const {data: {mdx: {tableOfContents: {items: tocItems}, frontmatter: {toc = true, title, timeToComplete, updated}}}, children} = props;\n  const articleRef = useRef(null);\n  const {0: currSection} = useState('');\n  const showToc = (toc === null ? true : toc) && tocItems;\n  return React.createElement(React.Fragment, null, React.createElement(PageHeader, {\n    timeToComplete,\n    updated\n  }, tocItems[0].title || title || ''), React.createElement(ContentWrapper, {\n    className: styles.wrapper\n  }, React.createElement(\"article\", {\n    className: cx(styles.article, !showToc && styles.noToc),\n    ref: articleRef\n  }, React.createElement(MDXWrapper, {\n    components: {\n      h1: () => null\n    }\n  }, children)), showToc && React.createElement(TableOfContents, {\n    itemsList: tocItems,\n    maxDepth: 2,\n    currSection: currSection\n  })));\n};\nconst pageQuery = \"3587680389\";\nexport const Head = props => {\n  const {location: {pathname}, data: {mdx: {frontmatter: {title}, tableOfContents: {items}}}} = props;\n  return React.createElement(SEO, {\n    pathname,\n    title: title || items[0].title || undefined\n  });\n};\nContent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Content, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","section","h1","h2","a","p","h3","blockquote","strong","ol","li","pre","code","span","img","table","thead","tr","th","tbody","td","ul","_provideComponents","components","React","className","id","href","start","src","alt","wrapper","MDXLayout","Content","data","mdx","tableOfContents","items","tocItems","frontmatter","toc","title","timeToComplete","updated","children","articleRef","useRef","currSection","useState","showToc","PageHeader","ContentWrapper","styles","cx","ref","MDXWrapper","TableOfContents","itemsList","maxDepth","Head","location","pathname","SEO","undefined","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}