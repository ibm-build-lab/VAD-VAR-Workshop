{"version":3,"file":"component---src-pages-mdx-fields-slug-tsx-content-file-path-content-watsonx-watsonx-data-105-md-8eeaefc9577bad340c73.js","mappings":"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","sources":["webpack://vad-var-site/./content/Watsonx/WatsonxData/105.md","webpack://vad-var-site/./src/pages/{mdx.fields__slug}.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    section: \"section\",\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\",\n    strong: \"strong\",\n    ol: \"ol\",\n    li: \"li\",\n    img: \"img\",\n    blockquote: \"blockquote\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"data-ingest\"\n  }, React.createElement(_components.h2, {\n    id: \"data-ingest\"\n  }, React.createElement(_components.a, {\n    href: \"#data-ingest\"\n  }, \"Data Ingest\")), \"\\n\", React.createElement(_components.p, null, \"Data ingestion is the process of importing and loading data into watsonx.data. Multiple methods are available to ingest data into watsonx.data, including:\"), \"\\n\", React.createElement(_components.p, null, \"• The \", React.createElement(_components.strong, null, \"Create table from file\"), \" option on the \", React.createElement(_components.strong, null, \"Data manager\"), \" page\"), \"\\n\", React.createElement(_components.p, null, \"• The standalone, non-Developer Edition of watsonx.data includes an \", React.createElement(_components.strong, null, \"Ingestion jobs\"), \" tab on the \", React.createElement(_components.strong, null, \"Data manager\"), \" page, where data can be read from a source object storage bucket and ingested into a table. However, as this lab uses the Developer Edition, it is not available to use here.\"), \"\\n\", React.createElement(_components.p, null, \"• Installation of the \", React.createElement(_components.strong, null, \"ibm-lh\"), \" command line tool and using commands to create a job to ingest files from S3-compatible object storage or a local file system.\"), \"\\n\", React.createElement(_components.p, null, \"• Loading the data file(s) for a table into an object storage bucket (if they don’t already reside in object storage), registering the bucket with watsonx.data, and creating a table on top of the file(s) using SQL.\"), \"\\n\", React.createElement(_components.p, null, \"In this section you will use the MinIO console to upload a Parquet data file into object storage and then you will create a table on it using SQL in Presto.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Download the \", React.createElement(_components.strong, null, \"aircraft.parquet\"), \" file from \", React.createElement(_components.a, {\n    href: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content/Watsonx/WatsonxData/files/aircraft.parquet\"\n  }, \"here\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"If you don’t already have the \", React.createElement(_components.strong, null, \"MinIO\"), \" console open, open it in a new browser window. Use the credentials (\", React.createElement(_components.strong, null, \"access key\"), \" and \", React.createElement(_components.strong, null, \"secret key\"), \") you made note of earlier.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Because you are uploading a data file that is not “wrapped” in the Iceberg table format, it needs to use a Hive catalog. You will use the existing \", React.createElement(_components.strong, null, \"hive_data\"), \" catalog which is associated with the \", React.createElement(_components.strong, null, \"hive-bucket\"), \" bucket.\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"3\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Click the row for the \", React.createElement(_components.strong, null, \"hive-bucket\"), \" bucket.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/105/di-hive.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"4\"\n  }, \"\\n\", React.createElement(_components.li, null, \"In the \", React.createElement(_components.strong, null, \"hive-bucket\"), \" panel, click the \", React.createElement(_components.strong, null, \"Create new path\"), \" button.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/105/di-hive-new.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"5\"\n  }, \"\\n\", React.createElement(_components.li, null, \"In the \", React.createElement(_components.strong, null, \"Choose or create a new path\"), \" pop-up window, enter \", React.createElement(_components.strong, null, \"myschema2/aircraft\"), \" for the \", React.createElement(_components.strong, null, \"New Folder Path\"), \". Then, click the \", React.createElement(_components.strong, null, \"Create\"), \" button.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/105/di-hive-new-path.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"This is going to create nested folders under the current bucket. The top-level folder (\", React.createElement(_components.strong, null, \"myschema2\"), \") should match the name of the schema you are going to create later, and the next folder down (\", React.createElement(_components.strong, null, \"aircraft\"), \") should match the name of the table you are going to create later.\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"6\"\n  }, \"\\n\", React.createElement(_components.li, null, \"You are instructed to upload a file. Click the \", React.createElement(_components.strong, null, \"Upload\"), \" button in the upper-right and then click \", React.createElement(_components.strong, null, \"Upload File\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/105/di-hive-new-upload.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Note:\"), \" You are also given the option of uploading a folder. If you already have a set of files in folders organized by schema and table, you could upload the entire folder (in which case you wouldn’t have to create a new path for the table as you did above, as the path is already reflected in the folder being uploaded).\"), \"\\n\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"7\"\n  }, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Locate, select, and upload the \", React.createElement(_components.strong, null, \"aircraft.parquet\"), \" file you downloaded earlier.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Click the \", React.createElement(_components.strong, null, \"Downloads/Uploads\"), \" icon to close the Downloads/Uploads panel.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/105/di-hive-new-upload-close.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"9\"\n  }, \"\\n\", React.createElement(_components.li, null, \"If the folder appears empty, click the \", React.createElement(_components.strong, null, \"Refresh\"), \" button in the upper-right. If the folder is still showing as empty, navigate up one level to the parent folder (\", React.createElement(_components.strong, null, \"myschema2\"), \") and then navigate back down to this folder (\", React.createElement(_components.strong, null, \"aircraft\"), \"). If this still doesn’t work, refresh the browser window.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/105/di-hive-new-upload-refresh.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"The file should now be listed, as in the image below.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/105/di-hive-new-upload-view.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"10\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Close the MinIO console browser window as you no longer need to use it.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"You will now create a schema and a table to match the file that you uploaded. You will use the \", React.createElement(_components.strong, null, \"Presto CLI\"), \", but alternatively you could also use the \", React.createElement(_components.strong, null, \"Query workspace\"), \" page in the watsonx.data web interface.\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"11\"\n  }, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Open a terminal command window to the watsonx.data server as the \", React.createElement(_components.strong, null, \"root\"), \" user.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Run the following command to open a Presto CLI interactive terminal.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"/root/ibm-lh-dev/bin/presto-cli\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"13\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Run the following SQL statement to create the \", React.createElement(_components.strong, null, \"myschema2\"), \" schema (based on the catalog/bucket being used and the schema folder name you specified when uploading the file to object storage earlier; the schema name doesn’t have to match, but it’s easier to manage this way).\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"create schema hive_data.myschema2 with (location = \", React.createElement(_components.span, {\n    className: \"hljs-string\"\n  }, \"'s3a://hive-bucket/myschema2'\"), \");\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"14\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Run the following SQL statement to create the \", React.createElement(_components.strong, null, \"aircraft\"), \" table.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"create table hive_data.myschema2.aircraft (tail_number varchar, manufacturer varchar, model varchar) with (format = \", React.createElement(_components.span, {\n    className: \"hljs-string\"\n  }, \"'Parquet'\"), \", external_location=\", React.createElement(_components.span, {\n    className: \"hljs-string\"\n  }, \"'s3a://hive-bucket/myschema2/aircraft'\"), \");\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"15\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Validate that the \", React.createElement(_components.strong, null, \"aircraft\"), \" table has been created correctly by querying the number of rows in it.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, React.createElement(_components.span, {\n    className: \"hljs-keyword\"\n  }, \"select\"), \" count(*) from hive_data.myschema2.aircraft;\\n\")), \"\\n\", React.createElement(_components.p, null, \"There should be 13,101 rows returned. Your table just read the data out of the file you uploaded into object storage!\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"16\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Quit from the Presto CLI by running the following command.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"quit;\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"17\"\n  }, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Open the watsonx.data user interface in a browser window (if you don’t already have it open).\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Select the \", React.createElement(_components.strong, null, \"Data manager\"), \" icon from the left-side menu.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Expand the \", React.createElement(_components.strong, null, \"hive_data\"), \" catalog to see the new schema you created (\", React.createElement(_components.strong, null, \"myschema2\"), \").\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/105/watsonx-data-manager.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Note:\"), \" If you don’t see the schema listed then hover your mouse pointer over the far right of the line for the hive_data catalog until you see the Refresh icon appear. Click the Refresh icon. You should now see the schema listed as in the above image.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/105/watsonx-data-manager-refresh.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"20\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Expand the \", React.createElement(_components.strong, null, \"myschema2\"), \" schema to see the new table you created (\", React.createElement(_components.strong, null, \"aircraft\"), \").\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/105/watsonx-data-manager-data.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"The table you just created through the Presto CLI – which is based on a data file you uploaded into object storage – is visible through the watsonx.data user interface. This is one of the benefits of having a shared metastore. In the future, any query engines that get associated with the hive_data catalog would also be able to work with this table.\"), \"\\n\", React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"3\",\n    \"aria-labelledby\": \"congratulations-youve-reached-the-end-of-lab-105\"\n  }, React.createElement(_components.h3, {\n    id: \"congratulations-youve-reached-the-end-of-lab-105\"\n  }, React.createElement(_components.a, {\n    href: \"#congratulations-youve-reached-the-end-of-lab-105\"\n  }, \"Congratulations, you've reached the end of lab 105.\")), \"\\n\", React.createElement(_components.p, null, \"Click, \", React.createElement(_components.a, {\n    href: \"/watsonx/watsonxdata/106\"\n  }, \"lab 106\"), \" to start next lab.\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/VAD-VAR-Workshop/VAD-VAR-Workshop/content/Watsonx/WatsonxData/105.md\";\nimport React, {useRef, useState} from 'react';\nimport cx from 'classnames';\nimport SEO from '@components/SEO';\nimport PageHeader from '@components/PageHeader';\nimport MDXWrapper from '@components/MDXWrapper';\nimport ContentWrapper from '@components/ContentWrapper';\nimport TableOfContents from '@components/TableOfContents';\nimport * as styles from '@styles/pages/{mdx.fields__slug}.module.scss';\nconst Content = props => {\n  const {data: {mdx: {tableOfContents: {items: tocItems}, frontmatter: {toc = true, title, timeToComplete, updated}}}, children} = props;\n  const articleRef = useRef(null);\n  const {0: currSection} = useState('');\n  const showToc = (toc === null ? true : toc) && tocItems;\n  return React.createElement(React.Fragment, null, React.createElement(PageHeader, {\n    timeToComplete,\n    updated\n  }, tocItems[0].title || title || ''), React.createElement(ContentWrapper, {\n    className: styles.wrapper\n  }, React.createElement(\"article\", {\n    className: cx(styles.article, !showToc && styles.noToc),\n    ref: articleRef\n  }, React.createElement(MDXWrapper, {\n    components: {\n      h1: () => null\n    }\n  }, children)), showToc && React.createElement(TableOfContents, {\n    itemsList: tocItems,\n    maxDepth: 2,\n    currSection: currSection\n  })));\n};\nconst pageQuery = \"3587680389\";\nexport const Head = props => {\n  const {location: {pathname}, data: {mdx: {frontmatter: {title}, tableOfContents: {items}}}} = props;\n  return React.createElement(SEO, {\n    pathname,\n    title: title || items[0].title || undefined\n  });\n};\nContent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Content, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","section","h2","a","p","strong","ol","li","img","blockquote","pre","code","span","h3","_provideComponents","components","React","className","id","href","start","src","alt","wrapper","MDXLayout","Content","data","mdx","tableOfContents","items","tocItems","frontmatter","toc","title","timeToComplete","updated","children","articleRef","useRef","currSection","useState","showToc","PageHeader","ContentWrapper","styles","cx","ref","MDXWrapper","h1","TableOfContents","itemsList","maxDepth","Head","location","pathname","SEO","undefined","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}