"use strict";(self.webpackChunkvad_var_site=self.webpackChunkvad_var_site||[]).push([[4276],{63479:function(e,t,n){n.r(t),n.d(t,{Head:function(){return E},default:function(){return f}});var l=n(11151),a=n(67294);function o(e){const t=Object.assign({section:"section",h1:"h1",p:"p",h2:"h2",a:"a",ol:"ol",li:"li",strong:"strong",code:"code",img:"img",ul:"ul",blockquote:"blockquote",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",h3:"h3",pre:"pre",em:"em"},(0,l.ah)(),e.components),{QuizAlert:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("QuizAlert",!0),a.createElement(a.Fragment,null,a.createElement(n,{text:"Heads Up! Quiz material will be flagged like this!"}),"\n",a.createElement(t.section,{className:"heading","data-heading-rank":"1","aria-labelledby":"watsonxai-l3-part-2-model-parameters-and-prompting-for-output-formats"},a.createElement(t.h1,{id:"watsonxai-l3-part-2-model-parameters-and-prompting-for-output-formats"},"watsonx.ai L3 Part 2: Model parameters and prompting for output formats"),"\n",a.createElement(t.p,null,"This is Part 2 of the watsonx.ai L3 badge lab. In the previous lab, we experimented with different foundation models and saw how tweaks to a zero-shot prompt can make a big difference in the generated output."),"\n",a.createElement(t.p,null,"In this lab, we will explore other techniques for getting the best results from a foundation model."),"\n",a.createElement(t.section,{className:"heading","data-heading-rank":"2","aria-labelledby":"modifying-parameters"},a.createElement(t.h2,{id:"modifying-parameters"},a.createElement(t.a,{href:"#modifying-parameters"},"Modifying parameters")),"\n",a.createElement(t.p,null,"In this lab, we will continue working in the Prompt Lab and experiment with configurable model parameters. If necessary, ",a.createElement(t.a,{href:"/watsonx/watsonxai/100#accessing-watsonxai-from-ibm-cloud"},"navigate back to the watsonx.ai home screen"),", and enter the Prompt Lab UI."),"\n",a.createElement(t.p,null,"If you have already been working in the Prompt Lab, ",a.createElement(t.a,{href:"/watsonx/watsonxai/100#creating-a-new-prompt-lab-session"},"open a new Prompt Lab session")),"\n",a.createElement(t.ol,null,"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"In the Prompt Lab UI, select the ",a.createElement(t.strong,null,"]⃞[")," icon from the left panel to bring up the list of sample prompts. Click the ",a.createElement(t.strong,null,"Marketing email generation")," sample from the Generate section. Use the ",a.createElement(t.strong,null,"flan-ul2-20b")," model if not already specified."),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"We will again start with a slightly modified prompt. Edit the ",a.createElement(t.strong,null,"Details")," field in the ",a.createElement(t.strong,null,"Try")," section, adding ",a.createElement(t.code,null,"Do not add any additional information.")," as the final instruction. Click ",a.createElement(t.strong,null,"Generate"),"."),"\n",a.createElement(t.p,null,"You should see the same output as before."),"\n",a.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxAI/images/101/flan-ul2-output.png",alt:"flan-ul2_output"}),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"Next, we will modify some inference parameters to see the impact on the generated output. But first, let's discuss what the configurable parameters do. Open the settings panel by clicking the ",a.createElement(t.strong,null,"Model parameters")," icon shown below."),"\n",a.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxAI/images/102/click-model-parameters.png",alt:"model_parameter_icon"}),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"This opens a list of parameters than can be updated.  All models utilize the same inference parameters. Let's explain the purpose of each."),"\n",a.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxAI/images/102/tour-model-parameters.png",alt:"tour_paramters"}),"\n",a.createElement(n,{text:"Quiz question related to model parameters!"}),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"a. Greedy")," vs. ",a.createElement(t.strong,null,"Sampling Decoding")," - This is how the model chooses the tokens for output. The first 4 parameters below (b through e) are only visible when in ",a.createElement(t.strong,null,"Sampling")," mode."),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"In ",a.createElement(t.strong,null,"Greedy")," mode, the model selects the highest probability tokens at every step of decoding, and a model is less creative in that mode."),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"In ",a.createElement(t.strong,null,"Sampling")," mode, the model chooses the next token from a pool of the most probable next tokens, so there is more creativity, but also a larger risk that the output may be nonsensical."),"\n"),"\n"),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"b. Temperature")," – a floating point number ranging from 0.0 (which causes the model to operate in the same manner as if Greedy decoding was selected) and 2.00 (which is maximum creativity)."),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"The higher the value of ",a.createElement(t.strong,null,"Temperature"),", the more “creative” the model would be."),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"The default value is typically 0.7 but is set to 0.8 in this case. This means the model is allowed certain creativity."),"\n"),"\n"),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"c. Top P (nucleus sampling)")," - a floating point number ranging from 0.0 to 1.0. At a high level, when generating a completion, a model calculates the probability of the next word based on all the previous words. ",a.createElement(t.strong,null,"Top P")," decides whether the model will always pick the most likely outcome, or allow more randomness for the next words. ",a.createElement(t.strong,null,"Top P"),' sampling chooses from the smallest possible set of "next" words whose cumulative probability exceeds the value provided for ',a.createElement(t.strong,null,"Top P"),"."),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"d. Top K")," - an integer from 1 to 100. Unlike ",a.createElement(t.strong,null,"Top P, Top K")," does not look at the probability of the tokens.  Instead, the model chooses the next word from the ",a.createElement(t.strong,null,"Top K")," most likely tokens for the next piece of output."),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"Top K")," = 3, means the model will choose randomly from the top 3 most likely next words."),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"The higher the value of ",a.createElement(t.strong,null,"Top K"),", the more random the outcome would be."),"\n"),"\n"),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"e. Random seed")," - an integer in the range 1 to 4,294,967,295. In Sampling mode, with everything else remaining the same, updating the Random seed will yeild different outputs."),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"If the Random seed remains the same, you should get back the same results, which is why we leave the value the same for these labs."),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"In short, Random seed is helpful for the replicability of experiements."),"\n"),"\n"),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"f. Repetition penalty")," - a value between 1 and 2 (a setting of 1 allows repetition, and 2 prohibits it). This is used to counteract a model's tendency to repeat the prompt text verbatim or get stuck in a loop in generating the same output."),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"g. Stop sequences")," - sequences of characters (text, special characters, carriage return, etc) used as a stop indicator by the model. The stop sequence itself will still be included in the model output, but that will be the last piece of output."),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"h. Min tokens")," - an integer that specifies the minimum number of tokens in the model's output."),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"i. Max tokens")," - an integer that specifies the maximum number of tokens in the model’s output. Sometimes when the generated output looks incomplete, your Max tokens value may be too low."),"\n"),"\n"),"\n",a.createElement(t.blockquote,null,"\n",a.createElement(t.p,null,"Keep in mind, you are charged or limited based on the number of tokens used, so be careful setting the Max tokens higher than necessary."),"\n"),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"The values you see are the default values for the ",a.createElement(t.strong,null,"Marketing email generation")," sample use case. Let's play with the values and see how some changes impact our output.  Leave the current prompt in place, and change the value of ",a.createElement(t.strong,null,"Temperature")," from ",a.createElement(t.strong,null,"0.8")," to ",a.createElement(t.strong,null,"0.4"),"."),"\n",a.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxAI/images/102/temp-update.png",alt:"temp_update"}),"\n",a.createElement(t.p,null,"Click ",a.createElement(t.strong,null,"Generate"),".  You should now see the following output."),"\n",a.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxAI/images/102/temp-topp-output.png",alt:"temp_topp_output"}),"\n",a.createElement(t.p,null,"Notice by lowering the creativity the output changed quite a bit, and we now have a rather lengthy thank you ending."),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"Reset the ",a.createElement(t.strong,null,"Temperature")," value to ",a.createElement(t.strong,null,"0.8"),", and lower the ",a.createElement(t.strong,null,"Top P")," value from ",a.createElement(t.strong,null,"1")," to ",a.createElement(t.strong,null,"0.5"),". This means the next token will be chosen randomly from the top number of tokens whose collective probability is greater than 0.5. Click ",a.createElement(t.strong,null,"Generate")," again."),"\n",a.createElement(t.p,null,"You should see very similar output. In this case, lowering the Top P value had roughly the same effect as lowering the Temperature."),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"Now let's update the ",a.createElement(t.strong,null,"Top K")," value to 25 and reset ",a.createElement(t.strong,null,"Top P")," to ",a.createElement(t.strong,null,"1.0"),"."),"\n",a.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxAI/images/102/topk-update.png",alt:"topk_update"}),"\n",a.createElement(t.p,null,"Click ",a.createElement(t.strong,null,"Generate"),".  You should see the following."),"\n",a.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxAI/images/102/topk-output.png",alt:"topk_output"}),"\n",a.createElement(t.p,null,"The output has reverted to the original. The model is now choosing the next token from the 25 tokens with the highest probability, so clearly the update to ",a.createElement(t.strong,null,"Top P")," resulted in fewer than 25 options for the next token."),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"Continue lowering the ",a.createElement(t.strong,null,"Top K")," value. Notice that if you lower it quite far (to about 10) you should see pretty good output with accurate info."),"\n",a.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxAI/images/102/topk-output2.png",alt:"topk_output2"}),"\n",a.createElement(t.p,null,"Why the difference? This is best illustrated with an example. Consider a model has determined the following set of potential next tokens for a particular input:"),"\n",a.createElement(t.table,null,a.createElement(t.thead,null,a.createElement(t.tr,null,a.createElement(t.th,null,"Token"),a.createElement(t.th,null,"Probability"))),a.createElement(t.tbody,null,a.createElement(t.tr,null,a.createElement(t.td,null,"T1"),a.createElement(t.td,null,"0.16")),a.createElement(t.tr,null,a.createElement(t.td,null,"T2"),a.createElement(t.td,null,"0.15")),a.createElement(t.tr,null,a.createElement(t.td,null,"T3"),a.createElement(t.td,null,"0.14")),a.createElement(t.tr,null,a.createElement(t.td,null,"T4"),a.createElement(t.td,null,"0.13")),a.createElement(t.tr,null,a.createElement(t.td,null,"T5"),a.createElement(t.td,null,"0.12")),a.createElement(t.tr,null,a.createElement(t.td,null,"T6"),a.createElement(t.td,null,"0.11")),a.createElement(t.tr,null,a.createElement(t.td,null,"T7"),a.createElement(t.td,null,"0.10")),a.createElement(t.tr,null,a.createElement(t.td,null,"T8"),a.createElement(t.td,null,"0.09")))),"\n",a.createElement(t.p,null,"In this case when you set:"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"Top P = 0.5"),", the model chooses randomly among T1, T2, T3, and T4 (because the probabilities sum up to > 0.5)."),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"Top K = 50"),", the model chooses randomly among all 8 of the tokens (as 8 < 50)"),"\n"),"\n"),"\n",a.createElement(t.p,null,"Thus, for this case, you need to lower ",a.createElement(t.strong,null,"Top K")," to ",a.createElement(t.strong,null,"4")," to have a similar effect as ",a.createElement(t.strong,null,"Top P = 0.5")," so both settings are choosing among the top 4 tokens."),"\n"),"\n"),"\n"),a.createElement(t.section,{className:"heading","data-heading-rank":"2","aria-labelledby":"prompting-for-different-output-formats"},a.createElement(t.h2,{id:"prompting-for-different-output-formats"},a.createElement(t.a,{href:"#prompting-for-different-output-formats"},"Prompting for different output formats")),"\n",a.createElement(t.p,null,"When prompting an LLM, it's often beneficial to get the output in a specific format. For readability, or for streamlining an integration to another tool."),"\n",a.createElement(t.section,{className:"heading","data-heading-rank":"3","aria-labelledby":"prompting-for-lists"},a.createElement(t.h3,{id:"prompting-for-lists"},a.createElement(t.a,{href:"#prompting-for-lists"},"Prompting for Lists")),"\n",a.createElement(t.p,null,"Remember that a foundation model does not read and interpret a prompt like a human. Rather, it consumes a series of tokenized words and calculates the best next token. The concept of a list is easy for a human to understand. Here we will see how some LLMs respond."),"\n",a.createElement(t.ol,null,"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,a.createElement(t.a,{href:"/watsonx/watsonxai/100#creating-a-new-prompt-lab-session"},"Open a new Prompt Lab session")," and select the ",a.createElement(t.strong,null,"Freeform")," tab instead of the default ",a.createElement(t.strong,null,"Structured"),' tab. Choose "Switch mode" when prompted to Switch to freeform mode.'),"\n",a.createElement(t.blockquote,null,"\n",a.createElement(t.p,null,"Note: In Freeform mode, you still have access to all the examples, models, and configuration, but there is no structural guide for the prompt."),"\n"),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"Open the ",a.createElement(t.strong,null,"Model parameters")," panel.  In ",a.createElement(t.strong,null,"Freeform")," mode, the parameter defaults look like the following if you have ",a.createElement(t.strong,null,"not selected")," a prompt sample."),"\n",a.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxAI/images/102/greedy-parameters.png",alt:"greedy_params"}),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"Verify that you are using ",a.createElement(t.strong,null,"Greedy")," decoding, and change the value of ",a.createElement(t.strong,null,"Max tokens")," to 100."),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"Ensure that you are using the ",a.createElement(t.strong,null,"flan-ul2-20b")," model.  Copy and paste the following text in the input field:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"hljs language-txt"},"The following paragraph is a consumer complaint.\n\nRead the following paragraph and list all the issues. I called your helpdesk \nmultiple times and every time I waited 10-15 minutes before I gave up. The first \ntime I got through, the line got cut suddenly and I had to call back. This is just not \nhelpful. When I finally got through like after 3 days (yes, 3 days) your agent kept \ngoing over a long checklist of trivial things and asking me to verify, after I \nrepeatedly told the agent that I am an experienced user and I know what I am \ndoing. It was a complete waste of time. After like an eternity of this pointless \nconversation, I was told that an SME will contact me. That – was 2 days ago. What \nis the problem with your support system?\n\nThe list of issues is as follows:\n")),"\n",a.createElement(t.p,null,"Click ",a.createElement(t.strong,null,"Generate"),".  You should see output similar to the following:"),"\n",a.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxAI/images/102/list-output.png",alt:"list_output"}),"\n",a.createElement(t.blockquote,null,"\n",a.createElement(t.p,null,a.createElement(t.strong,null,"Note the following:"),"\n",a.createElement("br"),"- The model did not output a list.\n",a.createElement("br"),"- The model just repeated the input text word by word.\n",a.createElement("br"),"- The output terminates due to the 100 token limit.\n",a.createElement("br"),a.createElement("br"),"The flan models (both the ",a.createElement(t.strong,null,"flan-ul2-20b")," and the ",a.createElement(t.strong,null,"flan-t5-xxl-11b"),') seem to percieve "list" as an instruction to recount what it was previously told.'),"\n"),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,'One common method for getting list output is to guide the model by starting the list. Remove the previous output and add a "1." to the last line of your prompt text. The last two lines should look like:'),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"hljs language-txt"},"The list of issues is as follows:\n1. \n")),"\n",a.createElement(t.p,null,"Click ",a.createElement(t.strong,null,"Generate"),".  You should see output like the following:"),"\n",a.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxAI/images/102/list-output2.png",alt:"list_output2"}),"\n",a.createElement(t.p,null,"This is only a slight improvement. The flan models do not seem well-suited for generating a list with zero shot prompts."),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"Change the model to the ",a.createElement(t.strong,null,"granite-13b-instruct-v2"),' model. Remove the "1." from the prompt and click ',a.createElement(t.strong,null,"Generate"),". You should see something close to the following:"),"\n",a.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxAI/images/102/list-output3.png",alt:"list_output3"}),"\n",a.createElement(t.p,null,"This looks more like what a human would expect. For this kind of request, the ",a.createElement(t.strong,null,"granite-13b-instruct-v2")," model is much better than the flan models. Additionally, the model correctly interpretted that the customer was frustrated with the support system, although this was not explicitly stated."),"\n"),"\n"),"\n"),a.createElement(t.section,{className:"heading","data-heading-rank":"3","aria-labelledby":"prompting-for-json-output"},a.createElement(t.h3,{id:"prompting-for-json-output"},a.createElement(t.a,{href:"#prompting-for-json-output"},"Prompting for JSON output")),"\n",a.createElement(t.p,null,"When using LLM's programmatically it can be advantageous to retrieve generated data in a format that is easily consumed by the programming language. Let's attempt to use the Prompt Lab to generate a simple JSON file."),"\n",a.createElement(t.ol,null,"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,a.createElement(t.a,{href:"/watsonx/watsonxai/100#creating-a-new-prompt-lab-session"},"Open a new Prompt Lab session")," in the default ",a.createElement(t.strong,null,"Structured")," mode and ensure that you are using the ",a.createElement(t.strong,null,"flan-ul2-20b")," model."),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"Ensure that you are using ",a.createElement(t.strong,null,"Greedy")," mode and set ",a.createElement(t.strong,null,"Max tokens")," to ",a.createElement(t.strong,null,"100"),"."),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"Copy and paste the following to the ",a.createElement(t.strong,null,"Input")," field under the ",a.createElement(t.strong,null,"Try")," section"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"hljs language-txt"},"Create a JSON file output with the following information\n\nname: Joe\nage: 25\nPhone: 416-1234-567\nPhone: 547-4034-240\nAddress: City: Markham, Street: Warden Avenue, Postal Code: L6G 1C7\n")),"\n",a.createElement(t.p,null,"Click ",a.createElement(t.strong,null,"Generate"),".  The ",a.createElement(t.strong,null,"flan-ul2-20b")," model returns the following:"),"\n",a.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxAI/images/102/json-output.png",alt:"json_ouput"}),"\n",a.createElement(t.p,null,"The flan model responded with natural language output, which is the strength of the flan model. But clearly this is not the requested JSON."),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"Select the ",a.createElement(t.strong,null,"granite-13b-instruct-v2")," model and click ",a.createElement(t.strong,null,"Generate"),". You should see the following output."),"\n",a.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxAI/images/102/json-output2.png",alt:"json_output2"}),"\n",a.createElement(t.p,null,"This is the valid JSON we are looking for. Again, the smaller granite-13b-instruct-v2  model seems best for the use case."),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"Now let's try with the ",a.createElement(t.strong,null,"codellama-34b-instruct-hf")," model, which is trained for code generation. Select this model and click ",a.createElement(t.strong,null,"Generate"),". You should see:"),"\n",a.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxAI/images/102/json-output3.png",alt:"json_output3"}),"\n",a.createElement(t.p,null,"Here we have a valid JSON, but the indentation has some issues, and there is a lot of white space."),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"If we still wanted to go with the ",a.createElement(t.strong,null,"codellama-34b-instruct-hf"),", we can use ",a.createElement(t.strong,null,"Stop sequences")," to clean up the output. Open the ",a.createElement(t.strong,null,"Model parameters")," panel and enter ",a.createElement(t.code,null,"}↵}")," in the Stop sequences text box. (You can type a carriage return by pressing the ",a.createElement(t.em,null,"Enter")," or ",a.createElement(t.em,null,"Return")," key on your keyboard.) Let's also add an instruction to format the output. The updated instructions should read: ",a.createElement(t.code,null,"Create a JSON file output with the following information, and please format it properly.")),"\n",a.createElement(n,{text:"Quiz question on stop sequences!"}),"\n",a.createElement(t.p,null,"You should see the following, then click the blue ",a.createElement(t.strong,null,"+")," button to add the sequence."),"\n",a.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxAI/images/102/stop-sequence.png",alt:"stop_sequence"}),"\n",a.createElement(t.p,null,"With the stop sequence added, you will see this:"),"\n",a.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxAI/images/102/stop-sequence2.png",alt:"stop_sequence2"}),"\n"),"\n",a.createElement(t.li,null,"\n",a.createElement(t.p,null,"Click ",a.createElement(t.strong,null,"Generate"),". You should see the following output:"),"\n",a.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxAI/images/102/json-output4.png",alt:"json_output4"}),"\n",a.createElement(t.p,null,"Now we have valid JSON output. You can remove a ",a.createElement(t.strong,null,"Stop sequence")," by clicking the ",a.createElement(t.strong,null,"X"),"."),"\n",a.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxAI/images/102/stop-sequence3.png",alt:"stop_sequence3"}),"\n"),"\n"),"\n")),a.createElement(t.section,{className:"heading","data-heading-rank":"2","aria-labelledby":"lab-summary"},a.createElement(t.h2,{id:"lab-summary"},a.createElement(t.a,{href:"#lab-summary"},"Lab Summary")),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"We experimented with the following configuration parameters:","\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Temperature")," - a higher value results in more creativity"),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Top P")," - a lower value means less variability"),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Top K")," - a lower value means less variability"),"\n"),"\n"),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"Top P")," and ",a.createElement(t.strong,null,"Top K")," both limit the number of tokens that the model will choose from when determining the next token in the sequence."),"\n",a.createElement(t.li,null,"We used freeform prompts and Greedy decoding to prompt for a list."),"\n",a.createElement(t.li,null,"We generated JSON output and used stop sequences to halt model output."),"\n",a.createElement(t.li,null,"It's important to pick the right model for the task at hand, which is not necessarily the larger model. The ",a.createElement(t.strong,null,"granite-13b-instruct-v2")," model was best suited for both lists and JSON output.  Although smaller than the flan models, it was trained by IBM to follow a user's instructions."),"\n"))))}var r=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,l.ah)(),e.components);return t?a.createElement(t,e,a.createElement(o,e)):o(e)};var s=n(94184),i=n.n(s),m=n(24690),u=n(81140),c=n(48623),h=n(88531),p=n(13383),d=n(27315);const g=e=>{const{data:{mdx:{tableOfContents:{items:t},frontmatter:{toc:n=!0,title:l,timeToComplete:o,updated:r}}},children:s}=e,m=(0,a.useRef)(null),{0:g}=(0,a.useState)(""),E=(null===n||n)&&t;return a.createElement(a.Fragment,null,a.createElement(u.Z,{timeToComplete:o,updated:r},t[0].title||l||""),a.createElement(h.Z,{className:d.YS},a.createElement("article",{className:i()(d.Y2,!E&&d.ey),ref:m},a.createElement(c.Z,{components:{h1:()=>null}},s)),E&&a.createElement(p.Z,{itemsList:t,maxDepth:2,currSection:g})))},E=e=>{const{location:{pathname:t},data:{mdx:{frontmatter:{title:n},tableOfContents:{items:l}}}}=e;return a.createElement(m.Z,{pathname:t,title:n||l[0].title||void 0})};function f(e){return a.createElement(g,e,a.createElement(r,e))}}}]);
//# sourceMappingURL=component---src-pages-mdx-fields-slug-tsx-content-file-path-content-watsonx-watsonx-ai-102-md-889af18aadf5784753e2.js.map