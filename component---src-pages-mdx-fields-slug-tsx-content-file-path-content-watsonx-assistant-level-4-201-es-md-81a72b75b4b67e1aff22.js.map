{"version":3,"file":"component---src-pages-mdx-fields-slug-tsx-content-file-path-content-watsonx-assistant-level-4-201-es-md-81a72b75b4b67e1aff22.js","mappings":"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","sources":["webpack://vad-var-site/./content/Watsonx/Assistant/Level-4/201.es.md","webpack://vad-var-site/./src/pages/{mdx.fields__slug}.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    section: \"section\",\n    h1: \"h1\",\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\",\n    h3: \"h3\",\n    strong: \"strong\",\n    img: \"img\",\n    ol: \"ol\",\n    li: \"li\",\n    em: \"em\",\n    ul: \"ul\",\n    blockquote: \"blockquote\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"1\",\n    \"aria-labelledby\": \"201-extensiones-personalizadas\"\n  }, React.createElement(_components.h1, {\n    id: \"201-extensiones-personalizadas\"\n  }, \"201: Extensiones personalizadas\"), \"\\n\", React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"en-esta-lección\"\n  }, React.createElement(_components.h2, {\n    id: \"en-esta-lección\"\n  }, React.createElement(_components.a, {\n    href: \"#en-esta-lección\"\n  }, \"En esta lección\")), \"\\n\", React.createElement(_components.p, null, \"Aprende a integrar watsonx Assistant con servicios externos, como sistemas CRM, servicios de tickets o bases de datos, con extensiones personalizadas.\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"requisitos-previos\"\n  }, React.createElement(_components.h2, {\n    id: \"requisitos-previos\"\n  }, React.createElement(_components.a, {\n    href: \"#requisitos-previos\"\n  }, \"Requisitos previos\")), \"\\n\", React.createElement(_components.p, null, \"Completa esta sección con el asistente que utilizaste en la sección 104 o con tu propio asistente. Si desea utilizar su propio asistente, debe \", React.createElement(_components.a, {\n    href: \"https://cloud.ibm.com/docs/watson-assistant?topic=watson-assistant-admin-backup-restore#backup-restore-import\"\n  }, \"cargar\"), \" esta \", React.createElement(_components.a, {\n    href: \"https://raw.githubusercontent.com/CloudPak-Outcomes/Watson-Asst-Lab/main/action-skills/begin-105-action-skill.json\"\n  }, \"habilidad de Acción\"), \" que refleja la habilidad después de completar la sección 104.\"), \"\\n\", React.createElement(_components.p, null, \"Para aprender a crear extensiones personalizadas con aplicaciones de terceros, esta sección requerirá que configures una cuenta de HubSpot CRM, así como una cuenta de Zendesk.\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"presentación-de-las-integraciones\"\n  }, React.createElement(_components.h2, {\n    id: \"presentación-de-las-integraciones\"\n  }, React.createElement(_components.a, {\n    href: \"#presentación-de-las-integraciones\"\n  }, \"Presentación de las integraciones\")), \"\\n\", React.createElement(_components.p, null, \"Las secciones anteriores de este laboratorio cubrieron muchas formas nuevas y emocionantes en las que watsonx Assistant facilita la creación de flujos conversacionales. Sin embargo, para que el asistente alcance todo su potencial como solución de asistencia integral, también debe llamar sin problemas a un mundo cada vez mayor de aplicaciones web y extraer información de ellas.\"), \"\\n\", React.createElement(_components.p, null, \"De hecho, cualquiera que haya tenido que crear flujos conversacionales en el mundo real con un asistente virtual dará fe de que casi todos los flujos conversacionales acaban dependiendo de integraciones. Además, uno de los mayores retos a los que se habrán enfrentado es tener que integrar varias interfaces de programación de aplicaciones (API) en la plataforma del asistente virtual -ya sea watsonx Assistant u otra plataforma de IA conversacional- para ofrecer la solución.\"), \"\\n\", React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"3\",\n    \"aria-labelledby\": \"tipos-de-integración\"\n  }, React.createElement(_components.h3, {\n    id: \"tipos-de-integración\"\n  }, React.createElement(_components.a, {\n    href: \"#tipos-de-integración\"\n  }, \"Tipos de integración\")), \"\\n\", React.createElement(_components.p, null, \"Por lo general, watsonx Assistant agrupa las integraciones en tres tipos: integraciones de canal, integraciones de agente en directo o servicio de atención al cliente, y extensiones.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Las integraciones de canales\"), \" conectan tu asistente virtual con tus usuarios finales. Los canales incluyen chat web (como el asistente de Lendyr en Lendyr.com), teléfono (como el asistente de Lendyr en +1 (732) 481- 4918), SMS, WhatsApp, Facebook, etc.\"), \"\\n\", React.createElement(_components.p, null, \"Algunas integraciones de canal pueden incluir una integración de agente en \", React.createElement(_components.strong, null, \"vivo\"), \" o \", React.createElement(_components.strong, null, \"de\"), \" mesa de servicio. Por ejemplo, la integración del canal de chat web puede incluir una integración de service desk con Zendesk Chat, o la integración telefónica puede configurarse con una integración de agente en directo con NICE CXone, un proveedor líder de plataformas de contact center.\"), \"\\n\", React.createElement(_components.p, null, \"Las \", React.createElement(_components.strong, null, \"extensiones\"), \" conectan su asistente virtual a servicios externos, y en sus Acciones, puede definir pasos que interactúen con un servicio externo llamando a una extensión. Las extensiones pueden conectarse a diversas herramientas, como sistemas CRM, servicios de emisión de tickets, bases de datos, motores de búsqueda, etc.\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"3\",\n    \"aria-labelledby\": \"página-de-integraciones\"\n  }, React.createElement(_components.h3, {\n    id: \"página-de-integraciones\"\n  }, React.createElement(_components.a, {\n    href: \"#página-de-integraciones\"\n  }, \"Página de integraciones\")), \"\\n\", React.createElement(_components.p, null, \"La idea de gestionar todos estos tipos de integraciones puede parecer desalentadora al principio, pero watsonx Assistant te libera del estrés con su página de \", React.createElement(_components.strong, null, \"integraciones\"), \". La página de integraciones consolida todas tus integraciones de canales y extensiones en un solo lugar.\"), \"\\n\", React.createElement(_components.p, null, \"Utilice el menú izquierdo de su asistente para abrir la página Integraciones. Está en la parte inferior del menú, así que puede que no la veas al principio:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/0.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"La página Integraciones está organizada en tres secciones (como puede verse a continuación):\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Canales esenciales - Los cimientos de cualquier asistente: el chat web o el teléfono.\"), \"\\n\", React.createElement(_components.li, null, \"Extensiones - Personaliza tu asistente conectándote a APIs de terceros.\"), \"\\n\", React.createElement(_components.li, null, \"Canales: despliegue su asistente en canales adicionales, como Slack, Facebook Messenger o SMS y WhatsApp a través de Twilio.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/1.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"La integración del canal de chat web se configura automáticamente para cada asistente virtual. Las organizaciones que crean asistentes virtuales para el teléfono, Slack, Microsoft Teams u otros canales siguen tendiendo a utilizar el canal de chat web para la redacción y las pruebas. En secciones posteriores de este laboratorio se tratará con más detalle la integración del canal telefónico y otros canales.\"), \"\\n\")), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"extensiones\"\n  }, React.createElement(_components.h2, {\n    id: \"extensiones\"\n  }, React.createElement(_components.a, {\n    href: \"#extensiones\"\n  }, \"Extensiones\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"¿Qué es una prórroga?\")), \"\\n\", React.createElement(_components.p, null, \"Una extensión es una conexión directa entre watsonx Assistant y la API RESTful de un servicio externo.\"), \"\\n\", React.createElement(_components.p, null, \"Como se puede ver en la captura de pantalla anterior, watsonx Assistant ofrece dos extensiones prediseñadas llamadas \", React.createElement(_components.strong, null, \"Search\"), \" y \", React.createElement(_components.strong, null, \"Segment (2)\"), \", y también permite a los desarrolladores y constructores crear sus propias \", React.createElement(_components.strong, null, \"extensiones personalizadas\"), \".\"), \"\\n\", React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"3\",\n    \"aria-labelledby\": \"buscar-extensión\"\n  }, React.createElement(_components.h3, {\n    id: \"buscar-extensión\"\n  }, React.createElement(_components.a, {\n    href: \"#buscar-extensión\"\n  }, \"Buscar extensión\")), \"\\n\", React.createElement(_components.p, null, \"La extensión de búsqueda permite a una organización conectar watsonx Assistant a un servicio de búsqueda. El servicio de búsqueda suele estar conectado a la base de conocimientos existente de la organización. La extensión permite a watsonx Assistant enviar preguntas al servicio de búsqueda, que a su vez busca respuestas relevantes en la base de conocimientos de la organización. watsonx Assistant recibe estas respuestas del servicio de búsqueda y las utiliza para responder a las preguntas de los usuarios finales.\"), \"\\n\", React.createElement(_components.p, null, \"En secciones posteriores de este laboratorio se describen con más detalle la extensión de búsqueda predefinida y las extensiones de búsqueda personalizadas.\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"3\",\n    \"aria-labelledby\": \"ampliación-de-segmento\"\n  }, React.createElement(_components.h3, {\n    id: \"ampliación-de-segmento\"\n  }, React.createElement(_components.a, {\n    href: \"#ampliación-de-segmento\"\n  }, \"Ampliación de segmento\")), \"\\n\", React.createElement(_components.p, null, \"La extensión Segment permite a una organización conectar watsonx Assistant a Twilio Segment, una plataforma de datos de clientes. Una vez activada la extensión Segment, watsonx Assistant transmite los datos de la conversación a Segment, donde se combinan con otros datos del recorrido del cliente.\"), \"\\n\", React.createElement(_components.p, null, \"Las organizaciones pueden utilizar los numerosos conectores predefinidos de Segment para enviar sus datos a una variedad de destinos, como sistemas CRM o bases de datos en la nube. Las organizaciones pueden utilizar Segment para crear vistas completas del recorrido del usuario final a través de canales y puntos de contacto.\"), \"\\n\", React.createElement(_components.p, null, \"En secciones posteriores de este laboratorio se describe con más detalle la ampliación de Segmentos.\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"3\",\n    \"aria-labelledby\": \"extensiones-personalizadas\"\n  }, React.createElement(_components.h3, {\n    id: \"extensiones-personalizadas\"\n  }, React.createElement(_components.a, {\n    href: \"#extensiones-personalizadas\"\n  }, \"Extensiones personalizadas\")), \"\\n\", React.createElement(_components.p, null, \"Las extensiones personalizadas combinan la potencia de la integración con una API con la \", React.createElement(_components.em, null, \"facilidad\"), \" de uso tanto para desarrolladores como para constructores, lo que reduce el tiempo de obtención de valor y el coste total de propiedad (TCO). Conozcámoslo todo sobre ellas.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"¿Cómo funcionan las extensiones personalizadas?\")), \"\\n\", React.createElement(_components.p, null, \"Para crear una extensión personalizada, un desarrollador carga una descripción de la API de un servicio externo. La descripción es un archivo de Notación de Objetos JavaScript (JSON) que describe la API del servicio externo según la Especificación OpenAPI. La especificación \", React.createElement(_components.a, {\n    href: \"https://github.com/OAI/OpenAPI-Specification/\"\n  }, \"OpenAPI\"), \" es un estándar ampliamente adoptado para describir API RESTful. (Para más información sobre las API RESTful, visite \", React.createElement(_components.a, {\n    href: \"https://www.redhat.com/en/topics/api/what-is-a-rest-api\"\n  }, \"esta\"), \" página de Red Hat).\"), \"\\n\", React.createElement(_components.p, null, \"¿Dónde obtienen los desarrolladores esta descripción de la API de un servicio externo? Dado que OpenAPI es un estándar ampliamente adoptado, muchos proveedores de software publican especificaciones OpenAPI públicamente en sus sitios web o documentación. Si no se dispone fácilmente de una especificación OpenAPI, existen varias formas de crear una desde cero o a partir de información existente, como \", React.createElement(_components.a, {\n    href: \"https://medium.com/ibm-watson/watson-assistant-just-got-connected-a1f46dc9b130\"\n  }, \"IBM App Connect\"), \" o un \", React.createElement(_components.a, {\n    href: \"https://medium.com/ibm-watson/from-curl-to-an-extension-under-5-minutes-c4662d95c21a\"\n  }, \"comando cURL\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Una vez que un desarrollador crea una extensión personalizada en watsonx Assistant, un constructor no técnico puede utilizar la extensión en Acciones. Recuerda que las Acciones tienen pasos, y cada paso puede pedir al usuario final que proporcione una respuesta. Las acciones también almacenan información en variables. Cuando un constructor utiliza una extensión, puede pasar información a la extensión, recopilada en pasos anteriores o almacenada en variables. La extensión también devuelve información a la Acción, y el constructor puede referenciarla en pasos posteriores o almacenarla como variables. Todo esto se hace en la página de Acciones, sin escribir ningún código.\"), \"\\n\", React.createElement(_components.p, null, \"Si tienes problemas para visualizarlo, no pasa nada: ¡construyamos juntos un ejemplo!\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Kits de inicio de extensión personalizados\")), \"\\n\", React.createElement(_components.p, null, \"Para construir los ejemplos de este laboratorio, se hará referencia a algunos kits de inicio mantenidos por el equipo de desarrollo del Asistente Watson para ayudar a las organizaciones a comenzar con extensiones personalizadas.\"), \"\\n\", React.createElement(_components.p, null, \"Puede consultar los kits de inicio \", React.createElement(_components.a, {\n    href: \"https://github.com/watson-developer-cloud/assistant-toolkit/tree/master/integrations/extensions#readme\"\n  }, \"aquí\"), \". Los kits de inicio incluyen sistemas CRM (HubSpot), servicios de ticketing (ServiceNow, Zendesk Support), motores de búsqueda (Coveo, Google Custom Search, Magnolia, Watson Discovery), etc.\"), \"\\n\")), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"creación-de-extensiones-personalizadas\"\n  }, React.createElement(_components.h2, {\n    id: \"creación-de-extensiones-personalizadas\"\n  }, React.createElement(_components.a, {\n    href: \"#creación-de-extensiones-personalizadas\"\n  }, \"Creación de extensiones personalizadas\")), \"\\n\", React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"3\",\n    \"aria-labelledby\": \"crear-una-extensión-personalizada-para-un-sistema-crm\"\n  }, React.createElement(_components.h3, {\n    id: \"crear-una-extensión-personalizada-para-un-sistema-crm\"\n  }, React.createElement(_components.a, {\n    href: \"#crear-una-extensión-personalizada-para-un-sistema-crm\"\n  }, \"Crear una extensión personalizada para un sistema CRM\")), \"\\n\", React.createElement(_components.p, null, \"Uno de los tipos más comunes de extensión personalizada es la integración con un sistema de gestión de relaciones con los clientes (CRM). Los asistentes virtuales suelen extraer información de un sistema CRM para personalizar la experiencia del usuario final.\"), \"\\n\", React.createElement(_components.p, null, \"Por ejemplo:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"El asistente virtual puede saludar al usuario final por su nombre, extrayendo el nombre del perfil del usuario final en el sistema CRM.\"), \"\\n\", React.createElement(_components.li, null, \"El asistente virtual puede rellenar previamente los campos de un formulario o saltarse los pasos de una acción, de modo que no pide al usuario final información que la organización ya ha aprendido de interacciones anteriores y almacenado en el sistema CRM.\"), \"\\n\", React.createElement(_components.li, null, \"El asistente virtual puede proporcionar distintos niveles de acceso y servicio en función del estado de afiliación del usuario final en el sistema CRM.\"), \"\\n\", React.createElement(_components.li, null, \"El asistente virtual puede hacer ofertas especiales para aumentar las ventas o realizar ventas cruzadas al usuario final, extrayendo del sistema CRM una lista de las ofertas con más probabilidades de atraer a este usuario final.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Vamos a construir una extensión personalizada para HubSpot. Comenzarás construyendo la extensión personalizada, y terminarás incorporando la extensión a tus Acciones.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Descarga la especificación OpenAPI, que describe la API de HubSpot, desde el kit de inicio\")), \"\\n\", React.createElement(_components.p, null, \"Navega hasta \", React.createElement(_components.a, {\n    href: \"https://raw.githubusercontent.com/watson-developer-cloud/assistant-toolkit/master/integrations/extensions/starter-kits/hubspot/basic/hubspot.basic.openapi.json\"\n  }, \"este enlace\"), \", que almacena una especificación OpenAPI para la API de HubSpot. Descarga el archivo haciendo clic con el botón derecho en cualquier parte de la página y seleccionando \\\"Guardar página como...\\\" o \\\"Guardar como...\\\" Guarda el archivo en tu sistema, y asegúrate de que la extensión del archivo es \", React.createElement(_components.strong, null, \".json\"), \"; el nombre del archivo debe ser \", React.createElement(_components.strong, null, \"hubspot.basic.openapi.json\"), \". (Cámbiale el nombre si es necesario.)\"), \"\\n\", React.createElement(_components.p, null, \"Ahora tienes una descripción de la API de HubSpot.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Cree una extensión personalizada cargando la especificación OpenAPI en el Asistente Watson\")), \"\\n\", React.createElement(_components.p, null, \"En watsonx Assistant, utiliza el menú de la izquierda para abrir la página \", React.createElement(_components.strong, null, \"Integraciones (1\"), \" ). A continuación, desplázate hacia abajo y haz clic en el botón \", React.createElement(_components.strong, null, \"Crear extensión personalizada (\"), \" 2):\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/2.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Esta primera pantalla describe lo que necesitarás para crear la extensión. Tenga en cuenta que el documento OpenAPI JSON, que acaba de obtener, es clave para la configuración. Haga clic en \", React.createElement(_components.strong, null, \"Siguiente\"), \" en la parte superior derecha para pasar a la siguiente pantalla:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/3.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"La segunda pantalla le pide que nombre y describa la extensión personalizada. Nombra la extensión personalizada \", React.createElement(_components.strong, null, \"HubSpot CRM\"), \" como se muestra en la imagen de abajo \", React.createElement(_components.strong, null, \"(1)\"), \" y añade una descripción, como \\\"Personaliza la experiencia del usuario final con información del sistema CRM de Lendyr\\\" \", React.createElement(_components.strong, null, \"(2)\"), \". Haz clic en Siguiente (3) en la parte superior derecha para pasar a la siguiente pantalla.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/4.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"En la siguiente pantalla, arrastre y suelte o haga clic para cargar la especificación OpenAPI que ha descargado y, a continuación, haga clic en \", React.createElement(_components.strong, null, \"Siguiente\"), \" en la parte superior derecha para pasar a la siguiente pantalla:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/5.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Tómate un momento para revisar la extensión en la siguiente pantalla. Observa que esta extensión nos permitirá llamar a la API de HubSpot para obtener los detalles de un Contacto por su ID (1 \", React.createElement(_components.strong, null, \")\"), \". Puedes hacer clic en la flecha junto a esta operación \", React.createElement(_components.strong, null, \"Obtener contacto por\"), \" ID (1) para ver más detalles:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/6.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"En la imagen anterior, watsonx Assistant compartirá el \", React.createElement(_components.strong, null, \"contacttid\"), \" del usuario final con la extensión, que llamará a la API de HubSpot y, a continuación, devolverá diversa información, como el \", React.createElement(_components.strong, null, \"correo electrónico\"), \", el \", React.createElement(_components.strong, null, \"apellido\"), \", el \", React.createElement(_components.strong, null, \"nombre\"), \" y el \", React.createElement(_components.strong, null, \"membership_status (2\"), \") del usuario final.\"), \"\\n\", React.createElement(_components.p, null, \"Haz clic en \", React.createElement(_components.strong, null, \"Finalizar (3)\"), \" para crear la extensión personalizada. Ahora deberías poder ver la extensión de HubSpot CRM en tu catálogo de integraciones:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/7.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Crea una cuenta HubSpot y añade algunos datos de usuario final\")), \"\\n\", React.createElement(_components.p, null, \"A continuación, crearás una cuenta de HubSpot CRM (si no la has creado ya anteriormente), que será la instancia específica de HubSpot con la que se integre la extensión.\"), \"\\n\", React.createElement(_components.p, null, \"Vaya a este enlace para \", React.createElement(_components.a, {\n    href: \"https://developers.hubspot.com/get-started\"\n  }, \"crear una cuenta de desarrollador de aplicaciones\"), \". \", React.createElement(_components.em, null, \"Esta cuenta es gratuita y no requiere tarjeta de crédito\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/8.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Sigue las indicaciones que aparecen al registrarte. HubSpot te pedirá que verifiques tu correo electrónico. Una vez que hayas verificado tu correo electrónico, haz clic en \", React.createElement(_components.strong, null, \"Probar todo\"), \" para crear una cuenta de prueba:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/9.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Haga clic en \", React.createElement(_components.strong, null, \"Gestionar cuentas de\"), \" prueba en la siguiente pantalla:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/10.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"A continuación, haga clic en \", React.createElement(_components.strong, null, \"Crear cuenta de prueba de aplicación\"), \" en la parte superior derecha.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/11.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"En la ventana emergente, nombre la cuenta de prueba \", React.createElement(_components.strong, null, \"Laboratorio de extensiones (1)\"), \" y haga clic en \", React.createElement(_components.strong, null, \"Crear (2)\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/12.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Abra la cuenta de prueba en una nueva ventana haciendo clic en su nombre:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/13.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"A continuación, en la ventana recién abierta, haz clic en \", React.createElement(_components.strong, null, \"Configuración\"), \" (el icono de la rueda dentada en la barra de menús superior):\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/14.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"En la pantalla de Configuración (que se muestra a continuación), haga clic para expandir la opción de menú de la izquierda \", React.createElement(_components.strong, null, \"Integraciones (1)\"), \" y seleccione \", React.createElement(_components.strong, null, \"Aplicaciones privadas (2)\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/15.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Ahora, crea tu propia aplicación privada HubSpot CRM:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/16.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"En la siguiente pantalla, introduzca el nombre de su aplicación, por ejemplo \", React.createElement(_components.strong, null, \"Extensions-Lab (1)\"), \", introduzca una descripción \", React.createElement(_components.strong, null, \"(2)\"), \", por ejemplo \\\"Personalización de Lendyr con una extensión de cliente a un sistema CRM\\\") y, a continuación, haga clic en \", React.createElement(_components.strong, null, \"Ámbitos (3)\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/17.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"A continuación, establecerá el ámbito de su nueva aplicación HubSpot CRM como una que gestiona tickets de soporte:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Vaya a la pestaña \", React.createElement(_components.strong, null, \"Ámbitos\"), \".\"), \"\\n\", React.createElement(_components.li, null, \"En el cuadro de \", React.createElement(_components.strong, null, \"búsqueda\"), \", busque primero tickets y, a continuación, \", React.createElement(_components.strong, null, \"crm.objects.contacts.read\"), \".\"), \"\\n\", React.createElement(_components.li, null, \"Cuando encuentre \", React.createElement(_components.strong, null, \"tickets\"), \" en esta casilla, selecciónelo. Haga lo mismo para \", React.createElement(_components.strong, null, \"crm.objects.contacts.read\"), \".\"), \"\\n\", React.createElement(_components.li, null, \"Confirme que ambos aparecen como ámbitos \", React.createElement(_components.strong, null, \"Seleccionados\"), \".\"), \"\\n\", React.createElement(_components.li, null, \"Haz clic en \", React.createElement(_components.strong, null, \"Crear aplicación\"), \":\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/18.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"La siguiente pantalla emergente le informa de que se generará un código de acceso. Deberá guardarlo en otro lugar para utilizarlo en el futuro. Haga clic en \", React.createElement(_components.strong, null, \"Continuar creando\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/19.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"En la ventana emergente, haz clic para mostrar el token \", React.createElement(_components.strong, null, \"(1)\"), \", \", React.createElement(_components.strong, null, \"cópialo\"), \" \", React.createElement(_components.strong, null, \"(2)\"), \" y guárdalo. A continuación, te recomendamos que hagas la \", React.createElement(_components.strong, null, \"visita rápida a las aplicaciones privadas (3)\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/20.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Una vez completado el recorrido, tendrá que añadir contactos a su sistema CRM. Los contactos son clientes finales a los que su asistente tendrá que dar soporte. Para ello, abra la página Contactos haciendo clic en \", React.createElement(_components.strong, null, \"Contactos (1)\"), \" en el menú superior y, a continuación, en \", React.createElement(_components.strong, null, \"Contactos (2)\"), \" en el menú desplegable:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/21.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Observa que, en esta página de Contactos, HubSpot ha creado dos contactos de ejemplo para ti: \", React.createElement(_components.em, null, \"Brian Halligan\"), \" y \", React.createElement(_components.em, null, \"Maria Johnson\"), \". Cada contacto tiene un conjunto de propiedades asociadas. Estas propiedades son columnas de la tabla Contactos; por ejemplo, número de teléfono y propietario del contacto.\"), \"\\n\", React.createElement(_components.p, null, \"Añadirá una nueva propiedad: estado de afiliación. Haga clic en \", React.createElement(_components.strong, null, \"Acciones (1)\"), \" y, a continuación, en \", React.createElement(_components.strong, null, \"Editar propiedades (2)\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/22.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"A continuación, haga clic en \", React.createElement(_components.strong, null, \"Crear propiedad\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/23.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"A continuación, creará la propiedad con Tipo de objeto: \", React.createElement(_components.strong, null, \"Contacto (1), Grupo: Información de contacto(2)\"), \", y \", React.createElement(_components.strong, null, \"Etiqueta:\"), \" Estado de **afiliación (**3). \", React.createElement(_components.strong, null, React.createElement(_components.em, null, \"Asegúrese de que la etiqueta es exactamente\")), \" el estado de afiliación. La especificación OpenAPI que cargaste para crear la extensión espera una etiqueta con ese nombre y ortografía exactos. Puede volver a comprobarlo haciendo clic en el \", React.createElement(_components.strong, null, \"icono </> (4)\"), \" y observando que el \", React.createElement(_components.strong, null, \"nombre interno\"), \" es exactamente \", React.createElement(_components.strong, null, \"membership_status (5)\"), \". Cuando esté listo, haga clic en \", React.createElement(_components.strong, null, \"Siguiente (6)\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/24.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Seleccione \", React.createElement(_components.strong, null, \"Texto unifilar\"), \" como \", React.createElement(_components.strong, null, \"tipo de\"), \" campo \", React.createElement(_components.strong, null, \"(1)\"), \" y, a continuación, \", React.createElement(_components.strong, null, \"Siguiente (2)\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/25.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Haga clic en \", React.createElement(_components.strong, null, \"Crear\"), \" en la parte inferior derecha:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/26.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Observe que una ventana emergente en la parte superior de la pantalla confirma que se ha creado la nueva propiedad:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/27.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Ahora, vuelva a la página \", React.createElement(_components.strong, null, \"Contactos\"), \" haciendo clic en \", React.createElement(_components.strong, null, \"Contactos (1)\"), \" en el menú superior y, a continuación, en **Contactos (2)**en el menú desplegable. A continuación, añadirás datos a los contactos de tu sistema CRM. Haz clic en \", React.createElement(_components.strong, null, \"Editar columnas\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/28.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Busque el \", React.createElement(_components.strong, null, \"ID de registro (1)\"), \" y marque su casilla de verificación \", React.createElement(_components.strong, null, \"(2)\"), \" para añadirlo. Observe que aparece al final de la lista de \", React.createElement(_components.strong, null, \"columnas seleccionadas (3)\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/29.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"A continuación, busque el \", React.createElement(_components.strong, null, \"Estado de afiliación (1)\"), \" y marque su casilla \", React.createElement(_components.strong, null, \"(2)\"), \" para añadirlo. También aparecerá al final de la lista de \", React.createElement(_components.strong, null, \"columnas seleccionadas (3)\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/30.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Arrastre \", React.createElement(_components.strong, null, \"ID de registro\"), \" y \", React.createElement(_components.strong, null, \"Estado de afiliación (1)\"), \" hacia arriba para que sean la segunda y tercera columnas, respectivamente. \", React.createElement(_components.strong, null, \"Nombre\"), \" será la primera columna. A continuación, haga clic en \", React.createElement(_components.strong, null, \"Aplicar (2)\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/31.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Su tabla debería parecerse a la siguiente imagen. Seleccione el registro de Brian Halligan haciendo clic en su casilla de verificación \", React.createElement(_components.strong, null, \"(1)\"), \" y, a continuación, haga clic en \", React.createElement(_components.strong, null, \"Editar (2)\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/32.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"En la ventana emergente, seleccione \", React.createElement(_components.strong, null, \"Estado de afiliación (1)\"), \" en el menú desplegable y escriba \", React.createElement(_components.strong, null, \"Lendyr Topaz (2)\"), \" como valor. Haz clic en \", React.createElement(_components.strong, null, \"Actualizar (3)\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/33.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Ahora debería ver en la tabla Contactos que el estado de afiliación de Brian Halligan es Topacio Lendyr (no se muestra). No cambie el estado de afiliación de María.\"), \"\\n\", React.createElement(_components.p, null, \"¡Enhorabuena! Ya estás listo para trabajar con la extensión personalizada en watsonx Assistant. No cierres todavía la ventana del navegador de HubSpot, es posible que tengas que volver a ella una vez más.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Añada la extensión personalizada a su asistente virtual\")), \"\\n\", React.createElement(_components.p, null, \"Anteriormente, creaste una extensión personalizada para HubSpot. Esto le dice a watsonx Assistant cómo conectarse a HubSpot, pero no le dice a watsonx Assistant de qué instancia de HubSpot debe extraer los datos.\"), \"\\n\", React.createElement(_components.p, null, \"En su asistente, vaya a la página \", React.createElement(_components.strong, null, \"Integraciones\"), \" \", React.createElement(_components.strong, null, \"(1)\"), \" y haga clic en Añadir (2) en la tarjeta HubSpot, luego haga clic en \", React.createElement(_components.strong, null, \"Añadir (3)\"), \" en la confirmación emergente.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/34.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"En la siguiente pantalla, puede leer cómo añadir la extensión personalizada. Cuando esté listo, haga clic en \", React.createElement(_components.strong, null, \"Siguiente\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/35.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Seleccione \", React.createElement(_components.strong, null, \"Bearer auth (1)\"), \" como tipo de autenticación y, a continuación, pegue el token de acceso que guardó de HubSpot \", React.createElement(_components.strong, null, \"(2)\"), \". (No necesitas especificar el servidor porque eso se incluyó como parte del archivo JSON proporcionado anteriormente al agregar la integración). Haz clic en \", React.createElement(_components.strong, null, \"Siguiente (3)\"), \".\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/36.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Verá un resumen de la extensión personalizada en la página final. Revise las operaciones proporcionadas por la extensión y, a continuación, haga clic en \", React.createElement(_components.strong, null, \"Finalizar\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/37.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Haga clic en \", React.createElement(_components.strong, null, \"Cerrar\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/38.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Como constructor, escriba la extensión en una Acción\")), \"\\n\", React.createElement(_components.p, null, \"Ahora tienes una extensión personalizada para tu sistema HubSpot CRM, y estás listo para usarla para personalizar la experiencia de los usuarios finales de Lendyr.\"), \"\\n\", React.createElement(_components.p, null, \"Anteriormente señalamos varias formas de personalizar la experiencia del usuario final con datos de CRM. Ahora, simplemente saludará al usuario final por su nombre y almacenará su nombre, correo electrónico y estado de afiliación en el asistente virtual. El almacenamiento de sus datos le permitirá consultarlos en futuras acciones.\"), \"\\n\", React.createElement(_components.p, null, \"Se omitirán algunas capturas de pantalla paso a paso; si no sabe cómo seguir estas instrucciones, consulte la sección 102 de este laboratorio sobre la creación de Acciones.\"), \"\\n\", React.createElement(_components.p, null, \"Abra la \", React.createElement(_components.em, null, \"página Acciones\"), \" y cree una \", React.createElement(_components.em, null, \"Nueva acción\"), \" desde \", React.createElement(_components.em, null, \"cero\"), \". El usuario final debe decir \\\"Autenticarme\\\" para iniciar esta interacción. (No se muestra.)\"), \"\\n\", React.createElement(_components.p, null, \"En el Paso 1, haz que el asistente pregunte \\\"¿Cuál es tu número de socio de Lendyr?\\\" y define la respuesta del cliente como un \", React.createElement(_components.em, null, \"número\"), \". Su pantalla debería tener un aspecto similar al siguiente:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/39.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Añade un segundo paso. En el paso 2, haz que el asistente diga \\\"Extrayendo tu información ahora...\\\". Cambie \", React.createElement(_components.strong, null, \"Y después\"), \" por \\\"Usar una extensión\\\", lo que abrirá una ventana emergente de \", React.createElement(_components.strong, null, \"configuración de extensiones\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/40.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"En el panel, como se muestra arriba, selecciona \", React.createElement(_components.strong, null, \"HubSpot CRM\"), \" como la extensión \", React.createElement(_components.strong, null, \"(1), Obtener contacto por ID\"), \" como la \", React.createElement(_components.strong, null, \"Operación (2)\"), \", y establece \", React.createElement(_components.strong, null, \"contactId\"), \" a la respuesta del usuario final al paso 1, \", React.createElement(_components.strong, null, \"\\\"1. ¿Cuál es tu número de miembro de Lendyr?\\\"\"), \". **(**3)\"), \"\\n\", React.createElement(_components.p, null, \"Observa cómo tú, como constructor, estás configurando fácilmente esta Acción para llamar a la API de HubSpot a través de la extensión. Puedes seleccionar los pasos u otras variables para conectar a la operación con un menú desplegable - no hay código ni complejidad innecesaria.\"), \"\\n\", React.createElement(_components.p, null, \"Haga clic en \", React.createElement(_components.strong, null, \"Aplicar\"), \" cuando haya terminado. El Paso 2 debería tener este aspecto:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/41.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Ahora, cree un nuevo paso. En este Paso 3, como has utilizado una extensión en un paso anterior, puedes hacer referencia a la información que la extensión ha devuelto.\"), \"\\n\", React.createElement(_components.p, null, \"En \", React.createElement(_components.strong, null, \"Asistente dice\"), \", escriba \\\"Bienvenido, \\\" \", React.createElement(_components.strong, null, \"(1)\"), \" y luego haga clic en el icono de variables \", React.createElement(_components.strong, null, \"(2)\"), \". Veamos qué variables tienes a tu disposición \", React.createElement(_components.strong, null, \"(3)\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/42.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"La lista de variables proporciona una selección de valores a los que puede hacer referencia en su asistente ahora que ha llamado a la extensión. Tenga en cuenta que incluye \", React.createElement(_components.strong, null, \"Ejecutar con éxito\"), \", que indica si la llamada a la API se ha realizado correctamente, para que pueda gestionar condicionalmente el caso de ID de cliente no reconocidos.\"), \"\\n\", React.createElement(_components.p, null, \"En esta lista, desplácese hacia abajo y haga clic en \", React.createElement(_components.strong, null, \"body.properties.firstname\"), \". A continuación, como se muestra a continuación \", React.createElement(_components.strong, null, \"(1)\"), \", escriba un signo de exclamación y una nueva frase: \\\"¿En qué puedo ayudarle hoy?\\\" Por último, cambia \", React.createElement(_components.strong, null, \"Y luego\"), \" por \", React.createElement(_components.strong, null, \"Finalizar la acción (2)\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/43.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Hay una cosa más que debe hacer. Ahora mismo, la información producida por la extensión no es almacenada por el asistente más allá de esta Acción. En otras palabras, aunque puedes utilizar la variable body.properties.firstname en el Paso 3, no puedes utilizarla en otra Acción.\"), \"\\n\", React.createElement(_components.p, null, \"Vamos a solucionarlo. Haz clic en el icono \", React.createElement(_components.strong, null, \"fx\"), \" del paso 3 para establecer los valores de las variables.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/44.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Observe que ahora se muestra la vista \", React.createElement(_components.strong, null, \"Valores de\"), \" variable \", React.createElement(_components.strong, null, \"(1)\"), \". Haga clic en \", React.createElement(_components.strong, null, \"Establecer nuevo valor + (2)\"), \" y desplácese hasta la parte inferior para seleccionar + \", React.createElement(_components.strong, null, \"Nueva variable de sesión (3)\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/45.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Creará varias variables de sesión nuevas para almacenar información de HubSpot. \", React.createElement(_components.strong, null, \"Las\"), \" variables de \", React.createElement(_components.strong, null, \"sesión\"), \"se almacenan para toda la sesión del usuario final - todo el tiempo que interactúa con el asistente virtual. Esto te permitirá utilizarlas en todas las acciones.\"), \"\\n\", React.createElement(_components.p, null, \"En la ventana emergente, establece el \", React.createElement(_components.strong, null, \"Nombre\"), \" como \", React.createElement(_components.strong, null, \"correo electrónico (1)\"), \", selecciona \", React.createElement(_components.strong, null, \"Texto libre (2)\"), \" como tipo y haz clic en \", React.createElement(_components.strong, null, \"Aplicar (3)\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/46.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"De vuelta en la vista del Paso 3, establece el valor de la variable email en body.properties \", React.createElement(_components.strong, null, \".email\"), \". Para ello, haz clic en el menú desplegable \", React.createElement(_components.strong, null, \"(1)\"), \", selecciona \", React.createElement(_components.strong, null, \"Hubspot CRM (2)\"), \" y, por último, elige la propiedad body.properties. \", React.createElement(_components.strong, null, \"email\"), \" (3):\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/47.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Ahora, repita los pasos anteriores para crear otras tres variables de sesión denominadas: \", React.createElement(_components.strong, null, \"nombre\"), \", \", React.createElement(_components.strong, null, \"apellido\"), \" y \", React.createElement(_components.strong, null, \"estado de afiliación\"), \". (No se muestra.) Al hacerlo, establezca cada variable de sesión con su valor correspondiente de la extensión personalizada. Su pantalla debería parecerse a la imagen de abajo; no olvide guardar la Acción haciendo clic en el \", React.createElement(_components.strong, null, \"icono Guardar\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/48.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Ya está. Ha añadido con éxito una extensión - una conexión a un servicio externo - en una Acción.\"), \"\\n\", React.createElement(_components.p, null, \"Esto puede haberle llevado bastante tiempo. Has pasado bastante tiempo configurando la extensión personalizada y luego configurando HubSpot. Pero tómese un momento para imaginar las dos funciones distintas de un desarrollador y un constructor. El desarrollador habría configurado la extensión personalizada y sacado el token de autenticación de HubSpot. En ese momento, habría enviado un mensaje al constructor y le habría dicho: \\\"Oye, ya puedes empezar\\\". El constructor habría abierto la página de Acciones y se habría puesto directamente a construir. Cada uno se especializa en lo que mejor sabe hacer: el desarrollador no tiene que escribir flujos conversacionales y el constructor no tiene que escribir código. Ese es el poder de las extensiones personalizadas.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Vea en acción la ampliación personalizada de un sistema CRM\")), \"\\n\", React.createElement(_components.p, null, \"Antes de continuar, recuerda que el \\\"número de miembro de Lendyr\\\" debe ser uno de los ID de registro en HubSpot, que son 1 y 51 (como se muestra a continuación). Cualquier otro número no funcionará - volverás a solucionar ese problema más adelante.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/49.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Ahora, dentro de la ventana Acciones (para poder chatear en modo \\\"depuración\\\"), abre el panel Vista previa. Una vez iniciado el chat, haz clic en el \", React.createElement(_components.strong, null, \"icono de valores variables (1)\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/50.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"A continuación, mantén la conversación mostrada arriba a la \", React.createElement(_components.strong, null, \"izquierda (2)\"), \" diciendo \\\"¡Autentíceme por favor!\\\", seguido de \\\"51\\\". Observa cómo las \", React.createElement(_components.strong, null, \"variables de acción (\"), \" 3) se rellenan y cambian a medida que conversas.\"), \"\\n\", React.createElement(_components.p, null, \"A continuación, inspeccione la extensión. Haga clic en el \", React.createElement(_components.strong, null, \"icono de actualización (4)\"), \" e introduzca las dos expresiones del cliente \\\"¡Hola! ¿Puede autenticarme?\\\" y \\\"1\\\" (5). El asistente llama ahora a la extensión; haga clic en \", React.createElement(_components.strong, null, \"Impacto (6)\"), \" para mostrar el \", React.createElement(_components.strong, null, \"Inspector de extensiones (7)\"), \". Observe todas las propiedades de su extensión HubSpot CRM.\"), \"\\n\", React.createElement(_components.p, null, \"Ahora puedes cerrar la ventana del navegador de HubSpot.\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"3\",\n    \"aria-labelledby\": \"crear-una-extensión-personalizada-para-un-servicio-de-venta-de-entradas\"\n  }, React.createElement(_components.h3, {\n    id: \"crear-una-extensión-personalizada-para-un-servicio-de-venta-de-entradas\"\n  }, React.createElement(_components.a, {\n    href: \"#crear-una-extensión-personalizada-para-un-servicio-de-venta-de-entradas\"\n  }, \"Crear una extensión personalizada para un servicio de venta de entradas\")), \"\\n\", React.createElement(_components.p, null, \"Excelente trabajo. Ahora es un buen momento para tomarse un descanso de diez minutos. Si estás en un taller, inclínate hacia tu vecino y pregúntale cómo le va. Cuando estés listo, retomarás con una nueva extensión personalizada para un servicio de venta de entradas.\"), \"\\n\", React.createElement(_components.p, null, \"Hasta ahora, has integrado el asistente virtual de Lendyr con el sistema CRM de Lendyr. Esto \", React.createElement(_components.em, null, \"extrae\"), \" información de un servicio externo para personalizar la experiencia del usuario final. Nuestra segunda extensión personalizada \", React.createElement(_components.em, null, \"enviará\"), \" información a un servicio externo.\"), \"\\n\", React.createElement(_components.p, null, \"Imaginemos que Lendyr usa Zendesk, un popular producto de software de atención al cliente, para gestionar tickets de atención al cliente, como informes de errores, quejas o solicitudes de asistencia. Lendyr recibe bastante tráfico de su asistente virtual que le pide crear un ticket, pero actualmente no tiene una conexión entre su asistente virtual y Zendesk.\"), \"\\n\", React.createElement(_components.p, null, \"Esto es lo que harás:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Prueba gratuita (sin tarjeta de crédito) de Zendesk\"), \"\\n\", React.createElement(_components.li, null, \"Crea una extensión personalizada para Zendesk en tu asistente\"), \"\\n\", React.createElement(_components.li, null, \"Escribir la extensión personalizada en una Acción\"), \"\\n\", React.createElement(_components.li, null, \"Previsualice la acción para ver su extensión en acción (¡valga el juego de palabras!)\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"¡Comencemos!\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Prueba gratuita (sin tarjeta de crédito) de Zendesk\")), \"\\n\", React.createElement(_components.p, null, \"Visita \", React.createElement(_components.a, {\n    href: \"https://www.zendesk.com/register/\"\n  }, \"https://www.zendesk.com/register/\"), \" para configurar una prueba gratuita. Sigue las instrucciones y, una vez verificado tu correo electrónico, aparecerá una pantalla como esta:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/51.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Tenga en cuenta que el URL de su cuenta de Zendesk tendrá un código único llamado dominio de servidor, con el siguiente formato: \", React.createElement(_components.strong, null, \"https://{server-domain}.zendesk.com\"), \". Usando su dominio de servidor único, visite \", React.createElement(_components.strong, null, \"https://{server-domain}.zendesk.com/admin\"), \" para ir a la página de su \", React.createElement(_components.strong, null, \"centro de administración (1)\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/52.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"En el menú de la izquierda, vaya a \", React.createElement(_components.strong, null, \"Aplicaciones e integraciones (2)\"), \", luego haga clic en \", React.createElement(_components.strong, null, \"API de Zendesk (3)\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"En la siguiente pantalla (no se muestra), acepta las Condiciones de servicio de Zendesk y el Acuerdo de licencia de API y desarrollador de aplicaciones.\"), \"\\n\", React.createElement(_components.p, null, \"A continuación, como se muestra a continuación, abra la pestaña \", React.createElement(_components.strong, null, \"Configuración\"), \" \", React.createElement(_components.strong, null, \"(1)\"), \", active el \", React.createElement(_components.strong, null, \"Acceso a token (2)\"), \" y haga clic en \", React.createElement(_components.strong, null, \"Añadir token de API (3)\"), \". \", React.createElement(_components.strong, null, \"Copie (4)\"), \" el token de API, guárdelo en algún sitio y haga clic en \", React.createElement(_components.strong, null, \"Guardar (5)\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/53.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Importante:\"), \" Asegúrese de copiar y guardar el token de API. Zendesk no volverá a mostrárselo una vez que haga clic en Guardar o salga de la página.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Crea una extensión personalizada para Zendesk en tu asistente\")), \"\\n\", React.createElement(_components.p, null, \"Navegue hasta este \", React.createElement(_components.a, {\n    href: \"https://raw.githubusercontent.com/watson-developer-cloud/assistant-toolkit/master/integrations/extensions/starter-kits/zendesk-support/zendesk.openapi.json\"\n  }, \"enlace\"), \", que almacena la especificación OpenAPI para la API de Zendesk. Descargue el archivo haciendo clic con el botón derecho en cualquier parte de la página y seleccionando \\\"Guardar página como...\\\" o \\\"Guardar como...\\\" Guarde el archivo en su dispositivo; debería aparecer en su dispositivo como un archivo JSON.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Nota:\"), \" Si el archivo JSON no se guarda con una extensión de archivo .json, asegúrese de agregarla manualmente cambiando el nombre del archivo. El nombre final del archivo debe ser \", React.createElement(_components.strong, null, \"zendesk.openapi.json\")), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"En watsonx Assistant, vaya a la \", React.createElement(_components.strong, null, \"página Integraciones (1)\"), \" y haga clic en \", React.createElement(_components.strong, null, \"Crear extensión personalizada (2):\")), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/54.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"En la siguiente pantalla, haga clic en \", React.createElement(_components.strong, null, \"Siguiente\"), \" para pasar al panel de \", React.createElement(_components.strong, null, \"Introducción\"), \" (no se muestra). Esto lo llevará al panel \", React.createElement(_components.strong, null, \"Información básica (1\"), \" ), que se muestra a continuación. Nombre su extensión personalizada \", React.createElement(_components.strong, null, \"Zendesk Ticketing (2)\"), \" y escriba una \", React.createElement(_components.strong, null, \"descripción (3)\"), \": \\\"Permite a los usuarios finales usar el asistente virtual para crear tickets en el servicio de tickets de Lendyr\\\". Haga clic en \", React.createElement(_components.strong, null, \"Siguiente (4)\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/55.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Arrastre y suelte la especificación OpenAPI \", React.createElement(_components.strong, null, \"(1)\"), \", o haga clic para cargarla. Haga clic en \", React.createElement(_components.strong, null, \"Siguiente (2)\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/56.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Revise la extensión y sus operaciones. Utilizará principalmente \", React.createElement(_components.strong, null, \"Crear billete\"), \"(1). Haga clic en \", React.createElement(_components.strong, null, \"Finalizar (2)\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/57.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"De vuelta en la \", React.createElement(_components.strong, null, \"página Integraciones (1)\"), \", haz clic en \", React.createElement(_components.strong, null, \"Añadir + (2)\"), \" en la tarjeta de Zendesk Ticketing:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/58.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Haga clic en \", React.createElement(_components.strong, null, \"Añadir\"), \" en la ventana emergente resultante (no se muestra). En el panel que aparece a \", React.createElement(_components.strong, null, \"continuación\"), \", haga clic en \", React.createElement(_components.strong, null, \"Siguiente\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/59.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"En la siguiente pantalla, deberá rellenar varios campos:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"En Tipo de \", React.createElement(_components.strong, null, \"autenticación\"), \", seleccione Autenticación básica.\"), \"\\n\", React.createElement(_components.li, null, \"Para el \", React.createElement(_components.strong, null, \"nombre de usuario\"), \", escriba \", React.createElement(_components.strong, null, \"su\"), \" dirección de correo electrónico y /token. Por ejemplo, \", React.createElement(_components.code, null, \"arvind.krishna@ibm.com/token.\")), \"\\n\", React.createElement(_components.li, null, \"En Contraseña, pegue el token de API que guardó en la configuración de la API de Zendesk.\"), \"\\n\", React.createElement(_components.li, null, \"Para Servidores, mantenga la opción seleccionada.\"), \"\\n\", React.createElement(_components.li, null, \"Para las variables de servidor, escriba su dominio de servidor único - esta es la primera parte de la URL que ve cuando inicia sesión en su prueba de Zendesk. Por ejemplo, \\\"ibm2023\\\" como la primera parte en \", React.createElement(_components.a, {\n    href: \"https://ibm2023.zendesk.com\"\n  }, \"https://ibm2023.zendesk.com.\")), \"\\n\", React.createElement(_components.li, null, \"Haga clic en \", React.createElement(_components.strong, null, \"Siguiente\"), \":\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/60.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"En la siguiente pantalla, puedes revisar la integración de Zendesk Ticketing \", React.createElement(_components.strong, null, \"(1)\"), \" y, a continuación, hacer clic en \", React.createElement(_components.strong, null, \"Finalizar (2)\"), \".\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/61.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"En la pantalla de confirmación final (no mostrada), simplemente haga clic en \", React.createElement(_components.strong, null, \"Cerrar\"), \".\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Escribir la extensión personalizada en una Acción\")), \"\\n\", React.createElement(_components.p, null, \"Ahora que la extensión Zendesk Ticketing está configurada, crearás una Acción que la utilice.\"), \"\\n\", React.createElement(_components.p, null, \"Vuelva a la página Acciones, que se muestra a continuación. A continuación, haga clic en \", React.createElement(_components.strong, null, \"Creado por usted (1)\"), \" en el menú desplegable \", React.createElement(_components.strong, null, \"Variables\"), \" de la izquierda. Observa todas las variables que las Acciones de Lendyr utilizan para interactuar con los usuarios finales (2), incluidas las que creaste anteriormente: \", React.createElement(_components.strong, null, \"correo electrónico\"), \", \", React.createElement(_components.strong, null, \"nombre\"), \", \", React.createElement(_components.strong, null, \"apellidos\"), \" y \", React.createElement(_components.strong, null, \"estado de afiliación\"), \". Algunas de ellas tienen tipos, como número o texto libre. Otros pueden configurarse para que tengan un valor inicial. Aprovechará el hecho de que es posible que ya conozca el nombre, la dirección de correo electrónico o el estado de afiliación del usuario final cuando cree el ticket:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/62.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"A continuación, creará otra Acción. En la pantalla anterior, haga clic en \", React.createElement(_components.strong, null, \"Creada por usted\"), \" en la categoría \", React.createElement(_components.strong, null, \"Acciones\"), \", luego haga clic en \", React.createElement(_components.strong, null, \"Nueva acción +\"), \", y Empezar de cero. (Esta secuencia de clics no se muestra, pero es la misma que con todas las Acciones que creó anteriormente).\"), \"\\n\", React.createElement(_components.p, null, \"¿Qué dice su cliente para iniciar esta interacción? \\\"Quiero enviar un ticket de soporte\\\". En \", React.createElement(_components.strong, null, \"el Paso 1\"), \", \", React.createElement(_components.strong, null, \"el Asistente de\"), \" escritura \", React.createElement(_components.strong, null, \"dice\"), \" \\\"¡Vamos a crear un ticket para ti! Necesitaré reunir alguna información para ayudarte a enviar el ticket\\\". Su nueva Acción debería verse así:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/63.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"A continuación, cree el paso 2. En este paso, establezca \", React.createElement(_components.strong, null, \"Asistente dice (1)\"), \" a \\\"¿Cuál es su dirección de correo electrónico?\\\" Luego, \", React.createElement(_components.strong, null, \"Defina\"), \" la respuesta del cliente (2) como \", React.createElement(_components.strong, null, \"Regex (Expresión regular)\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/64.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Una \", React.createElement(_components.em, null, \"expresión regular\"), \" es una secuencia de caracteres que satisface un patrón específico. Un ejemplo es el correo electrónico; contiene un nombre, seguido de \\\"@\\\", que a su vez va seguido de un nombre de dominio.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Se abrirá una ventana emergente. Seleccione \", React.createElement(_components.strong, null, \"Correo electrónico (1)\"), \" como expresión regular y haga clic en \", React.createElement(_components.strong, null, \"Aplicar (2)\"), \".\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/65.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Llegados a este punto, tu Acción debería tener este aspecto:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/66.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Considere que sólo desea pedir al usuario final su dirección de correo electrónico si aún no la conoce. Por lo tanto, como se muestra a continuación, cambie el \", React.createElement(_components.strong, null, \"Paso 2 se toma\"), \" \", React.createElement(_components.strong, null, \"sin condiciones\"), \" a \", React.createElement(_components.strong, null, \"Paso 2 se toma con condiciones (1)\"), \". A continuación, cambie la condición por defecto a: el \", React.createElement(_components.strong, null, \"correo electrónico no está definido (2)\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/67.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Ahora que ha establecido esta condición, su asistente virtual sólo pedirá al usuario final su dirección de correo electrónico si el asistente virtual \", React.createElement(_components.em, null, \"no\"), \" la conoce ya.\"), \"\\n\", React.createElement(_components.p, null, \"Añade un nuevo paso - \", React.createElement(_components.strong, null, \"Paso 3\"), \". Como se muestra a continuación, en \", React.createElement(_components.strong, null, \"Asistente dice (1)\"), \", escriba: \\\"¿Cuál es su nombre de pila?\\\" Configure \", React.createElement(_components.strong, null, \"Definir respuesta del\"), \" cliente como **Texto libre (**2). De nuevo, sólo querrá preguntar al usuario final por su nombre si aún no conoce su nombre de pila. Cambie \", React.createElement(_components.strong, null, \"Paso 3 se realiza\"), \" \", React.createElement(_components.strong, null, \"sin condiciones (3)\"), \" a \", React.createElement(_components.strong, null, \"Paso 3 se realiza con condiciones\"), \". Luego cambie la condición a: \", React.createElement(_components.strong, null, \"firstname is not defined\"), \". El paso 3 debería quedar así:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/68.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"A continuación, añada el Paso 4. En este paso, establece \", React.createElement(_components.strong, null, \"Asistente dice: (1)\"), \" a \\\"Por favor, describa su problema o situación en detalle. Esta descripción será enviada al equipo de soporte como el ticket\\\". Luego, \", React.createElement(_components.strong, null, \"Defina la respuesta del\"), \" cliente (2) como \\\"Texto libre:\\\"\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/69.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Crear Paso 5, y establecer \", React.createElement(_components.strong, null, \"Asistente dice (1)\"), \" a: \\\"Creando su ticket...\\\" Cambiar **Y luego (**2) de \\\"Continuar al siguiente paso\\\" a \\\"Usar una extensión:\\\"\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/70.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"En la ventana emergente, seleccione \\\"Zendesk Ticketing\\\" en \", React.createElement(_components.strong, null, \"Extensión (1)\"), \" y \\\"Crear Ticket\\\" en \", React.createElement(_components.strong, null, \"Operación (2)\"), \". Abra el menú desplegable (3) donde establece \", React.createElement(_components.strong, null, \"request.\"), \" subject como algo, desplácese hasta el final y seleccione \", React.createElement(_components.strong, null, \"Expression (4)\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/71.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Si elige \", React.createElement(_components.strong, null, \"Expresión\"), \", podrá introducir texto libre \", React.createElement(_components.strong, null, \"(1)\"), \". Escriba \\\"Ticket de soporte\\\", como se muestra en la siguiente imagen. A continuación, abra los \", React.createElement(_components.strong, null, \"parámetros opcionales (2)\"), \" y establezca request \", React.createElement(_components.strong, null, \".comment.body\"), \" en la respuesta del \", React.createElement(_components.strong, null, \"paso 4 (3)\"), \". Establece request.requester \", React.createElement(_components.strong, null, \".name\"), \" como la variable de sesión \", React.createElement(_components.strong, null, \"firstname (\"), \" 4). Por último, establece \", React.createElement(_components.strong, null, \"request.requester.email\"), \" como la variable de sesión \", React.createElement(_components.strong, null, \"email (5)\"), \" y haz clic en \", React.createElement(_components.strong, null, \"Apply (6)\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/72.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Nota: Tenga cuidado de no establecer accidentalmente \", React.createElement(_components.strong, null, \"request.requester.\"), \" name a la respuesta del Paso \", React.createElement(_components.strong, null, \"3\"), \", y no establecer \", React.createElement(_components.strong, null, \"request.requester.email\"), \" a la respuesta del \", React.createElement(_components.strong, null, \"Paso 2\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Su Acción debería tener ahora este aspecto:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/73.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Hay una cosa más que tienes que hacer.\"), \"\\n\", React.createElement(_components.p, null, \"En el paso 5, pasas las variables de sesión \", React.createElement(_components.strong, null, \"nombre\"), \" y \", React.createElement(_components.strong, null, \"correo electrónico\"), \" a la extensión. Estas variables de sesión son donde almacenaste la información de nombre y correo electrónico de HubSpot.\"), \"\\n\", React.createElement(_components.p, null, \"Sin embargo, si el usuario final intenta enviar un ticket de soporte con esta Acción cuando el asistente virtual no ha extraído su información del sistema HubSpot CRM, entonces esas variables de sesión estarán en blanco (también conocidas como \\\"indefinidas\\\" o \\\"no definidas\\\"). Y aunque los pasos dos y tres de esta Acción solicitan el correo electrónico y el nombre de pila cuando esas variables de sesión están en blanco (o \\\"no definidas\\\" / \\\"no definidas\\\"), no estás utilizando esa información cuando llamas a la extensión.\"), \"\\n\", React.createElement(_components.p, null, \"Tenemos que asegurarnos de que su asistente virtual utiliza las respuestas a los pasos dos y tres cuando las variables de sesión email y nombre no están definidas. Para ello, añade el paso 6, y \", React.createElement(_components.strong, null, \"arrastra y suelta el nuevo paso entre los pasos tres y cuatro\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/74.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"El Paso 6\"), \" se convierte ahora en el \", React.createElement(_components.strong, null, \"Paso 4\"), \". En él,\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Establezca una condición, que comprobará si tanto el nombre como el correo electrónico están definidos.\"), \"\\n\", React.createElement(_components.li, null, \"Define la primera condición como \", React.createElement(_components.strong, null, \"3. ¿Cuál es tu nombre de pila?\")), \"\\n\", React.createElement(_components.li, null, \"Establezca la segunda condición en \", React.createElement(_components.strong, null, \"2. Se define ¿Cuál es su dirección de correo electrónico?\")), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/75.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Cuando termine de configurar la condición de paso, haga clic en \", React.createElement(_components.strong, null, \"fx (1\"), \" ) para abrir la vista \", React.createElement(_components.strong, null, \"Valores variables (2)\"), \" y haga clic en \", React.createElement(_components.strong, null, \"Establecer nuevo valor + (3)\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/76.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Establezca la variable de sesión \", React.createElement(_components.strong, null, \"firstname (1\"), \" ) en la respuesta del \", React.createElement(_components.strong, null, \"paso 3\"), \" siguiendo la secuencia de clics \", React.createElement(_components.strong, null, \"(2)\"), \" y \", React.createElement(_components.strong, null, \"(3)\"), \" que se muestra a continuación:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/77.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Nuevamente usando la secuencia de clics mostrada arriba, también establezca la variable de Sesión \", React.createElement(_components.strong, null, \"email\"), \" a la respuesta del Paso \", React.createElement(_components.strong, null, \"2\"), \". Su Paso 4 debería tener ahora este aspecto:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/78.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Si no ves \\\"2. ¿Cuál es tu dirección de correo electrónico?\\\" en la lista de variables de acción, puede tratarse de un error.\"), \"\\n\", React.createElement(_components.p, null, \"Tómese un momento para considerar el comportamiento que ha configurado en esta Acción \", React.createElement(_components.strong, null, \"(Quiero enviar un ticket de soporte)\"), \". Cuando el usuario final invoca esta Acción, si las variables de sesión \", React.createElement(_components.strong, null, \"email\"), \" y \", React.createElement(_components.strong, null, \"firstname\"), \" \", React.createElement(_components.em, null, \"no\"), \" están definidas, el asistente virtual solicita esta información en el Paso 2 y Paso 3. En el Paso 4, si el asistente virtual solicitó y recibió esta información en los Pasos 2 y 3, usted almacena las respuestas a los Pasos 2 y 3 en sus correspondientes variables de sesión.\"), \"\\n\", React.createElement(_components.p, null, \"Ahora, esta información siempre estará en las variables de sesión, por lo que la extensión siempre tendrá el correo electrónico y el nombre correctos para pasar a Zendesk.\"), \"\\n\", React.createElement(_components.p, null, \"Por último, crea un paso de cierre. Sitúate en el paso 6 de forma que añadas un paso al final, y crea el paso 7. Como se muestra a continuación, escriba \", React.createElement(_components.strong, null, \"(1)\"), \" \\\"¡Éxito! Su número de ticket es \\\". A continuación, escriba \", React.createElement(_components.strong, null, \"$\"), \" o haga clic en el \", React.createElement(_components.strong, null, \"icono de insertar una variable\"), \" y desplácese hacia abajo para seleccionar la variable de \", React.createElement(_components.strong, null, \"body.request.id (\"), \" 2) devuelta por la extensión de tickets de Zendesk en el paso 6 cuando creó el nuevo ticket:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/79.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Termine la sección \", React.createElement(_components.strong, null, \"Asistente dice (1)\"), \" con \\\". Un representante de atención al cliente se pondrá en contacto contigo en los próximos días\\\". Cambia \", React.createElement(_components.strong, null, \"Y luego (\"), \" 2) por \\\"Finalizar la acción\\\". Tu Paso 7 debería tener este aspecto:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/80.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"¡Fantástico trabajo! Nuestra acción está lista. Recuerda guardarla.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Previsualice la acción para ver su extensión en acción\")), \"\\n\", React.createElement(_components.p, null, \"Prueba una conversación en la que no introduzcas información sobre ti a través de HubSpot, como se muestra a continuación. Recuerda visualizarla con las \", React.createElement(_components.strong, null, \"variables de Acción\"), \" visibles como hiciste anteriormente, para que puedas ver cómo se rellenan en tiempo real. Introduce las siguientes expresiones:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Diga \\\"Quiero enviar un ticket de soporte\\\"\"), \"\\n\", React.createElement(_components.li, null, \"Introduzca su dirección de correo electrónico (o cualquier dirección de correo electrónico)\"), \"\\n\", React.createElement(_components.li, null, \"Introduzca su nombre (o cualquier nombre de pila)\"), \"\\n\", React.createElement(_components.li, null, \"Diga \\\"Quiero ver cómo funciona esta extensión\\\" (la captura de pantalla de abajo captura la conversación cuyo único)\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/81.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Ahora, ve a ver el ticket que creaste en tu instancia de Zendesk. Para ello, navegue por su navegador hasta \", React.createElement(_components.strong, null, \"https://{server-domain}.zendesk.com/agent/dashboard (1)\"), \", y vea el ticket con asunto 'Ticket de soporte' (2):\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/82.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Su ticket debe tener un ID de #2. El ID de ticket #1 es un ticket de muestra creado por Zendesk para usted.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Nota: Zendesk también envía dos correos electrónicos, uno al remitente del ticket y otro al administrador de Zendesk. Dependiendo de los correos electrónicos que haya suministrado, es posible que vea ambos en su bandeja de entrada.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Ahora, prueba una conversación en la que primero extraigas información a través de HubSpot y luego crees un ticket de soporte a través de Zendesk. (Recuerda primero pulsar \", React.createElement(_components.strong, null, \"Actualizar\"), \" para reiniciar la sesión de chat.) De esta manera, estarás aprovechando tanto la extensión de HubSpot como la de Zendesk:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/83.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Fíjate en que esta vez el asistente no te ha pedido tu nombre de pila ni tu dirección de correo electrónico, puesto que ya los ha recuperado del sistema CRM de HubSpot.\"), \"\\n\", React.createElement(_components.p, null, \"Vuelva a su panel de control de Zendesk y vea el ticket que acaba de crear. (Tenga en cuenta que es posible que tenga que actualizar la página.) Una vez que haya terminado, ahora puede cerrar la ventana del navegador de Zendesk.\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"3\",\n    \"aria-labelledby\": \"depurar-una-extensión-personalizada\"\n  }, React.createElement(_components.h3, {\n    id: \"depurar-una-extensión-personalizada\"\n  }, React.createElement(_components.a, {\n    href: \"#depurar-una-extensión-personalizada\"\n  }, \"Depurar una extensión personalizada\")), \"\\n\", React.createElement(_components.p, null, \"Ya ha creado y previsualizado con éxito dos extensiones personalizadas. Ha notado alguna laguna en las acciones, donde las cosas podrían ir mal si el usuario final proporciona una determinada respuesta?\"), \"\\n\", React.createElement(_components.p, null, \"Hay algunas lagunas en las Acciones que has construido más arriba.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"En la Acción \", React.createElement(_components.strong, null, \"Autenticarme\"), \", no preparó una respuesta alternativa si no puede encontrar al usuario final en el sistema HubSpot CRM.\"), \"\\n\", React.createElement(_components.li, null, \"En las acciones \", React.createElement(_components.strong, null, \"Autentifícame\"), \" y \", React.createElement(_components.strong, null, \"quiero enviar un ticket de soporte\"), \", no preparaste respuestas alternativas si la extensión no logra producir una respuesta válida del servicio externo. Por ejemplo, esto podría ocurrir si tus tokens de autenticación caducaran.\"), \"\\n\", React.createElement(_components.li, null, \"La Acción \", React.createElement(_components.strong, null, \"Quiero enviar un ticket de\"), \" soporte no pide al usuario final que confirme su nombre y correo electrónico antes de enviar el ticket de soporte, por lo que el usuario final no tiene la oportunidad de actualizar su nombre y correo electrónico antes de enviar el ticket.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Cuando algo va mal con una extensión, watsonx Assistant hace que sea fácil encontrar la raíz del problema utilizando el \", React.createElement(_components.strong, null, \"inspector de extensiones\"), \" - algo que este laboratorio tocó brevemente antes.\"), \"\\n\", React.createElement(_components.p, null, \"El inspector de extensiones le permite probar una extensión personalizada, ver la solicitud que envía y las respuestas que devuelve a su acción, y depurar en el panel Vista previa de la página Acciones.\"), \"\\n\", React.createElement(_components.p, null, \"En primer lugar, inspeccionemos una extensión personalizada que funcione correctamente. Ejecute la siguiente conversación con su asistente en el panel Vista previa de la página Acciones:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/84.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Esta extensión funciona correctamente: utiliza el número de miembro proporcionado por el usuario final para extraer la información del usuario final del sistema HubSpot CRM. Haz clic en \", React.createElement(_components.strong, null, \"Inspeccionar (1)\"), \" para abrir el \", React.createElement(_components.strong, null, \"inspector de extensiones\"), \" y ver sus detalles:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/85.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Como se puede ver arriba, el panel de \", React.createElement(_components.strong, null, \"inspección de la\"), \" extensión muestra los parámetros de solicitud enviados \", React.createElement(_components.em, null, \"a\"), \" **(2)**y las propiedades de respuesta recibidas \", React.createElement(_components.em, null, \"de\"), \" \", React.createElement(_components.strong, null, \"(3)\"), \" la API de HubSpot a través de la extensión personalizada. Aunque solo almacenas y utilizas un puñado de estas propiedades de respuesta en tu Acción -incluyendo email, firstname, lastname y membership_status- hay muchas más propiedades que se pasan y que proporcionan un contexto útil.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/86.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"En esta conversación, algo salió mal. Aunque hay dos mensajes de error que dejan claro que algo salió mal, también se puede ver que el asistente virtual dijo \\\"¡Bienvenido, !\\\" \", React.createElement(_components.strong, null, \"(\"), \" 1) Falta el nombre que normalmente vendría del sistema CRM de HubSpot, lo que sugiere que algo salió mal. Haz clic en \", React.createElement(_components.strong, null, \"Detalles (2)\"), \" junto a \\\"Error en la respuesta\\\" para ver una ventana emergente con los errores de ejecución que afectan a la acción.\"), \"\\n\", React.createElement(_components.p, null, \"En la siguiente ventana emergente, amplíe el primer error:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/87.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Dependiendo de tu capacidad para analizar la jerga técnica, puede que seas capaz o no de entender estos mensajes de error. No pasa nada: el inspector de extensiones de watsonx Assistant te lo explicará todo en términos fáciles de entender.\"), \"\\n\", React.createElement(_components.p, null, \"Cierre la ventana emergente de errores de ejecución. Ahora haga clic en \", React.createElement(_components.strong, null, \"Inspeccionar (1)\"), \" junto a \\\"Error de extensión\\\". ¿Qué ve? Parece que el cuerpo de la respuesta está completamente en blanco \", React.createElement(_components.strong, null, \"(2)\"), \" - y la propiedad de respuesta de éxito es \", React.createElement(_components.strong, null, \"falsa (3)\"), \". Esto significa que HubSpot no pudo encontrar un contacto con ID 46. Tal vez recuerdes que tu sistema HubSpot CRM no tiene ningún contacto con el ID 46.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/88.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"También puede abrir la pestaña \", React.createElement(_components.strong, null, \"Avanzadas\"), \" del inspector de extensiones (no se muestra) para ver la solicitud y la respuesta de esta extensión sin procesar.\"), \"\\n\", React.createElement(_components.p, null, \"Podrías solucionar el problema de este usuario final añadiendo un registro de Contacto a HubSpot con el ID 46. Pero eso no es una solución escalable para otras personas que introducen un número de socio inexistente. Pero esa no es una solución escalable para otras personas que introducen un número de socio inexistente.\"), \"\\n\", React.createElement(_components.p, null, \"Solucionemos este problema en el asistente virtual.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Haga clic en \", React.createElement(_components.strong, null, \"Autenticarme reconocido\"), \" en el panel Vista previa para abrir la Acción.\"), \"\\n\", React.createElement(_components.li, null, \"Haga clic en el \", React.createElement(_components.strong, null, \"paso 3\"), \".\"), \"\\n\", React.createElement(_components.li, null, \"Añade una condición al paso tres, así que selecciona \", React.createElement(_components.strong, null, \"con condiciones\"), \".\"), \"\\n\", React.createElement(_components.li, null, \"El paso 3 debe ejecutarse cuando la extensión se ejecute correctamente, así que seleccione \", React.createElement(_components.strong, null, \"Si se ejecuta correctamente\"), \".\"), \"\\n\", React.createElement(_components.li, null, \"Su condición final debe indicar \", React.createElement(_components.strong, null, \"2 Ran con éxito == verdadero\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/89.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Ahora sólo saludará al usuario final por su nombre si la extensión consigue obtener su nombre y otra información de HubSpot. Añadamos también un paso que se dará cuando la extensión no consiga encontrar la información del usuario final:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Crear un nuevo paso 4.\"), \"\\n\", React.createElement(_components.li, null, \"Incluir la condición de que \", React.createElement(_components.strong, null, \"2 Ran con éxito == false\"), \".\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"El Asistente de\"), \" configuración dice: \\\"Lamentablemente, no he podido introducir tus datos. ¿Quiere intentarlo de nuevo?\\\"\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Defina la respuesta del cliente\"), \" como \", React.createElement(_components.strong, null, \"Confirmación\"), \", que permite al usuario final seleccionar \", React.createElement(_components.em, null, \"sí\"), \" o \", React.createElement(_components.em, null, \"no\"), \":\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/90.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"A continuación, añade un paso para cuando el usuario seleccione \\\"sí\\\" en el paso anterior, para que pueda intentar introducir de nuevo su número de socio de Lendyr:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Crear un nuevo paso 5.\"), \"\\n\", React.createElement(_components.li, null, \"Añadir la condición de que \", React.createElement(_components.strong, null, \"4. Por desgracia, yo estaba ... es Sí\"), \".\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Asistente de\"), \" Cambio dice a \\\"De acuerdo -\\\"\"), \"\\n\", React.createElement(_components.li, null, \"Cambiar \", React.createElement(_components.strong, null, \"Y luego\"), \" a Volver a preguntar paso(s) anterior(es).\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/91.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Seleccione todas las casillas de verificación para que su asistente vuelva a preguntar todos los pasos de acción y, a continuación, haga clic en \", React.createElement(_components.strong, null, \"Aplicar\"), \":\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/92.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Por último, añada el paso 6 para cuando los usuarios seleccionen \\\"no\\\" en el paso 4:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Haga clic en **Nuevo paso + **.\"), \"\\n\", React.createElement(_components.li, null, \"Añadir la condición de que \", React.createElement(_components.strong, null, \"4. Por desgracia, yo era ... es No\"), \".\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"El Asistente de\"), \" Cambios dice: \\\"De acuerdo. ¿En qué más puedo ayudarle hoy?\\\".\"), \"\\n\", React.createElement(_components.li, null, \"Cambie \", React.createElement(_components.strong, null, \"Y luego\"), \" a \", React.createElement(_components.strong, null, \"Finalizar la acción\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Su Acción debería tener ahora este aspecto:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/93.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"¡Bien hecho! Guarda tu Acción, abre el panel de Vista Previa, refresca el panel de Vista Previa, y prueba esta conversación de nuevo. \", React.createElement(_components.em, null, \"En este escenario, el usuario final elige intentarlo\"), \" de nuevo:\\\\\\\\\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/94.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Pulse actualizar de nuevo e inténtelo. \", React.createElement(_components.em, null, \"En este caso, el usuario final decide no volver a intentarlo\"), \".\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Assistant/images/201/95.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"¡Enhorabuena! Ahora ya sabe cómo utilizar el Inspector de extensiones para probar, comprender y depurar sus extensiones y las Acciones que las utilizan.\"), \"\\n\")), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"reflexiones-finales\"\n  }, React.createElement(_components.h2, {\n    id: \"reflexiones-finales\"\n  }, React.createElement(_components.a, {\n    href: \"#reflexiones-finales\"\n  }, \"Reflexiones finales\")), \"\\n\", React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"3\",\n    \"aria-labelledby\": \"qué-valor-tienen-las-extensiones-personalizadas\"\n  }, React.createElement(_components.h3, {\n    id: \"qué-valor-tienen-las-extensiones-personalizadas\"\n  }, React.createElement(_components.a, {\n    href: \"#qué-valor-tienen-las-extensiones-personalizadas\"\n  }, \"¿Qué valor tienen las extensiones personalizadas?\")), \"\\n\", React.createElement(_components.p, null, \"Las extensiones personalizadas eliminan la necesidad de que un desarrollador cree un proxy o una capa de middleware entre su asistente virtual y otras API. Los desarrolladores pueden conectar el asistente virtual directamente a una API a través de una extensión.\"), \"\\n\", React.createElement(_components.p, null, \"A continuación, los creadores pueden utilizar esas extensiones en Acciones para extraer nueva información o enviar información que el asistente haya recopilado, todo ello sin escribir ningún código. También pueden probar y depurar sus extensiones de forma independiente en watsonx Assistant sin necesidad de acceder a otras API.\"), \"\\n\", React.createElement(_components.p, null, \"¿Qué significa esto para un jefe de producto que supervisa un proyecto de asistente virtual? Sus desarrolladores no necesitan dedicar tiempo a crear un motor de orquestación de servicios (SOE) personalizado para conectar el asistente virtual a servicios externos: pueden conectar el asistente virtual directamente a través de extensiones personalizadas, y pueden actualizar y mantener fácilmente sus extensiones a lo largo del tiempo. A continuación, sus desarrolladores pueden utilizar, probar y depurar las extensiones en la experiencia de creación sin la ayuda de un desarrollador. Los desarrolladores ya no están bloqueados por la disponibilidad de un desarrollador para escribir integraciones en flujos conversacionales, y pueden dotar a su equipo de desarrolladores \", React.createElement(_components.em, null, \"no técnicos\"), \"precisamente porque no necesitan escribir ningún código para construir flujos conversacionales complejos, integrados y reales.\"), \"\\n\", React.createElement(_components.p, null, \"En resumen, las extensiones combinan la potencia de la integración con una API con la facilidad de uso para desarrolladores y constructores por igual, lo que reduce el tiempo de obtención de valor y el coste total de propiedad.\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"3\",\n    \"aria-labelledby\": \"y-los-webhooks\"\n  }, React.createElement(_components.h3, {\n    id: \"y-los-webhooks\"\n  }, React.createElement(_components.a, {\n    href: \"#y-los-webhooks\"\n  }, \"¿Y los webhooks?\")), \"\\n\", React.createElement(_components.p, null, \"Si eres una persona más técnica, puede que sepas que un equipo de desarrollo suele tener dos opciones para conectar su aplicación con el mundo externo: \", React.createElement(_components.strong, null, \"webhooks\"), \" y \", React.createElement(_components.strong, null, \"llamar a una\"), \" API externa. Las extensiones personalizadas permiten a los creadores y desarrolladores llamar a API externas en watsonx Assistant. ¿Qué ocurre con los webhooks?\"), \"\\n\", React.createElement(_components.p, null, \"Los desarrolladores suelen configurar webhooks en watsonx Assistant cuando controlan tanto watsonx Assistant \", React.createElement(_components.em, null, \"como\"), \" la API o el servicio externo al que quieren conectarlo. Las series avanzada y experta de este laboratorio tratarán sobre el uso de webhooks con watsonx Assistant.\"))));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/VAD-VAR-Workshop/VAD-VAR-Workshop/content/Watsonx/Assistant/Level-4/201.es.md\";\nimport React, {useRef, useState} from 'react';\nimport cx from 'classnames';\nimport SEO from '@components/SEO';\nimport PageHeader from '@components/PageHeader';\nimport MDXWrapper from '@components/MDXWrapper';\nimport ContentWrapper from '@components/ContentWrapper';\nimport TableOfContents from '@components/TableOfContents';\nimport * as styles from '@styles/pages/{mdx.fields__slug}.module.scss';\nconst Content = props => {\n  const {data: {mdx: {tableOfContents: {items: tocItems}, frontmatter: {toc = true, title, timeToComplete, updated}}}, children} = props;\n  const articleRef = useRef(null);\n  const {0: currSection} = useState('');\n  const showToc = (toc === null ? true : toc) && tocItems;\n  return React.createElement(React.Fragment, null, React.createElement(PageHeader, {\n    timeToComplete,\n    updated\n  }, tocItems[0].title || title || ''), React.createElement(ContentWrapper, {\n    className: styles.wrapper\n  }, React.createElement(\"article\", {\n    className: cx(styles.article, !showToc && styles.noToc),\n    ref: articleRef\n  }, React.createElement(MDXWrapper, {\n    components: {\n      h1: () => null\n    }\n  }, children)), showToc && React.createElement(TableOfContents, {\n    itemsList: tocItems,\n    maxDepth: 2,\n    currSection: currSection\n  })));\n};\nconst pageQuery = \"3587680389\";\nexport const Head = props => {\n  const {location: {pathname}, data: {mdx: {frontmatter: {title}, tableOfContents: {items}}}} = props;\n  return React.createElement(SEO, {\n    pathname,\n    title: title || items[0].title || undefined\n  });\n};\nContent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Content, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","section","h1","h2","a","p","h3","strong","img","ol","li","em","ul","blockquote","code","_provideComponents","components","React","className","id","href","src","alt","wrapper","MDXLayout","Content","data","mdx","tableOfContents","items","tocItems","frontmatter","toc","title","timeToComplete","updated","children","articleRef","useRef","currSection","useState","showToc","PageHeader","ContentWrapper","styles","cx","ref","MDXWrapper","TableOfContents","itemsList","maxDepth","Head","location","pathname","SEO","undefined","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}