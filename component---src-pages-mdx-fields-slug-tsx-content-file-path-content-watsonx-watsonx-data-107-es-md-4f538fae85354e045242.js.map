{"version":3,"file":"component---src-pages-mdx-fields-slug-tsx-content-file-path-content-watsonx-watsonx-data-107-es-md-4f538fae85354e045242.js","mappings":"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","sources":["webpack://vad-var-site/./content/Watsonx/WatsonxData/107.es.md","webpack://vad-var-site/./src/pages/{mdx.fields__slug}.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    section: \"section\",\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\",\n    strong: \"strong\",\n    ol: \"ol\",\n    li: \"li\",\n    img: \"img\",\n    ul: \"ul\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"descarga-de-datos-de-un-almacén-de-datos\"\n  }, React.createElement(_components.h2, {\n    id: \"descarga-de-datos-de-un-almacén-de-datos\"\n  }, React.createElement(_components.a, {\n    href: \"#descarga-de-datos-de-un-almacén-de-datos\"\n  }, \"Descarga de datos de un almacén de datos\")), \"\\n\", React.createElement(_components.p, null, \"Con watsonx.data, las empresas pueden descargar datos que realmente no necesitan estar en el almacén a un almacenamiento de objetos de menor coste. Con motores adaptados, los costes de almacenamiento de datos pueden reducirse descargando cargas de trabajo de un almacén de datos a watsonx.data. En concreto, las aplicaciones que necesitan acceder a estos datos pueden consultarlos a través de Presto (o Spark). Esto incluye poder combinar los datos descargados con los datos que permanecen en el almacén. Esta sección mostrará un ejemplo de cómo se puede hacer esto con Db2 (pero los pasos son equivalentes para otros productos de almacén de datos).\"), \"\\n\", React.createElement(_components.p, null, \"Además, los motores externos que soportan el formato de tabla abierta Iceberg también pueden trabajar directamente con los datos en el almacenamiento de objetos de watsonx.data. Los últimos Db2 y Netezza también pueden participar en el ecosistema de watsonx.data, accediendo directamente a los datos de lakehouse en el almacenamiento de objetos (al igual que Presto y Spark).\"), \"\\n\", React.createElement(_components.p, null, \"En el \", React.createElement(_components.a, {\n    href: \"/watsonx/watsonxdata/106\"\n  }, \"Laboratorio\"), \" anterior usted registró un entorno Db2 existente con watsonx.data (llamándolo \", React.createElement(_components.strong, null, \"Db2DW\"), \") y creó un catálogo para él llamado \", React.createElement(_components.strong, null, \"db2catalog\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"En este escenario de ejemplo, vas a \\\"mover\\\" la tabla \", React.createElement(_components.strong, null, \"gosalesdw.sls_sales_fact\"), \" de Db2 al almacenamiento de objetos de watsonx.data. Se creará como una tabla Iceberg, en un nuevo esquema que creará llamado \", React.createElement(_components.strong, null, \"wxgosalesdw\"), \", gestionado por el catálogo \", React.createElement(_components.strong, null, \"iceberg_data\"), \".\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Seleccione el icono Gestor de datos en el menú de la izquierda.\"), \"\\n\", React.createElement(_components.li, null, \"Vaya a la parte superior del panel de navegación y haga clic en el menú desplegable \", React.createElement(_components.strong, null, \"Crear\"), \". Seleccione \", React.createElement(_components.strong, null, \"Crear esquema\"), \". (Nota: En estos pasos se utiliza la interfaz web, pero también puede crear un esquema a través de SQL).\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/107/create-schema.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"3\"\n  }, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"En la ventana emergente \", React.createElement(_components.strong, null, \"Crear esquema\"), \", seleccione/introduzca la siguiente información y, a continuación, haga clic en el botón Crear:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Catálogo: iceberg_data\"), \"\\n\", React.createElement(_components.li, null, \"Nombre: wxgosalesdw\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/107/create-schema-save.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"4\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Despliegue el catálogo \", React.createElement(_components.strong, null, \"iceberg_data\"), \". El nuevo esquema debería aparecer en la lista.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/107/create-schema-view.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"5\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Seleccione el icono Espacio de trabajo de consulta en el menú de la izquierda.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Para crear una nueva tabla con la misma definición de tabla que la tabla original, puede utilizar la sentencia SQL CREATE TABLE AS SELECT (CTAS).\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"6\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Copie y pegue el siguiente SQL en la \", React.createElement(_components.strong, null, \"hoja de cálculo SQL\"), \". Haga clic en \", React.createElement(_components.strong, null, \"Ejecutar en presto-01\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  create table iceberg_data.wxgosalesdw.sls_sales_fact as \", React.createElement(_components.span, {\n    className: \"hljs-keyword\"\n  }, \"select\"), \" * from db2catalog.GOSALESDW.SLS_SALES_FACT;\\n\")), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/107/create-table.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"El resultado que aparece en la parte inferior de la hoja de cálculo muestra el número de filas que se han insertado desde la tabla de origen a la nueva tabla.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/107/create-table-result.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"En un escenario real, se eliminaría la tabla del almacén de datos. Sin embargo, para mantener el conjunto de datos de ejemplo \", React.createElement(_components.strong, null, \"gosalesdw\"), \" intacto en su entorno, no lo hará aquí.\"), \"\\n\", React.createElement(_components.p, null, \"Como prueba, puede ejecutar una consulta federada que combine la nueva tabla en el almacenamiento de objetos con las tablas existentes en Db2.\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"7\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Copie y pegue el siguiente SQL en la \", React.createElement(_components.strong, null, \"hoja de cálculo SQL\"), \". Haga clic en \", React.createElement(_components.strong, null, \"Ejecutar en presto-01\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  \", React.createElement(_components.span, {\n    className: \"hljs-keyword\"\n  }, \"select\"), \" pll.product_line_en as product, \", React.createElement(_components.span, {\n    className: \"hljs-built_in\"\n  }, \"sum\"), \"(sf.quantity) as total\\n  from\\n    db2catalog.GOSALESDW.SLS_PRODUCT_DIM as pd,\\n    db2catalog.GOSALESDW.SLS_PRODUCT_LINE_LOOKUP as pll,\\n    hive_data.gosalesdw.sls_sales_fact as sf\\n  \", React.createElement(_components.span, {\n    className: \"hljs-built_in\"\n  }, \"where\"), \"\\n    pd.product_key = sf.product_key\\n    and pll.product_line_code = pd.product_line_code\\n  group by pll.product_line_en\\n  order by product;\\n\")), \"\\n\", React.createElement(_components.p, null, \"Esta consulta empresarial calcula las ventas totales para cada una de las líneas de productos de alto nivel. La salida debe ser similar a la imagen de abajo.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/107/query-result.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"3\",\n    \"aria-labelledby\": \"enhorabuena-has-llegado-al-final-del-laboratorio-107\"\n  }, React.createElement(_components.h3, {\n    id: \"enhorabuena-has-llegado-al-final-del-laboratorio-107\"\n  }, React.createElement(_components.a, {\n    href: \"#enhorabuena-has-llegado-al-final-del-laboratorio-107\"\n  }, \"Enhorabuena, has llegado al final del laboratorio 107.\")), \"\\n\", React.createElement(_components.p, null, \"Haga clic en, \", React.createElement(_components.a, {\n    href: \"/watsonx/watsonxdata/108\"\n  }, \"laboratorio 108\"), \" para iniciar el siguiente laboratorio.\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/VAD-VAR-Workshop/VAD-VAR-Workshop/content/Watsonx/WatsonxData/107.es.md\";\nimport React, {useRef, useState} from 'react';\nimport cx from 'classnames';\nimport SEO from '@components/SEO';\nimport PageHeader from '@components/PageHeader';\nimport MDXWrapper from '@components/MDXWrapper';\nimport ContentWrapper from '@components/ContentWrapper';\nimport TableOfContents from '@components/TableOfContents';\nimport * as styles from '@styles/pages/{mdx.fields__slug}.module.scss';\nconst Content = props => {\n  const {data: {mdx: {tableOfContents: {items: tocItems}, frontmatter: {toc = true, title, timeToComplete, updated}}}, children} = props;\n  const articleRef = useRef(null);\n  const {0: currSection} = useState('');\n  const showToc = (toc === null ? true : toc) && tocItems;\n  return React.createElement(React.Fragment, null, React.createElement(PageHeader, {\n    timeToComplete,\n    updated\n  }, tocItems[0].title || title || ''), React.createElement(ContentWrapper, {\n    className: styles.wrapper\n  }, React.createElement(\"article\", {\n    className: cx(styles.article, !showToc && styles.noToc),\n    ref: articleRef\n  }, React.createElement(MDXWrapper, {\n    components: {\n      h1: () => null\n    }\n  }, children)), showToc && React.createElement(TableOfContents, {\n    itemsList: tocItems,\n    maxDepth: 2,\n    currSection: currSection\n  })));\n};\nconst pageQuery = \"3587680389\";\nexport const Head = props => {\n  const {location: {pathname}, data: {mdx: {frontmatter: {title}, tableOfContents: {items}}}} = props;\n  return React.createElement(SEO, {\n    pathname,\n    title: title || items[0].title || undefined\n  });\n};\nContent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Content, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","section","h2","a","p","strong","ol","li","img","ul","pre","code","span","h3","_provideComponents","components","React","className","id","href","src","alt","start","wrapper","MDXLayout","Content","data","mdx","tableOfContents","items","tocItems","frontmatter","toc","title","timeToComplete","updated","children","articleRef","useRef","currSection","useState","showToc","PageHeader","ContentWrapper","styles","cx","ref","MDXWrapper","h1","TableOfContents","itemsList","maxDepth","Head","location","pathname","SEO","undefined","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}