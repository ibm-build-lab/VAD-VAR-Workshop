{"version":3,"file":"component---src-pages-mdx-fields-slug-tsx-content-file-path-content-cp-4-i-102-es-md-c5c6b92cf6b147ee45dd.js","mappings":"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","sources":["webpack://vad-var-site/./content/CP4I/102.es.md","webpack://vad-var-site/./src/pages/{mdx.fields__slug}.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    section: \"section\",\n    h1: \"h1\",\n    p: \"p\",\n    img: \"img\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\",\n    a: \"a\",\n    blockquote: \"blockquote\",\n    h2: \"h2\",\n    em: \"em\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"1\",\n    \"aria-labelledby\": \"102-uso-de-ibm-mq-e-ibm-event-streams-para-la-replicación-de-datos-casi-en-tiempo-real\"\n  }, React.createElement(_components.h1, {\n    id: \"102-uso-de-ibm-mq-e-ibm-event-streams-para-la-replicación-de-datos-casi-en-tiempo-real\"\n  }, \"102: Uso de IBM MQ e IBM Event Streams para la replicación de datos casi en tiempo real\"), \"\\n\", React.createElement(_components.p, null, \"En este laboratorio utilizará IBM MQ e IBM Event Streams para replicar datos de una base de datos transaccional a una base de datos de informes. El patrón utilizado permite un escalado horizontal continuo para minimizar la latencia entre el momento en que la transacción se consigna en la base de datos transaccional y el momento en que está disponible para su consulta en la base de datos de informes.\"), \"\\n\", React.createElement(_components.p, null, \"A continuación se muestra la arquitectura de la solución que construirá:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//CP4I/images/architecture2.png\",\n    alt: \"Architecture diagram\"\n  }), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"El microservicio \", React.createElement(_components.strong, null, \"de cartera\"), \" se sitúa en el centro de la aplicación. Este microservicio:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"envía las transacciones completadas a una cola IBM MQ.\"), \"\\n\", React.createElement(_components.li, null, \"llama al servicio \", React.createElement(_components.strong, null, \"trade-history\"), \" para obtener datos comerciales históricos agregados.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"El origen \", React.createElement(_components.strong, null, \"Kafka Connect\"), \" utiliza el marco Kafka Connect y un origen IBM MQ para consumir los datos de transacción de IBM MQ y enviarlos a un tema en IBM Event Streams. Al escalar este servicio horizontalmente, puede reducir la latencia entre el momento en que la transacción se consigna en la base de datos transaccional y el momento en que está disponible para su consulta en la base de datos de informes,\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"El sumidero \", React.createElement(_components.strong, null, \"Kafka Connect\"), \" utiliza el marco Kafka Connect y un sumidero Mongodb para recibir los datos de transacción de IBM Event Streams y publicarlos en la base de datos de informes. Al escalar este servicio horizontalmente, puede reducir la latencia entre el momento en que la transacción se consigna en la base de datos transaccional y el momento en que está disponible para su consulta en la base de datos de informes.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Este laboratorio se divide en los siguientes pasos:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#102-uso-de-ibm-mq-e-ibm-event-streams-para-la-replicaci%C3%B3n-de-datos-casi-en-tiempo-real\"\n  }, \"102: Uso de IBM MQ e IBM Event Streams para la replicación de datos casi en tiempo real\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#paso-1-desinstalar-la-aplicaci%C3%B3n-traderlite\"\n  }, \"Paso 1: Desinstalar la aplicación TraderLite\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#paso-2-crear-un-tema-en-la-consola-de-gesti%C3%B3n-de-flujos-de-eventos\"\n  }, \"Paso 2: Crear un tema en la consola de gestión de flujos de eventos\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#paso-3-a%C3%B1adir-componentes-de-mensajer%C3%ADa-a-la-aplicaci%C3%B3n-trader-lite\"\n  }, \"Paso 3: Añadir componentes de mensajería a la aplicación Trader Lite\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#paso-4-generar-algunos-datos-de-prueba-con-la-aplicaci%C3%B3n-traderlite\"\n  }, \"Paso 4: Generar algunos datos de prueba con la aplicación TraderLite\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#paso-5-ver-mensajes-en-ibm-mq\"\n  }, \"Paso 5: Ver mensajes en IBM MQ\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#paso-6-iniciar-la-replicaci%C3%B3n-de-kafka\"\n  }, \"Paso 6: Iniciar la replicación de Kafka\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#paso-7-verificar-que-los-datos-de-las-transacciones-se-han-replicado-en-la-base-de-datos-del-historial-comercial\"\n  }, \"Paso 7: Verificar que los datos de las transacciones se han replicado en la base de datos del Historial Comercial\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#paso-8-examinar-los-mensajes-enviados-a-su-tema-event-streams\"\n  }, \"Paso 8: Examinar los mensajes enviados a su tema Event Streams\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#resumen\"\n  }, \"Resumen\")), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Nota:\"), \" Puede hacer clic en cualquier imagen de las siguientes instrucciones para ampliarla y ver más detalles. Cuando lo hagas, haz clic en el botón Atrás de tu navegador para volver al estado anterior.\"), \"\\n\"), \"\\n\", React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"paso-1-desinstalar-la-aplicación-traderlite\"\n  }, React.createElement(_components.h2, {\n    id: \"paso-1-desinstalar-la-aplicación-traderlite\"\n  }, React.createElement(_components.a, {\n    href: \"#paso-1-desinstalar-la-aplicación-traderlite\"\n  }, \"Paso 1: Desinstalar la aplicación TraderLite\")), \"\\n\", React.createElement(_components.p, null, \"Si ha completado los laboratorios de integración de API Connect y/o Salesforce, entonces ya tendrá la aplicación en ejecución. Para este laboratorio es más fácil instalar la aplicación desde cero para que pueda utilizar el entorno OpenShift GUI (en lugar de editar el archivo YAML de una instancia existente) para seleccionar todas las opciones necesarias para esta aplicación. Si la aplicación \", React.createElement(_components.em, null, \"NO\"), \" está instalada, vaya al \", React.createElement(_components.strong, null, \"paso 2\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"1.1 Vaya a la consola OpenShift de su clúster de taller. Seleccione su proyecto \", React.createElement(_components.em, null, React.createElement(_components.strong, null, \"studentn\")), \". En la navegación de la izquierda, seleccione \", React.createElement(_components.strong, null, \"Operadores instalados\"), \" en la sección \", React.createElement(_components.strong, null, \"Operadores\"), \" y seleccione el \", React.createElement(_components.strong, null, \"operador TraderLite\"), \".\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//CP4I/images/traderlite-operator.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"1.2 Haga clic en la pestaña de \", React.createElement(_components.strong, null, \"la aplicación TraderLite\")), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//CP4I/images/traderlite-crd.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"1.3 Seleccione sólo el espacio de nombres actual. Haga clic en los 3 puntos a la derecha del CRD TraderLite existente y seleccione Eliminar TraderLite en el menú contextual.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//CP4I/images/select-traderlite-crd2.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"1.4 En el área de navegación de la izquierda, seleccione \", React.createElement(_components.strong, null, \"Pods\"), \" en la sección \", React.createElement(_components.strong, null, \"Workloads\"), \". Debería ver que los pods \", React.createElement(_components.em, null, \"traderlite-xxxxx-yyyyy\"), \" están terminados.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"Nota: Puede introducir \", React.createElement(_components.code, null, \"traderlite\"), \" en el campo de búsqueda por nombre para filtrar los pods.\")), \"\\n\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"paso-2-crear-un-tema-en-la-consola-de-gestión-de-flujos-de-eventos\"\n  }, React.createElement(_components.h2, {\n    id: \"paso-2-crear-un-tema-en-la-consola-de-gestión-de-flujos-de-eventos\"\n  }, React.createElement(_components.a, {\n    href: \"#paso-2-crear-un-tema-en-la-consola-de-gestión-de-flujos-de-eventos\"\n  }, \"Paso 2: Crear un tema en la consola de gestión de flujos de eventos\")), \"\\n\", React.createElement(_components.p, null, \"2.1 Vaya a la pestaña del navegador CP4I Platform Navigator o abra una nueva utilizando la URL y las credenciales proporcionadas.\"), \"\\n\", React.createElement(_components.p, null, \"2.2 Haga clic en el enlace a la instancia de flujos de eventos\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//CP4I/images/nav-to-es.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"2.3 Si se le pide que inicie sesión, seleccione el registro de usuarios \", React.createElement(_components.strong, null, \"Enterprise LDAP\"), \" e inicie sesión con sus credenciales.\"), \"\\n\", React.createElement(_components.p, null, \"2.4 Haga clic en la ficha \", React.createElement(_components.strong, null, \"Crear un tema\")), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//CP4I/images/create-topic.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"2.5 Utiliza tu nombre de usuario para el nombre del tema. Por ejemplo, si tu nombre de usuario es \", React.createElement(_components.code, null, \"student5\"), \", entonces llama al tema \", React.createElement(_components.code, null, \"student5\"), \". Haz clic en \", React.createElement(_components.strong, null, \"Siguiente\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"2.6 Deje el valor predeterminado para la particiones de mensajes y haga clic en \", React.createElement(_components.strong, null, \"Siguiente\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"2.7 Deje el valor predeterminado para la retención de mensajes y haga clic en \", React.createElement(_components.strong, null, \"Siguiente\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"2.8 Deje el valor predeterminado para las réplicas y haga clic en \", React.createElement(_components.strong, null, \"Crear tema\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"2.9 Debería ver su nuevo tema en la lista.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//CP4I/images/new-topic.png\",\n    alt: \"\"\n  }), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"paso-3-añadir-componentes-de-mensajería-a-la-aplicación-trader-lite\"\n  }, React.createElement(_components.h2, {\n    id: \"paso-3-añadir-componentes-de-mensajería-a-la-aplicación-trader-lite\"\n  }, React.createElement(_components.a, {\n    href: \"#paso-3-añadir-componentes-de-mensajería-a-la-aplicación-trader-lite\"\n  }, \"Paso 3: Añadir componentes de mensajería a la aplicación Trader Lite\")), \"\\n\", React.createElement(_components.p, null, \"En esta sección se instalará la aplicación TraderLite para empezar a almacenar transacciones como mensajes MQ, sin configurar la parte KafkaConnect que moverá las transacciones fuera de MQ, a Event Streams y luego a MongoDB. Esto demuestra cómo MQ puede servir como un almacenamiento fiable y un buffer de reenvío, especialmente durante una interrupción temporal de la red.\"), \"\\n\", React.createElement(_components.p, null, \"3.1 Vaya a la consola OpenShift de su clúster de taller. Seleccione su proyecto \", React.createElement(_components.em, null, React.createElement(_components.strong, null, \"studentn\")), \".\"), \"\\n\", React.createElement(_components.p, null, \"3.2 Haga clic en \", React.createElement(_components.strong, null, \"Operadores instalados\"), \" (en la sección \", React.createElement(_components.strong, null, \"Operadores\"), \" ) en el menú de navegación de la izquierda y, a continuación, haga clic en el \", React.createElement(_components.strong, null, \"Operador TraderLite\"), \" de la lista.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//CP4I/images/select-traderlite-operator.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"3.3 Haga clic en \", React.createElement(_components.strong, null, \"Crear Instancia\"), \" para iniciar la instalación de la aplicación TraderLite.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//CP4I/images/traderlite-create-instance.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"3.4 De un nombre a la instancia \", React.createElement(_components.em, null, \"traderlite\")), \"\\n\", React.createElement(_components.p, null, \"3.5 Ajuste los siguientes valores:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"En \", React.createElement(_components.strong, null, \"Kafka Access\"), \" seleccione el tema \", React.createElement(_components.strong, null, \"del estudiante\")), \"\\n\", React.createElement(_components.li, null, \"Activar \", React.createElement(_components.strong, null, \"KafkaIntegration\")), \"\\n\", React.createElement(_components.li, null, \"En \", React.createElement(_components.strong, null, \"Mqaccess\"), \" selecciona la cola \", React.createElement(_components.strong, null, \"STUDENTN.QUEUE\"), \" que corresponda a tu nombre de usuario.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//CP4I/images/traderlite-create-values2.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"3.6 Desplácese hacia abajo y haga clic en \", React.createElement(_components.strong, null, \"Crear\")), \"\\n\", React.createElement(_components.p, null, \"3.7 En la barra de navegación de la izquierda, seleccione \", React.createElement(_components.strong, null, \"Pods\"), \" (en la sección \", React.createElement(_components.strong, null, \"Workloads\"), \" ) y espere a que todos los pods TraderLite tengan el estado \", React.createElement(_components.strong, null, \"Running\"), \" y estén en estado \", React.createElement(_components.strong, null, \"Ready\"), \". mkdocs\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"Nota: Sabrá que los pods traderlite-xxxxx están listos cuando la columna \", React.createElement(_components.code, null, \"Ready\"), \" muestre \", React.createElement(_components.code, null, \"1/1\"), \".\")), \"\\n\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"paso-4-generar-algunos-datos-de-prueba-con-la-aplicación-traderlite\"\n  }, React.createElement(_components.h2, {\n    id: \"paso-4-generar-algunos-datos-de-prueba-con-la-aplicación-traderlite\"\n  }, React.createElement(_components.a, {\n    href: \"#paso-4-generar-algunos-datos-de-prueba-con-la-aplicación-traderlite\"\n  }, \"Paso 4: Generar algunos datos de prueba con la aplicación TraderLite\")), \"\\n\", React.createElement(_components.p, null, \"4.1 En la consola de OpenShift, haga clic en \", React.createElement(_components.strong, null, \"Rutas\"), \" en el menú de navegación de la izquierda, en la sección \", React.createElement(_components.strong, null, \"Redes\"), \" y, a continuación, haga clic en el icono situado junto a la URL de la aplicación \", React.createElement(_components.strong, null, \"Tradr\"), \" (la interfaz de usuario de TraderLite).\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//CP4I/images/traderlite-run-tradr.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"4.2 Inicie sesión con el nombre de usuario \", React.createElement(_components.code, null, \"stock\"), \" y la contraseña \", React.createElement(_components.code, null, \"trader\")), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//CP4I/images/stock-trader-login.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"4.3 Haga clic en \", React.createElement(_components.strong, null, \"Añadir cliente\"), \" y rellene el formulario. Debe utilizar formatos válidos de correo electrónico y número de teléfono para evitar errores de validación.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//CP4I/images/new-client.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"4.4 Haga clic en \", React.createElement(_components.strong, null, \"Guardar\")), \"\\n\", React.createElement(_components.p, null, \"4.5 Haga clic en el \", React.createElement(_components.strong, null, \"ID de\"), \" la cartera del nuevo cliente para ver los detalles de la cartera\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//CP4I/images/new-portfolio.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"4.6 Compre algunas acciones de 2 ó 3 empresas diferentes y luego venda una parte de una de las acciones que acaba de comprar. Para comprar acciones, haga clic en el botón \", React.createElement(_components.code, null, \"Buy Stock\"), \" acciones, luego seleccione una empresa e introduzca la cantidad de acciones. Para vender acciones, pulse el botón \", React.createElement(_components.code, null, \"Sell stock\"), \", después seleccione el símbolo de la empresa e introduzca el número de acciones que desea vender.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//CP4I/images/a-few-trades.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Nota:\"), \" Su ROI será incorrecto porque todavía no estamos replicando los datos históricos de operaciones que entran en el cálculo del ROI.\"), \"\\n\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"paso-5-ver-mensajes-en-ibm-mq\"\n  }, React.createElement(_components.h2, {\n    id: \"paso-5-ver-mensajes-en-ibm-mq\"\n  }, React.createElement(_components.a, {\n    href: \"#paso-5-ver-mensajes-en-ibm-mq\"\n  }, \"Paso 5: Ver mensajes en IBM MQ\")), \"\\n\", React.createElement(_components.p, null, \"5.1 Vaya a la pestaña del navegador CP4I Platform Navigator o abra una nueva pestaña con la URL y las credenciales proporcionadas.\"), \"\\n\", React.createElement(_components.p, null, \"5.2 Haga clic en el enlace a la instancia MQ.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//CP4I/images/nav-to-mq.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"5.3 Si se le pide que inicie sesión, seleccione el registro de usuarios \", React.createElement(_components.strong, null, \"Enterprise LDAP\"), \" e inicie sesión con sus credenciales.\"), \"\\n\", React.createElement(_components.p, null, \"5.4 Haga clic en el mosaico \", React.createElement(_components.strong, null, \"Gestionar QMTRADER\")), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//CP4I/images/manager-qmtrader-tile.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"5.5 Haga clic en la cola \", React.createElement(_components.strong, null, \"STUDENTN.QUEUE\"), \" que corresponda a su nombre de usuario.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//CP4I/images/trader-queue.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"5.5 Debería ver mensajes para las operaciones que acaba de ejecutar. El número de mensajes en la cola variará en función del número de operaciones de compra/venta que haya realizado en los pasos anteriores.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//CP4I/images/mq-messages.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"5.6 Mantén abierta la pestaña del navegador con la interfaz web de MQ, ya que la necesitarás más adelante en el laboratorio.\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"paso-6-iniciar-la-replicación-de-kafka\"\n  }, React.createElement(_components.h2, {\n    id: \"paso-6-iniciar-la-replicación-de-kafka\"\n  }, React.createElement(_components.a, {\n    href: \"#paso-6-iniciar-la-replicación-de-kafka\"\n  }, \"Paso 6: Iniciar la replicación de Kafka\")), \"\\n\", React.createElement(_components.p, null, \"En esta sección se configurará la aplicación TraderLite para empezar a mover los datos de las transacciones fuera de MQ, a Kafka y luego a la base de datos de informes MongoDB.\"), \"\\n\", React.createElement(_components.p, null, \"6.1 Vaya a la consola OpenShift de su clúster asignado. En la navegación de la izquierda, seleccione \", React.createElement(_components.strong, null, \"Operadores instalados\"), \" y seleccione el \", React.createElement(_components.strong, null, \"operador TraderLite\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"6.2 Haga clic en la pestaña de \", React.createElement(_components.strong, null, \"la aplicación TraderLite\")), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//CP4I/images/traderlite-crd.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"6.3 Haga clic en los 3 periodos a la derecha del CRD TraderLite existente y seleccione \", React.createElement(_components.strong, null, \"Editar TraderLite\"), \" en el menú contextual.\"), \"\\n\", React.createElement(_components.p, null, \"6.4 Desplácese hasta la línea 151 y establezca \", React.createElement(_components.strong, null, \"Kafka Connect enabled\"), \" en \", React.createElement(_components.strong, null, \"true (\"), \" deje el resto de valores sin modificar).\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//CP4I/images/kafka-connect-enabled.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"6.5 Haga clic en \", React.createElement(_components.strong, null, \"Guardar\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"6.6 En la navegación de la izquierda seleccione \", React.createElement(_components.strong, null, \"Operadores Instalados\"), \" y seleccione el operador \", React.createElement(_components.strong, null, \"Flujos de Eventos\"), \".\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//CP4I/images/es-operator.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"6.7 Haga clic en la pestaña \", React.createElement(_components.strong, null, \"Todas las instancias\"), \" y elija \", React.createElement(_components.strong, null, \"Sólo espacio de nombres actual\"), \" y espere a que los conectores \", React.createElement(_components.em, null, \"mq-source\"), \" y \", React.createElement(_components.em, null, \"mongodb-sink\"), \" estén en estado \", React.createElement(_components.em, null, \"Listo\"), \" antes de continuar.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//CP4I/images/kc-status.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"6.8 Vuelve a la pestaña del navegador con la consola MQ y comprueba que todos los mensajes han sido consumidos por el conector \", React.createElement(_components.em, null, \"mq-source\"), \". \", React.createElement(_components.em, null, \"(Nota: Es posible que tengas que volver a cargar esta pestaña del navegador para ver que se han consumido los mensajes).\")), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//CP4I/images/mq-empty.png\",\n    alt: \"\"\n  }), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"paso-7-verificar-que-los-datos-de-las-transacciones-se-han-replicado-en-la-base-de-datos-del-historial-comercial\"\n  }, React.createElement(_components.h2, {\n    id: \"paso-7-verificar-que-los-datos-de-las-transacciones-se-han-replicado-en-la-base-de-datos-del-historial-comercial\"\n  }, React.createElement(_components.a, {\n    href: \"#paso-7-verificar-que-los-datos-de-las-transacciones-se-han-replicado-en-la-base-de-datos-del-historial-comercial\"\n  }, \"Paso 7: Verificar que los datos de las transacciones se han replicado en la base de datos del Historial Comercial\")), \"\\n\", React.createElement(_components.p, null, \"7.1 Vaya a la consola OpenShift del clúster de su taller. En la navegación de la izquierda, seleccione \", React.createElement(_components.strong, null, \"Rutas\"), \" en la sección \", React.createElement(_components.strong, null, \"Redes\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"7.2 Copie el enlace del microservicio \", React.createElement(_components.em, null, \"de historial comercial\"), \" y péguelo en una nueva pestaña del navegador.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Nota:\"), \" Recibirá un mensaje 404 (No encontrado) si intenta acceder a esta URL tal cual. Esto se debe a que el microservicio \", React.createElement(_components.em, null, \"de historial\"), \" comercial requiere información adicional sobre la ruta.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//CP4I/images/trade-history.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"7.3 Añada la cadena \", React.createElement(_components.code, null, \"/trades/1000\"), \" a la dirección que ha pegado: debería obtener un JSON con las transacciones de prueba que ha ejecutado anteriormente.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//CP4I/images/trade-history2.png\",\n    alt: \"\"\n  }), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"paso-8-examinar-los-mensajes-enviados-a-su-tema-event-streams\"\n  }, React.createElement(_components.h2, {\n    id: \"paso-8-examinar-los-mensajes-enviados-a-su-tema-event-streams\"\n  }, React.createElement(_components.a, {\n    href: \"#paso-8-examinar-los-mensajes-enviados-a-su-tema-event-streams\"\n  }, \"Paso 8: Examinar los mensajes enviados a su tema Event Streams\")), \"\\n\", React.createElement(_components.p, null, \"8.1 Vaya a la pestaña del navegador CP4I Platform Navigator o abra una nueva con la URL y las credenciales proporcionadas.\"), \"\\n\", React.createElement(_components.p, null, \"8.2 Haga clic en el enlace a la instancia de flujos de eventos\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//CP4I/images/nav-to-es.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"8.3 Si se le pide que inicie sesión, seleccione el registro de usuarios \", React.createElement(_components.strong, null, \"Enterprise LDAP\"), \" e inicie sesión con sus credenciales.\"), \"\\n\", React.createElement(_components.p, null, \"8.4 Haga clic en el icono de temas situado a la izquierda.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//CP4I/images/topics-icon.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"8.5 Haga clic en el tema correspondiente a su nombre de usuario.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//CP4I/images/topic-name.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"8.6 Seleccione un mensaje para ver sus detalles\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//CP4I/images/message-details.png\",\n    alt: \"\"\n  }), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"resumen\"\n  }, React.createElement(_components.h2, {\n    id: \"resumen\"\n  }, React.createElement(_components.a, {\n    href: \"#resumen\"\n  }, \"Resumen\")), \"\\n\", React.createElement(_components.p, null, \"Enhorabuena. Ha completado con éxito los siguientes pasos clave en este laboratorio:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Configuración de la aplicación Trader Lite para utilizar MQ\"), \"\\n\", React.createElement(_components.li, null, \"Despliegue de Kafka Connect con IBM Event Streams\"), \"\\n\", React.createElement(_components.li, null, \"Generación de transacciones en la aplicación Trader Lite y verificación de la replicación de los datos a través de MQ y Event Streams.\"), \"\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/VAD-VAR-Workshop/VAD-VAR-Workshop/content/CP4I/102.es.md\";\nimport React, {useRef, useState} from 'react';\nimport cx from 'classnames';\nimport SEO from '@components/SEO';\nimport PageHeader from '@components/PageHeader';\nimport MDXWrapper from '@components/MDXWrapper';\nimport ContentWrapper from '@components/ContentWrapper';\nimport TableOfContents from '@components/TableOfContents';\nimport * as styles from '@styles/pages/{mdx.fields__slug}.module.scss';\nconst Content = props => {\n  const {data: {mdx: {tableOfContents: {items: tocItems}, frontmatter: {toc = true, title, timeToComplete, updated}}}, children} = props;\n  const articleRef = useRef(null);\n  const {0: currSection} = useState('');\n  const showToc = (toc === null ? true : toc) && tocItems;\n  return React.createElement(React.Fragment, null, React.createElement(PageHeader, {\n    timeToComplete,\n    updated\n  }, tocItems[0].title || title || ''), React.createElement(ContentWrapper, {\n    className: styles.wrapper\n  }, React.createElement(\"article\", {\n    className: cx(styles.article, !showToc && styles.noToc),\n    ref: articleRef\n  }, React.createElement(MDXWrapper, {\n    components: {\n      h1: () => null\n    }\n  }, children)), showToc && React.createElement(TableOfContents, {\n    itemsList: tocItems,\n    maxDepth: 2,\n    currSection: currSection\n  })));\n};\nconst pageQuery = \"3587680389\";\nexport const Head = props => {\n  const {location: {pathname}, data: {mdx: {frontmatter: {title}, tableOfContents: {items}}}} = props;\n  return React.createElement(SEO, {\n    pathname,\n    title: title || items[0].title || undefined\n  });\n};\nContent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Content, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","section","h1","p","img","ul","li","strong","a","blockquote","h2","em","code","_provideComponents","components","React","className","id","src","alt","href","wrapper","MDXLayout","Content","data","mdx","tableOfContents","items","tocItems","frontmatter","toc","title","timeToComplete","updated","children","articleRef","useRef","currSection","useState","showToc","PageHeader","ContentWrapper","styles","cx","ref","MDXWrapper","TableOfContents","itemsList","maxDepth","Head","location","pathname","SEO","undefined","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}