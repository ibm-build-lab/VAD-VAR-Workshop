"use strict";(self.webpackChunkvad_var_site=self.webpackChunkvad_var_site||[]).push([[5490],{66371:function(e,t,n){n.r(t),n.d(t,{Head:function(){return b},default:function(){return p}});var a=n(11151),l=n(67294);function r(e){const t=Object.assign({section:"section",h1:"h1",h2:"h2",a:"a",p:"p",h3:"h3",strong:"strong",ol:"ol",li:"li",img:"img",code:"code",blockquote:"blockquote",ul:"ul",pre:"pre",span:"span"},(0,a.ah)(),e.components),{QuizAlert:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("QuizAlert",!0),l.createElement(l.Fragment,null,l.createElement(n,{text:"Heads Up! Quiz material will be flagged like this!"}),"\n",l.createElement(t.section,{className:"heading","data-heading-rank":"1","aria-labelledby":"203-netezza-data-warehouse-modernization"},l.createElement(t.h1,{id:"203-netezza-data-warehouse-modernization"},"203: Netezza data warehouse modernization"),"\n",l.createElement(t.section,{className:"heading","data-heading-rank":"2","aria-labelledby":"goal"},l.createElement(t.h2,{id:"goal"},l.createElement(t.a,{href:"#goal"},"Goal")),"\n",l.createElement(t.p,null,"The goal of this lab is to showcase how IBM watsonx.data can be used for data warehouse modernization for a Netezza Performance Server as a Service (NPSaaS) instance running on Microsoft Azure to move a workload to watsonx.data."),"\n"),l.createElement(t.section,{className:"heading","data-heading-rank":"2","aria-labelledby":"prerequisites"},l.createElement(t.h2,{id:"prerequisites"},l.createElement(t.a,{href:"#prerequisites"},"Prerequisites")),"\n",l.createElement(t.section,{className:"heading","data-heading-rank":"3","aria-labelledby":"watsonxdata-environment"},l.createElement(t.h3,{id:"watsonxdata-environment"},l.createElement(t.a,{href:"#watsonxdata-environment"},"watsonx.data Environment")),"\n",l.createElement(t.p,null,"This lab requires that you already have a provisioned IBM watsonx.data environment. This is done in ",l.createElement(t.strong,null,l.createElement(t.a,{href:"/watsonx/watsonxdata/1"},"Module 1: Environment Setup"))),"\n")),l.createElement(t.section,{className:"heading","data-heading-rank":"2","aria-labelledby":"setting-up-a-data-warehouse-connector-for-presto"},l.createElement(t.h2,{id:"setting-up-a-data-warehouse-connector-for-presto"},l.createElement(t.a,{href:"#setting-up-a-data-warehouse-connector-for-presto"},"Setting up a Data Warehouse Connector for Presto")),"\n",l.createElement(t.ol,null,"\n",l.createElement(t.li,null,"Open the console (user interface) for your ",l.createElement(t.strong,null,"watsonx.data environment")," in a new browser window."),"\n"),"\n",l.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/203/watsonx-ui.png",alt:""}),"\n",l.createElement(t.ol,{start:"2"},"\n",l.createElement(t.li,null,"In the watsonx.data UI, select the ",l.createElement(t.strong,null,"Data manager")," icon on the left-side menu."),"\n"),"\n",l.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/203/data-manager-icon.png",alt:""}),"\n",l.createElement(t.ol,{start:"3"},"\n",l.createElement(t.li,null,"Click the ",l.createElement(t.strong,null,"Create")," dropdown menu and select ",l.createElement(t.strong,null,"Create schema"),"."),"\n"),"\n",l.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/203/create-schema.png",alt:""}),"\n",l.createElement(t.ol,{start:"4"},"\n",l.createElement(t.li,null,"\n",l.createElement(t.p,null,"In the ",l.createElement(t.strong,null,"Create schema")," pop-up window, select ",l.createElement(t.strong,null,"iceberg_data")," for the ",l.createElement(t.strong,null,"Catalog")," and enter ",l.createElement(t.code,null,"flight_delay")," for the ",l.createElement(t.strong,null,"Name"),". The ",l.createElement(t.strong,null,"Path")," field is automatically set based on the schema name, but it can be overridden as needed. However, ",l.createElement(t.strong,null,"do not change")," it here. Now click the ",l.createElement(t.strong,null,"Create")," button. The ",l.createElement(t.strong,null,"flight_delay")," schema is now created under the ",l.createElement(t.strong,null,"iceberg_data")," bucket."),"\n"),"\n",l.createElement(t.li,null,"\n",l.createElement(t.p,null,"In the watsonx.data UI, select the ",l.createElement(t.strong,null,"Infrastructure manager")," icon on the left-side menu."),"\n"),"\n"),"\n",l.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/203/infrastructure-manager-icon.png",alt:""}),"\n",l.createElement(t.ol,{start:"6"},"\n",l.createElement(t.li,null,"Click the ",l.createElement(t.strong,null,"Add component")," dropdown on the right side and select ",l.createElement(t.strong,null,"Add database"),"."),"\n"),"\n",l.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/203/im-add-database.png",alt:""}),"\n",l.createElement(t.ol,{start:"7"},"\n",l.createElement(t.li,null,"In the ",l.createElement(t.strong,null,"Add database")," pop-up window, enter/select the following information to add the ",l.createElement(t.strong,null,"Netezza Performance Server as a Service (NPSaaS) database on Microsoft Azure")," and then click ",l.createElement(t.strong,null,"Register"),":"),"\n"),"\n",l.createElement(t.blockquote,null,"\n",l.createElement(t.p,null,l.createElement(t.strong,null,"Note:")," Credentials to the Netezza Performance Server as a Service (NPSaaS) database on Microsoft Azure will be provided to you by your lab host"),"\n"),"\n",l.createElement(t.ul,null,"\n",l.createElement(t.li,null,l.createElement(t.strong,null,"Database type:")," IBM Netezza"),"\n",l.createElement(t.li,null,l.createElement(t.strong,null,"Database name:")," ",l.createElement(t.code,null,"NZ_FLIGHTS")),"\n",l.createElement(t.li,null,l.createElement(t.strong,null,"Display name:")," ",l.createElement(t.code,null,"NZ_FLIGHTS")),"\n",l.createElement(t.li,null,l.createElement(t.strong,null,"Hostname:")," ",l.createElement(t.strong,null,"Get from lab host")),"\n",l.createElement(t.li,null,l.createElement(t.strong,null,"Port:")," ",l.createElement(t.strong,null,"Get from lab host")),"\n",l.createElement(t.li,null,l.createElement(t.strong,null,"Username:")," ",l.createElement(t.strong,null,"Get from lab host")),"\n",l.createElement(t.li,null,l.createElement(t.strong,null,"Password:")," ",l.createElement(t.strong,null,"Get from lab host")),"\n",l.createElement(t.li,null,l.createElement(t.strong,null,"Connection status:")," Click ",l.createElement(t.strong,null,"Test connection"),". If the connection test is successful, ",l.createElement(t.strong,null,"Connection status")," will show ",l.createElement(t.strong,null,"Successful"),". ",l.createElement(t.strong,null,"Note:")," If the test wasn’t successful then you’ll receive an error message as shown below with the reason for the failure. Re-enter all of the fields again and click ",l.createElement(t.strong,null,"Retest")," to test the connection again. The most common reasons for an error here are that you mistyped something incorrectly."),"\n",l.createElement(t.li,null,l.createElement(t.strong,null,"SSL Connection:")," Turn on the ",l.createElement(t.strong,null,"SSL connection")," toggle switch"),"\n",l.createElement(t.li,null,l.createElement(t.strong,null,"Catalog name:")," ",l.createElement(t.code,null,"netezza")),"\n"),"\n",l.createElement(t.p,null,"The Netezza database has been added to watsonx.data, but there is no connection between the Netezza catalog and the Presto (presto-01) engine. The two will need to be linked to use the Presto engine to query the Netezza database."),"\n",l.createElement(n,{text:"There is a quiz question related to adding the connection to Netezza"}),"\n",l.createElement(t.ol,{start:"8"},"\n",l.createElement(t.li,null,"In the ",l.createElement(t.strong,null,"Catalogs")," section, hover your mouse pointer over the ",l.createElement(t.strong,null,"netezza")," tile and the ",l.createElement(t.strong,null,"Manage associations")," icon will appear. Click it."),"\n"),"\n",l.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/203/catalog-manage-associations.png",alt:""}),"\n",l.createElement(t.ol,{start:"9"},"\n",l.createElement(t.li,null,"In the ",l.createElement(t.strong,null,"Manage associations")," pop-up window, select the checkbox for the ",l.createElement(t.strong,null,"presto-01")," engine and then click ",l.createElement(t.strong,null,"Save and restart engine"),". A line should now connect the ",l.createElement(t.strong,null,"presto-01")," tile in the ",l.createElement(t.strong,null,"Engines")," section with the ",l.createElement(t.strong,null,"netezza")," tile in the ",l.createElement(t.strong,null,"Catalogs")," section. This connection indicates that the resources are now associated."),"\n"),"\n",l.createElement(n,{text:"There is a quiz question related to your database being accessible by the Presto query engine"}),"\n",l.createElement(t.ol,{start:"10"},"\n",l.createElement(t.li,null,"\n",l.createElement(t.p,null,"In the watsonx.data UI, select the ",l.createElement(t.strong,null,"Data manager")," icon on the left-side menu."),"\n"),"\n",l.createElement(t.li,null,"\n",l.createElement(t.p,null,"Select the ",l.createElement(t.strong,null,"netezza")," catalog and expand it. The ",l.createElement(t.strong,null,"AIRLINE_DELAY_CAUSE")," table should be displayed under the ",l.createElement(t.strong,null,"ADMIN")," schema indicating that the database connection is operational and working correctly."),"\n"),"\n"),"\n",l.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/203/airline_delay_cause.png",alt:""}),"\n",l.createElement(t.p,null,"Although this section used an IBM Netezza database connector, the process is identical for configuring the Presto connector for any supported data warehouse. Comparable information will be required for any data warehouse being added (hostname of database, database name, username and password that has privileges on the database, the database port number, and whether the connection is Secure Sockets Layer (SSL) or not)."),"\n"),l.createElement(t.section,{className:"heading","data-heading-rank":"2","aria-labelledby":"creating-tables-and-loading-data-within-watsonxdata"},l.createElement(t.h2,{id:"creating-tables-and-loading-data-within-watsonxdata"},l.createElement(t.a,{href:"#creating-tables-and-loading-data-within-watsonxdata"},"Creating tables and loading data within watsonx.data")),"\n",l.createElement(t.ol,null,"\n",l.createElement(t.li,null,"\n",l.createElement(t.p,null,"Within the ",l.createElement(t.strong,null,"Data manager")," window, select the ",l.createElement(t.strong,null,"AIRLINE_DELAY_CAUSE")," table under the ",l.createElement(t.strong,null,"ADMIN")," schema and view the ",l.createElement(t.strong,null,"Table schema")," tab to see the table structure (column names, data types, and whether the column in nullable)."),"\n"),"\n",l.createElement(t.li,null,"\n",l.createElement(t.p,null,"Move to the ",l.createElement(t.strong,null,"Data sample")," tab and examine the contents of the table."),"\n"),"\n"),"\n",l.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/203/data-sample-tab.png",alt:""}),"\n",l.createElement(t.ol,{start:"3"},"\n",l.createElement(t.li,null,"To get an idea of the volume of data within the ",l.createElement(t.strong,null,"AIRLINE_DELAY_CAUSE")," table, in the watsonx.data UI, select the ",l.createElement(t.strong,null,"Query workspace")," icon on the left-side menu."),"\n"),"\n",l.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/203/query-workspace-icon.png",alt:""}),"\n",l.createElement(t.ol,{start:"4"},"\n",l.createElement(t.li,null,"Clear the SQL editor and hover over the ",l.createElement(t.strong,null,"</>")," symbol to the right of the ",l.createElement(t.strong,null,"AIRLINE_DELAY_CAUSE")," table name and choose the ",l.createElement(t.strong,null,"Generate SELECT")," option."),"\n"),"\n",l.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/203/generate-select.png",alt:""}),"\n",l.createElement(n,{text:"There is a quiz question related to generating query templates in the Query Workspace"}),"\n",l.createElement(t.ol,{start:"5"},"\n",l.createElement(t.li,null,"Edit the generated SQL statement to look like the SQL statement below. Then click the ",l.createElement(t.strong,null,"Run on presto-01")," button on the right."),"\n"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"hljs language-sql"},l.createElement(t.span,{className:"hljs-keyword"},"SELECT"),"\n  ",l.createElement(t.span,{className:"hljs-built_in"},"COUNT"),"(",l.createElement(t.span,{className:"hljs-operator"},"*"),")\n",l.createElement(t.span,{className:"hljs-keyword"},"FROM"),'\n  "netezza"."ADMIN"."AIRLINE_DELAY_CAUSE";\n')),"\n",l.createElement(t.p,null,"The Result set in the lower portion of ",l.createElement(t.strong,null,"Query workspace")," window indicates that the Netezza ",l.createElement(t.strong,null,"AIRLINE_DELAY_CAUSE")," table contains ",l.createElement(t.strong,null,"336,028")," rows."),"\n",l.createElement(t.ol,{start:"6"},"\n",l.createElement(t.li,null,"To build the CREATE TABLE AS SELECT (CTAS) statement is a two-step process. Clear the SQL editor and hover over the ",l.createElement(t.strong,null,"</>")," symbol to the right of the ",l.createElement(t.strong,null,"flight_delay")," schema under the ",l.createElement(t.strong,null,"iceberg_data")," entry and choose the ",l.createElement(t.strong,null,"Generate path")," option. Within the SQL sub-window add ",l.createElement(t.code,null,"CREATE TABLE")," before the path string and add ",l.createElement(t.code,null,'."flight_delay_cause" AS')," to the right of the path information. Ensure the cursor is at the end of the statement at conclusion of the edit process (after the AS). Your SQL statement should look like the SQL statement below."),"\n"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"hljs language-sql"},l.createElement(t.span,{className:"hljs-keyword"},"CREATE")," ",l.createElement(t.span,{className:"hljs-keyword"},"TABLE"),' "iceberg_data"."flight_delay"."flight_delay_cause" ',l.createElement(t.span,{className:"hljs-keyword"},"AS")," \n")),"\n",l.createElement(t.ol,{start:"7"},"\n",l.createElement(t.li,null,"Continuing with the second step of the CTAS statement, hover over the Netezza ",l.createElement(t.strong,null,"AIRLINE_DELAY_CAUSE")," table entry and select the ",l.createElement(t.strong,null,"</>")," symbol to the right of the table name and choose the ",l.createElement(t.strong,null,"Generate SELECT")," option. The ",l.createElement(t.strong,null,"SELECT")," statement for the Netezza ",l.createElement(t.strong,null,"AIRLINE_DELAY_CAUSE")," table should appear after the ",l.createElement(t.strong,null,"CREATE TABLE...AS")," portion of the statement. Edit the generated ",l.createElement(t.strong,null,"SELECT")," statement to delete the ",l.createElement(t.strong,null,"LIMIT 10")," portion (do not delete the semicolon ; delimiter). Your SQL statement should look like the SQL statement below. Then click the ",l.createElement(t.strong,null,"Run on presto-01")," button on the right."),"\n"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"hljs language-sql"},l.createElement(t.span,{className:"hljs-keyword"},"CREATE")," ",l.createElement(t.span,{className:"hljs-keyword"},"TABLE"),' "iceberg_data"."flight_delay"."flight_delay_cause" ',l.createElement(t.span,{className:"hljs-keyword"},"AS")," ",l.createElement(t.span,{className:"hljs-keyword"},"SELECT"),"\n  ",l.createElement(t.span,{className:"hljs-operator"},"*"),"\n",l.createElement(t.span,{className:"hljs-keyword"},"FROM"),'\n  "netezza"."ADMIN"."AIRLINE_DELAY_CAUSE"\n;\n')),"\n",l.createElement(n,{text:"There is a quiz question related to the result set of this SELECT statement"}),"\n",l.createElement(t.p,null,"After the statement execution completes successfully, there should be a new ",l.createElement(t.strong,null,"flight_delay_cause")," table under the ",l.createElement(t.strong,null,"flight_delay")," schema within the ",l.createElement(t.strong,null,"iceberg_data")," catalog. The ",l.createElement(t.strong,null,"CREATE TABLE...")," statement will have a green checkmark to the right to show the execution was successful and the rows (count) in the new table are ",l.createElement(t.strong,null,"336,028")," (matches the original Netezza table row count)."),"\n",l.createElement(t.p,null,"After a table is created and data is loaded, it is common practice to perform a quick test to ensure that the table data looks reasonable and there are no obvious issues with the new table. Once the ",l.createElement(t.strong,null,"flight_delay_cause")," table was loaded as an Iceberg table in the data lakehouse, the row count in the new table matched the original Netezza table’s row count. As another test, let’s verify that the ",l.createElement(t.strong,null,"flight_delay_cause")," table contains the expected date range (2003 to 2023) of data. This test will be accomplished using the Data manager and Query workspace portions of the watsonx.data UI."),"\n",l.createElement(n,{text:"There is a quiz question related to viewing a table’s column definitions"}),"\n",l.createElement(t.ol,{start:"8"},"\n",l.createElement(t.li,null,"\n",l.createElement(t.p,null,"In the watsonx.data UI, select the ",l.createElement(t.strong,null,"Data manager")," icon on the left-side menu."),"\n"),"\n",l.createElement(t.li,null,"\n",l.createElement(t.p,null,"Select the ",l.createElement(t.strong,null,"flight_delay_cause")," table under the ",l.createElement(t.strong,null,"iceberg_data")," catalog and look at the columns defined for the table. Since we want to verify the correct months and years of data have been loaded, the column names needed are ",l.createElement(t.strong,null,"MONTH")," and ",l.createElement(t.strong,null,"YEAR"),"."),"\n"),"\n"),"\n",l.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/203/month-year.png",alt:""}),"\n",l.createElement(t.ol,{start:"10"},"\n",l.createElement(t.li,null,"\n",l.createElement(t.p,null,"In the watsonx.data UI, select the ",l.createElement(t.strong,null,"Query workspace")," icon on the left-side menu."),"\n"),"\n",l.createElement(t.li,null,"\n",l.createElement(t.p,null,"Clear the SQL editor and hover over the ",l.createElement(t.strong,null,"</>")," symbol to the right of the ",l.createElement(t.strong,null,"flight_delay_cause")," table under the ",l.createElement(t.strong,null,"iceberg_data")," entry and choose the ",l.createElement(t.strong,null,"Generate SELECT")," option."),"\n"),"\n",l.createElement(t.li,null,"\n",l.createElement(t.p,null,"Edit the generated SQL statement to look like the SQL statement below. Then click the ",l.createElement(t.strong,null,"Run on presto-01")," button on the right."),"\n"),"\n"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"hljs language-sql"},l.createElement(t.span,{className:"hljs-keyword"},"SELECT"),"\n  ",l.createElement(t.span,{className:"hljs-keyword"},"DISTINCT"),"(",l.createElement(t.span,{className:"hljs-keyword"},"YEAR"),")\n",l.createElement(t.span,{className:"hljs-keyword"},"FROM"),'\n  "iceberg_data"."flight_delay"."flight_delay_cause"\n',l.createElement(t.span,{className:"hljs-keyword"},"ORDER")," ",l.createElement(t.span,{className:"hljs-keyword"},"BY"),"\n  ",l.createElement(t.span,{className:"hljs-number"},"1"),";\n")),"\n",l.createElement(n,{text:"There is a quiz question related to the SQL query table name"}),"\n",l.createElement(t.ol,{start:"13"},"\n",l.createElement(t.li,null,"Scrolling through the Result set at bottom of window (using the ",l.createElement(t.strong,null,">")," key in the lower right) verifies that data for the years ",l.createElement(t.strong,null,"2003")," through ",l.createElement(t.strong,null,"2023")," are contained in the table. Combined with the earlier row count verification, the ",l.createElement(t.strong,null,"flight_delay_cause")," table has been correctly moved to an Iceberg table."),"\n"),"\n",l.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/203/result-set.png",alt:""}),"\n"),l.createElement(t.section,{className:"heading","data-heading-rank":"2","aria-labelledby":"object-privileges"},l.createElement(t.h2,{id:"object-privileges"},l.createElement(t.a,{href:"#object-privileges"},"Object Privileges")),"\n",l.createElement(t.p,null,"After the tables have been created and the data loaded into the data lakehouse, the final step is to ensure that the necessary applications, individuals, or groups/roles have been granted the access required to be able to use the new data within the data lakehouse. This section describes the granting of privileges to the ",l.createElement(t.strong,null,"flight_delay_cause")," table that was created in the earlier portion of this lab."),"\n",l.createElement(t.ol,null,"\n",l.createElement(t.li,null,"In the watsonx.data UI, select the ",l.createElement(t.strong,null,"Access control")," icon on the left-side menu."),"\n"),"\n",l.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/203/access-control.png",alt:""}),"\n",l.createElement(t.ol,{start:"2"},"\n",l.createElement(t.li,null,"Select the ",l.createElement(t.strong,null,"iceberg_data")," row to display the Access control (default) window."),"\n"),"\n",l.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/203/ac-iceberg_data.png",alt:""}),"\n",l.createElement(t.ol,{start:"3"},"\n",l.createElement(t.li,null,"\n",l.createElement(t.p,null,"By default, the ",l.createElement(t.strong,null,"Admin")," role is assigned to the ",l.createElement(t.strong,null,"ibmlhadmin")," username (the login used when starting the watsonx.data UI). Additional access can be added by selecting the ",l.createElement(t.strong,null,"Add access")," button. Selecting Add access will display all usernames known to the watsonx.data lakehouse and allows these usernames to be granted access to the ",l.createElement(t.strong,null,"iceberg_data")," catalog."),"\n"),"\n",l.createElement(t.li,null,"\n",l.createElement(t.p,null,"Select the ",l.createElement(t.strong,null,"Data objects")," tab at the top of this window. This will display the ",l.createElement(t.strong,null,"flight_delay_cause")," table (as that is the only physical object under ",l.createElement(t.strong,null,"iceberg_data"),"). The information provided in the tabs is information that is part of other menus within the watsonx.data UI except for ",l.createElement(t.strong,null,"Time Travel")," tab. ",l.createElement(t.strong,null,"Time Travel")," allows a table to be reverted to earlier versions of the table for recovery from unintended table changes. Since the ",l.createElement(t.strong,null,"flight_delay_cause")," table has no other activity except for the initial data load, ",l.createElement(t.strong,null,"Time Travel")," is not possible. If there were multiple ",l.createElement(t.strong,null,"Time Travel")," entries, then the table could be reverted to earlier versions of the table."),"\n"),"\n"),"\n",l.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/203/data-objects.png",alt:""}),"\n",l.createElement(t.ol,{start:"5"},"\n",l.createElement(t.li,null,"Close the ",l.createElement(t.strong,null,"iceberg_data")," Access control (default) window."),"\n"),"\n",l.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/203/ac-iceberg_data-close.png",alt:""}),"\n",l.createElement(t.ol,{start:"6"},"\n",l.createElement(t.li,null,"On the main ",l.createElement(t.strong,null,"Access control")," window, select the ",l.createElement(t.strong,null,"Policies")," tab at the top. No policies are defined, as this window has no entries shown. Select the ",l.createElement(t.strong,null,"Add policy")," button to understand a watsonx.data policy and what defines a policy."),"\n"),"\n",l.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/203/ac-add-policy.png",alt:""}),"\n",l.createElement(t.ol,{start:"7"},"\n",l.createElement(t.li,null,"\n",l.createElement(t.p,null,"The first panel asks for basic information, such as the ",l.createElement(t.strong,null,"policy name")," and a ",l.createElement(t.strong,null,"description")," (optional). By default, the policy is ",l.createElement(t.strong,null,"Inactive")," upon creation, and this is a good practice to maintain (can activate the policy after it is created and verified as correct). Give the policy the name ",l.createElement(t.code,null,"flightdelaycausepolicy")," and select the ",l.createElement(t.strong,null,"Next")," button to continue."),"\n"),"\n",l.createElement(t.li,null,"\n",l.createElement(t.p,null,"In the next panel select ",l.createElement(t.strong,null,"iceberg_data")," for the catalog, ",l.createElement(t.strong,null,"flight_delay")," for the schema, ",l.createElement(t.strong,null,"flight_delay_cause")," for the table, ",l.createElement(t.strong,null,"all")," for the table columns, and select the ",l.createElement(t.strong,null,"Next")," button to continue."),"\n"),"\n"),"\n",l.createElement(n,{text:"There is a quiz question related to viewing a table’s column definitions"}),"\n",l.createElement(t.ol,{start:"9"},"\n",l.createElement(t.li,null,"The next panel allows rules to be defined by selecting the ",l.createElement(t.strong,null,"Add rule")," button. The panel has no rules shown as none are defined by default. Select the ",l.createElement(t.strong,null,"Add rule")," button. This displays another window to input that allow specific access rules such as actions (create, drop, alter, insert, select, and truncate) and which groups or users to include in the rule. Select ",l.createElement(t.strong,null,"Allow")," for the ",l.createElement(t.strong,null,"Rule type"),", ",l.createElement(t.strong,null,"select")," for the ",l.createElement(t.strong,null,"Actions"),", ",l.createElement(t.strong,null,"Users")," for the ",l.createElement(t.strong,null,"Users/groups"),", ",l.createElement(t.strong,null,"ibmlhadmin")," for the ",l.createElement(t.strong,null,"Select user"),", and select the ",l.createElement(t.strong,null,"Add")," button to add the new rule."),"\n"),"\n",l.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/203/add-rule.png",alt:""}),"\n",l.createElement(t.ol,{start:"10"},"\n",l.createElement(t.li,null,"Since this watsonx.data Developer image has no additional users (only ibmlhadmin) and no groups defined, there is no need to go further with ",l.createElement(t.strong,null,"Access control"),". Select the ",l.createElement(t.strong,null,"Cancel")," button to exit out of the ",l.createElement(t.strong,null,"Create access control policy")," window."),"\n"),"\n",l.createElement(t.img,{src:"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/203/ac-cancel-policy.png",alt:""}),"\n",l.createElement(t.section,{className:"heading","data-heading-rank":"3","aria-labelledby":"congratulations-you-have-reached-the-end-of-lab-203"},l.createElement(t.h3,{id:"congratulations-you-have-reached-the-end-of-lab-203"},l.createElement(t.a,{href:"#congratulations-you-have-reached-the-end-of-lab-203"},"Congratulations, you have reached the end of lab 203.")),"\n",l.createElement(t.p,null,"Click, ",l.createElement(t.a,{href:"/watsonx/watsonxdata"},"IBM watsonx.data")," to go to the IBM watsonx.data home page.")))))}var o=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,a.ah)(),e.components);return t?l.createElement(t,e,l.createElement(r,e)):r(e)};var s=n(94184),c=n.n(s),i=n(24690),m=n(81140),h=n(48623),u=n(88531),d=n(13383),g=n(27315);const E=e=>{const{data:{mdx:{tableOfContents:{items:t},frontmatter:{toc:n=!0,title:a,timeToComplete:r,updated:o}}},children:s}=e,i=(0,l.useRef)(null),{0:E}=(0,l.useState)(""),b=(null===n||n)&&t;return l.createElement(l.Fragment,null,l.createElement(m.Z,{timeToComplete:r,updated:o},t[0].title||a||""),l.createElement(u.Z,{className:g.YS},l.createElement("article",{className:c()(g.Y2,!b&&g.ey),ref:i},l.createElement(h.Z,{components:{h1:()=>null}},s)),b&&l.createElement(d.Z,{itemsList:t,maxDepth:2,currSection:E})))},b=e=>{const{location:{pathname:t},data:{mdx:{frontmatter:{title:n},tableOfContents:{items:a}}}}=e;return l.createElement(i.Z,{pathname:t,title:n||a[0].title||void 0})};function p(e){return l.createElement(E,e,l.createElement(o,e))}}}]);
//# sourceMappingURL=component---src-pages-mdx-fields-slug-tsx-content-file-path-content-watsonx-watsonx-data-level-4-203-md-744abb5d338b4e0f77d7.js.map