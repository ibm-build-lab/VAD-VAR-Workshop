{"version":3,"file":"component---src-pages-mdx-fields-slug-tsx-content-file-path-content-watsonx-orchestrate-101-es-md-dc38d2bc9911d38e740f.js","mappings":"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","sources":["webpack://vad-var-site/./content/Watsonx/Orchestrate/101.es.md","webpack://vad-var-site/./src/pages/{mdx.fields__slug}.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    section: \"section\",\n    h1: \"h1\",\n    p: \"p\",\n    ol: \"ol\",\n    li: \"li\",\n    ul: \"ul\",\n    h2: \"h2\",\n    a: \"a\",\n    strong: \"strong\",\n    img: \"img\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"1\",\n    \"aria-labelledby\": \"101-potenciar-la-productividad-de-las-ventas\"\n  }, React.createElement(_components.h1, {\n    id: \"101-potenciar-la-productividad-de-las-ventas\"\n  }, \"101: Potenciar la productividad de las ventas\"), \"\\n\", React.createElement(_components.p, null, \"Por lo general, los agentes de ventas de seguros pasan su tiempo en muchas tareas mientras cambian constantemente de contexto entre varias aplicaciones para realizar sus trabajos. Una gran parte del tiempo de cualquier vendedor de seguros debe ser empleado en el servicio de los clientes existentes, pero una parte importante de ser un gran agente de ventas es encontrar nuevos negocios y construir un gasoducto.\"), \"\\n\", React.createElement(_components.p, null, \"Antes de watsonx Orchestrate, los agentes de esta oficina de seguros dedicaron unas horas por semana a enviar correos electrónicos de prospección para oportunidades de venta cruzada y venta cruzada, así como la construcción de un gasoducto. Para ello, un vendedor de seguros típico:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Busque en Salesforce clientes que cumplan determinados criterios de venta cruzada.\"), \"\\n\", React.createElement(_components.li, null, \"Determinar los mejores productos de venta cruzada para ofrecer a cada cliente.\"), \"\\n\", React.createElement(_components.li, null, \"Enviar un correo electrónico personalizado a cada cliente.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Desafortunadamente, los agentes de esta oficina se enfrentan a una serie de desafíos que les impiden actuar en su mejor momento:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"La búsqueda efectiva de su sistema de Salesforce para las oportunidades de ventas requiere mucho tiempo y requiere mucha habilidad ... habilidades que no todo el mundo en el equipo posee.\"), \"\\n\", React.createElement(_components.li, null, \"La coincidencia de las circunstancias de los clientes con los productos más óptimos y competitivos requiere mucho tiempo y requiere un conocimiento experto del producto. La información sobre productos, clientes y políticas se difunde en varios sistemas y hojas de cálculo.\"), \"\\n\", React.createElement(_components.li, null, \"Se utilizan varios sistemas y aplicaciones; toma tiempo cambiar entre estos sistemas para encontrar la información necesaria. Los datos se copian y se pegan entre aplicaciones e inevitablemente se cometen errores.\"), \"\\n\", React.createElement(_components.li, null, \"No hay tiempo para crear un correo electrónico personalizado para cada cliente por lo que en su lugar utilizan plantillas, pero saben que los correos electrónicos que se producen de esta manera a menudo son ignorados por sus clientes.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Veamos cómo se puede hacer este trabajo de prospección de manera más efectiva con watsonx Orchestrate.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Utilizaremos una interfaz de chat para extraer datos de SalesForce que aprovecha una búsqueda preconfigurada para encontrar clientes con eventos de vida recientes.\"), \"\\n\", React.createElement(_components.li, null, \"Emparejaremos a estos clientes con los productos más adecuados y competitivos utilizando una automatización que representa el conocimiento empresarial digitalizado de un experto en productos.\"), \"\\n\", React.createElement(_components.li, null, \"En lugar de utilizar una plantilla de correo electrónico, alimentaremos la información del cliente y los detalles de los productos en un modelo de IA generativo. Este modelo elaborará un correo electrónico de prospección que un humano en el bucle puede revisar y editar con cualquier información específica para este cliente.\"), \"\\n\", React.createElement(_components.li, null, \"Por último, automatizaremos la creación y el envío del correo electrónico, pero no tendremos que abrir Outlook y copiar sobre las direcciones de correo electrónico y la información del producto.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Vamos a empezar.\"), \"\\n\", React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"recuperar-una-lista-de-clientes-de-salesforce\"\n  }, React.createElement(_components.h2, {\n    id: \"recuperar-una-lista-de-clientes-de-salesforce\"\n  }, React.createElement(_components.a, {\n    href: \"#recuperar-una-lista-de-clientes-de-salesforce\"\n  }, \"Recuperar una lista de clientes de Salesforce\")), \"\\n\", React.createElement(_components.p, null, \"Una tarea común para un agente de seguros es buscar periódicamente su sistema de Salesforce para clientes con eventos de vida recientes que sean buenos candidatos para recibir ofertas de venta cruzada/venta cruzada. Por ejemplo, el nacimiento de un niño trae el foco a la cobertura de seguro de vida, y así sucesivamente. Tradicionalmente, esta tarea implica la creación de informes personalizados de Salesforce y su descarga para una revisión manual y fuera de línea por un agente de ventas.\"), \"\\n\", React.createElement(_components.p, null, \"¿Cómo se juega esto con una compañía de seguros usando watsonx Orchestrate? El agente invoca la búsqueda de Salesforce utilizando la frase de lenguaje natural simple: \\\"Escriba un correo electrónico de upsell a mis clientes\\\". IBM watsonx Orchestrate utiliza IA para comprender el intento del agente de ventas y realiza la acción correcta, incluso cuando la frase de solicitud es ambigua.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Escriba el mandato de lenguaje natural \", React.createElement(_components.strong, null, \"Escriba un correo electrónico de upsell a mis clientes\"), \" (1) y haga clic en \", React.createElement(_components.strong, null, \"Enviar flecha\"), \" (2) en la ventana de chat.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Orchestrate/images/101/001.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Nota:\"), \" Si se obtiene \", React.createElement(_components.strong, null, \"Ninguna habilidad coincide con su solicitud\"), \" , trate de reformular su pregunta. Asegúrese de que ha seleccionado \", React.createElement(_components.strong, null, \"Competencias de equipo\"), \" de la barra de menús.\"), \"\\n\", React.createElement(_components.p, null, \"IBM watsonx Orchestrate ejecuta la tarea de Salesforce conectándose a una API de fondo que recupera una lista de clientes con sucesos de vida recientes. Los datos de cliente recuperados se muestran claramente en una tabla dentro de la interfaz de conversación de watsonx Orchestrate.\"), \"\\n\", React.createElement(_components.p, null, \"El agente revisa la lista de clientes y persigue una oportunidad de venta cruzada con John Collins, quien tiene un hijo que recientemente cumplió veinticinco años. Para este producto, cumplir veinticinco años es un hito que requiere que los niños adquieran cobertura de seguro de salud independiente. (Otros estados y países establecen límites de edad diferentes para varios hitos de la familia).\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Seleccione el botón de selección asociado con \", React.createElement(_components.strong, null, \"John Collins\"), \" (1) de la tabla y haga clic en \", React.createElement(_components.strong, null, \"Aplicar\"), \" botón (2) en la ventana de conversación.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Orchestrate/images/101/002.png\",\n    alt: \"\"\n  }), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"automatización-de-la-recomendación-del-producto\"\n  }, React.createElement(_components.h2, {\n    id: \"automatización-de-la-recomendación-del-producto\"\n  }, React.createElement(_components.a, {\n    href: \"#automatización-de-la-recomendación-del-producto\"\n  }, \"Automatización de la recomendación del producto\")), \"\\n\", React.createElement(_components.p, null, \"A continuación, el agente necesita determinar qué productos recomendar para John en función de sus circunstancias y del reciente evento de vida.\"), \"\\n\", React.createElement(_components.p, null, \"Los detalles del cliente de Salesforce se envían automáticamente al motor de decisiones incorporado de watsonx Orchestrate y se muestran las recomendaciones de upsell. Tras bambalinas, el motor de decisión aplicó lógica empresarial que tuvo en cuenta muchos atributos diferentes específicos de este cliente (John Collins), como la edad de su hijo, las condiciones preexistentes y la cobertura actual. Entonces la IA aplicó el conocimiento del producto para determinar los mejores productos para recomendar.\"), \"\\n\", React.createElement(_components.p, null, \"En este caso, el motor de decisión recomendó el Plan de Mercado a nivel de Plata, también ha creado la solicitud que se someterá al modelo de IA generativa para crear el correo electrónico, y establecer el tamaño del correo electrónico para estar entre 400 y 500 tokens.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Resalte la solicitud creada por la habilidad de decisión para el cliente seleccionado, en función de sus circunstancias.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Orchestrate/images/101/003.png\",\n    alt: \"\"\n  }), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"generar-y-enviar-un-correo-electrónico-personalizado\"\n  }, React.createElement(_components.h2, {\n    id: \"generar-y-enviar-un-correo-electrónico-personalizado\"\n  }, React.createElement(_components.a, {\n    href: \"#generar-y-enviar-un-correo-electrónico-personalizado\"\n  }, \"Generar y enviar un correo electrónico personalizado\")), \"\\n\", React.createElement(_components.p, null, \"Los correos electrónicos personalizados aumentan la probabilidad de conversión. IBM watsonx Orchestratate utiliza uno de los modelos de lenguaje grande (LLM) de IBM, construido en la plataforma watsonx.ai. Este modelo genera un correo electrónico personalizado para el cliente seleccionado. El perfeccionamiento de la solicitud de IA para generar un correo electrónico correctamente formateado suele ser una actividad que consume mucho tiempo. Para hacer esto más rápido y repetible para los vendedores de seguros, watsonx Orchestrate utiliza una solicitud de IA de plantilla a la que añade el cliente dinámico y los datos del producto.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"En el \", React.createElement(_components.strong, null, \"Solicitud\"), \" campo, \", React.createElement(_components.strong, null, \"resaltar\"), \" (1) el indicador actualizado que ahora incluye instrucciones para el modelo de IA generativo, incluido el nombre del cliente, combinado con la solicitud generada por el motor de decisiones. Haga clic en \", React.createElement(_components.strong, null, \"Aplicar\"), \" (2) y la solicitud se presentará en el modelo de IA generativo. Nota: la generación de correo electrónico tardará 30 segundos en completarse.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Orchestrate/images/101/004.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"IBM watsonx Orchestrate lanza su habilidad de Outlook fuera de la caja y rellena un correo electrónico con los datos de contacto del cliente y el correo electrónico generado que contiene la propuesta. El vendedor de seguros puede ahora revisar el contenido generado para la exactitud y agregar cualquier otra información para asegurar que la propuesta sea relevante para John. Los modelos de IA generativos proporcionados por IBM están específicamente formados en datos curados para producir resultados adecuados para fines empresariales, pero todavía es importante que el agente lo revise. Este enfoque 'humano en el bucle' es vital, queremos ahorrar tiempo aprovechando la IA para generar el grueso del contenido, pero todavía queremos que el agente tenga el control general.\"), \"\\n\", React.createElement(_components.p, null, \"Puesto que estamos utilizando una habilidad incorporada para manejar el correo electrónico de Outlook, el agente no necesita abrir su cliente de Outlook, el \", React.createElement(_components.strong, null, \"A\"), \" y \", React.createElement(_components.strong, null, \"Asunto\"), \" los campos se han rellenado previamente y el texto generado por IA se ha insertado en el \", React.createElement(_components.strong, null, \"Contenido\"), \".\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Revise el correo electrónico generado (edite si es necesario) y discuta el texto generado por watsonx.ai que se insertó automáticamente en el \", React.createElement(_components.strong, null, \"Contenido\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Orchestrate/images/101/005.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Nota:\"), \" Una LLM es no determinista, para la misma entrada puede generar una salida ligeramente diferente. Los modelos están constantemente reformando y evolucionando, por lo que su salida puede diferir de esta imagen.\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"3\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Cambie la dirección de correo electrónico en el \", React.createElement(_components.strong, null, \"A\"), \" (1) campo a su propio email.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Orchestrate/images/101/006.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"4\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Desplácese hacia abajo y pulse \", React.createElement(_components.strong, null, \"Aplicar\"), \" (2) en la ventana de conversación de watsonx Orchestrate.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/Orchestrate/images/101/007.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"IBM watsonx Orchestrate le indicará que el correo electrónico se ha enviado.\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"resumen\"\n  }, React.createElement(_components.h2, {\n    id: \"resumen\"\n  }, React.createElement(_components.a, {\n    href: \"#resumen\"\n  }, \"Resumen\")), \"\\n\", React.createElement(_components.p, null, \"Utilizando un ejemplo de upsell/cross-sell, este laboratorio mostró cómo watsonx Orchestrate proporciona una interfaz conversacional para que los agentes de ventas de seguros realicen sus tareas repetitivas y reduzcan el tiempo necesario para completar las tareas de negocio comunes, como la búsqueda a través de informes CRM para oportunidades de ventas.\"), \"\\n\", React.createElement(_components.p, null, \"La experiencia del producto se utilizó para crear una automatización que proporcionaba recomendaciones óptimas del producto y se utilizó un LLM para generar el borrador de propuesta para que el agente revisara.\"), \"\\n\", React.createElement(_components.p, null, \"Al proporcionar un catálogo de habilidades, watsonx Orchestrate eliminó la necesidad de que el agente de seguros mueva manualmente los datos entre diferentes aplicaciones de fondo. Watsonx Orchestrate racionalizó el trabajo del agente secuenciando una serie de habilidades dentro de una única interfaz unificada, impulsando la productividad de este agente, reduciendo los errores y permitiéndoles enfocarse en el trabajo de mayor valor.\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/VAD-VAR-Workshop/VAD-VAR-Workshop/content/Watsonx/Orchestrate/101.es.md\";\nimport React, {useRef, useState} from 'react';\nimport cx from 'classnames';\nimport SEO from '@components/SEO';\nimport PageHeader from '@components/PageHeader';\nimport MDXWrapper from '@components/MDXWrapper';\nimport ContentWrapper from '@components/ContentWrapper';\nimport TableOfContents from '@components/TableOfContents';\nimport * as styles from '@styles/pages/{mdx.fields__slug}.module.scss';\nconst Content = props => {\n  const {data: {mdx: {tableOfContents: {items: tocItems}, frontmatter: {toc = true, title, timeToComplete, updated}}}, children} = props;\n  const articleRef = useRef(null);\n  const {0: currSection} = useState('');\n  const showToc = (toc === null ? true : toc) && tocItems;\n  return React.createElement(React.Fragment, null, React.createElement(PageHeader, {\n    timeToComplete,\n    updated\n  }, tocItems[0].title || title || ''), React.createElement(ContentWrapper, {\n    className: styles.wrapper\n  }, React.createElement(\"article\", {\n    className: cx(styles.article, !showToc && styles.noToc),\n    ref: articleRef\n  }, React.createElement(MDXWrapper, {\n    components: {\n      h1: () => null\n    }\n  }, children)), showToc && React.createElement(TableOfContents, {\n    itemsList: tocItems,\n    maxDepth: 2,\n    currSection: currSection\n  })));\n};\nconst pageQuery = \"3587680389\";\nexport const Head = props => {\n  const {location: {pathname}, data: {mdx: {frontmatter: {title}, tableOfContents: {items}}}} = props;\n  return React.createElement(SEO, {\n    pathname,\n    title: title || items[0].title || undefined\n  });\n};\nContent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Content, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","section","h1","p","ol","li","ul","h2","a","strong","img","_provideComponents","components","React","className","id","href","src","alt","start","wrapper","MDXLayout","Content","data","mdx","tableOfContents","items","tocItems","frontmatter","toc","title","timeToComplete","updated","children","articleRef","useRef","currSection","useState","showToc","PageHeader","ContentWrapper","styles","cx","ref","MDXWrapper","TableOfContents","itemsList","maxDepth","Head","location","pathname","SEO","undefined","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}